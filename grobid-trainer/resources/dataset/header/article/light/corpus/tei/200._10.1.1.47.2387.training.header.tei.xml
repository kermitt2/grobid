<?xml version="1.0" ?>
<tei xml:space="preserve">
	<teiHeader>
		<fileDesc xml:id="_200._10.1.1.47.2387"/>
	</teiHeader>
	<text xml:lang="en">
		<front>
<lb/>
	<docTitle>
	<titlePart>E cient PRAM Simulation on a<lb/> Distributed Memory Machine<lb/></titlePart>
	</docTitle>

	<byline>
	<docAuthor>Richard M. Karp<lb/></docAuthor>
	</byline>

	<byline>
	<affiliation>University of California at Berkeley and<lb/> International Computer Science Institute,</affiliation>
	</byline>

	<address>Berkeley, CA<lb/></address>

	<byline>
	<docAuthor>Michael Luby y<lb/> </docAuthor>
	</byline>

	<byline>
	<affiliation>International Computer Science Institute,</affiliation>
	</byline>

	<address>Berkeley, CA<lb/></address>

	and
	<byline>
	<docAuthor>UC Berkeley<lb/> </docAuthor>
	</byline>

	<byline>
	<docAuthor>Friedhelm Meyer auf der Heide z<lb/></docAuthor>
	</byline>

	<byline>
	<affiliation>Heinz Nixdorf Institute and Computer Science Department,<lb/> University of Paderborn,</affiliation>
	</byline>

	<address>Germany<lb/></address>

	<date>August 8, 1994</date>

	Abstract<lb/>
	<div type="abstract">We present algorithms for the randomized simulation of a shared memory machine<lb/> (PRAM) on a Distributed Memory Machine (DMM). In a PRAM, memory con icts<lb/> occur only through concurrent access to the same cell, whereas the memory of a DMM<lb/> is divided into modules, one for each processor, and concurrent accesses to the same<lb/> module create a con ict. The delay of a simulation is the time needed to simulate<lb/> a parallel memory access of the PRAM. Any general simulation of an m processor<lb/> PRAM on a n processor DMM will necessarily have delay at least m=n. A randomized<lb/> simulation is called time-processor optimal if the delay is O(m=n) with high probability.<lb/> Using a novel simulation scheme based on hashing we obtain a time-processor optimal<lb/> simulation with delay O(loglog(n)log (n)). The best previous simulations use a simpler<lb/> scheme based on hashing and have much larger delay: (log(n)= loglog(n)) for the<lb/> simulation of an n processor PRAM on an n processor DMM, and (log(n)) in the case<lb/> where the simulation is time-processor optimal.<lb/> Our simulations use several (2 or 3) hash functions to distribute the shared memory<lb/> among the memory modules of the PRAM. The stochastic processes modelling the<lb/> behaviour of our algorithms and their analyses based on powerful classes of universal<lb/> hash functions may be of independent interest.<lb/></div>

	<note type="funding">Research partially supported by NSF/DARPA Grant CCR-9005448<lb/> y Research partially supported by NSF operating grant CCR-9016468 and by grant No. 89-00312 from<lb/> the United States-Israel Binational Science Foundation (BSF), Jerusalem, Israel.<lb/>
	z Part of work was done during a visit at the International Computer Science Institute at Berkeley;<lb/> supported in part by DFG-Forschergruppe \E ziente Nutzung massiv paralleler Systeme, Teilprojekt 4&quot;,<lb/> and by the Esprit Basic Research Action Nr. 7141 (ALCOM II).</note>
		</front>
	</text>
</tei>
