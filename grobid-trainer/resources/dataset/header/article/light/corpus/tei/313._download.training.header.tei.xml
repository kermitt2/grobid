<?xml version="1.0" ?>
<tei xml:space="preserve">
	<teiHeader>
		<fileDesc xml:id="_313._download"/>
	</teiHeader>
	<text xml:lang="en">
		<front>
<lb/>
	
	<docTitle>
	<titlePart>Raising Roofs, Crashing Cycles, and Playing Pool:<lb/> Applications of a Data Structure for Finding Pairwise Interactions<lb/></titlePart>
	</docTitle>

	<byline>
	<docAuthor>David Eppstein y<lb/> Je Erickson z<lb/></docAuthor>
	</byline>

	<note type="submission">Submitted to Discrete &amp; Computational Geometry<lb/></note>

	<date>July 1, 1998</date>

	Abstract<lb/>
	<div type="abstract">The straight skeleton of a polygon is a variant of the medial axis, introduced by<lb/> Aichholzer et al., de ned by a shrinking process in which each edge of the polygon<lb/> moves inward at a xed rate. We construct the straight skeleton of an n-gon with r<lb/> re ex vertices in time O(n 1+&quot; + n 8=11+&quot; r 9=11+&quot; ), for any xed &quot; &gt; 0, improving the<lb/> previous best upper bound of O(nr log n). Our algorithm simulates the sequence of<lb/> collisions between edges and vertices during the shrinking process, using a technique of<lb/> Eppstein for maintaining extrema of binary functions to reduce the problem of nding<lb/> successive interactions to two dynamic range query problems: (1) maintain a changing<lb/> set of triangles in IR 3 and answer queries asking which triangle would be rst hit by<lb/> a query ray, and (2) maintain a changing set of rays in IR 3 and answer queries asking<lb/> for the lowest intersection of any ray with a query triangle. We also exploit a novel<lb/> characterization of the straight skeleton as a lower envelope of triangles in IR 3 . The same<lb/> time bounds apply to constructing non-self-intersecting o set curves with mitered or<lb/> beveled corners, and similar methods extend to other problems of simulating collisions<lb/> and other pairwise interactions among sets of moving objects.<lb/></div>

	An extended abstract of this paper was presented at the 
	<meeting>14th Annual ACM Symposium on Computational<lb/> Geometry</meeting>
	29]. See 
	<ptr type="web">http://www:cs:duke:edu/ je e/pubs/cycles:html</ptr> for the most recent version of this paper.<lb/>
	
	<byline>
	<affiliation>y Department of Information and Computer Science, University of California,</affiliation>
	</byline>

	<address>Irvine, CA 92697, USA;</address>

	<email>epp-<lb/>stein@ics.uci.edu</email>
	; 
	<ptr type="web">http://www:ics:uci:edu/ eppstein</ptr>. 

	<note type="funding">Research partially supported by NSF grant CCR-9258355 and<lb/> by matching funds from Xerox Corporation.<lb/></note>

	<byline>
	<affiliation>z Center for Geometric Computing, Department of Computer Science, Duke University,</affiliation>
	</byline>

	<address>Box 90129, Durham,<lb/> NC 27708{0129, USA;</address>

	<email>je e@cs.duke.edu</email>
	; 
	<ptr type="web">http://www:cs:duke:edu/ je e</ptr>. 

	<note type="funding">Research supported by NSF grant DMS-<lb/>9627683 and by U. S. Army Research O ce MURI grant DAAH04-96-1-0013.</note>
		</front>
	</text>
</tei>
