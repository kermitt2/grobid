<?xml version="1.0" ?>
<tei xml:space="preserve">
	<teiHeader>
		<fileDesc xml:id="_0"/>
	</teiHeader>
	<text xml:lang="en">
			<front>MUMMALS: multiple sequence alignment improved by <lb/>using hidden Markov models with local structural <lb/>information <lb/>Jimin Pei 1, * and Nick V. Grishin 1,2 <lb/>1 Howard Hughes Medical Institute and 2 Department of Biochemistry, University of Texas Southwestern Medical Center <lb/>at Dallas, 5323 Harry Hines Boulevard, Dallas, TX 75390-9050, USA <lb/>Received May 10, 2006; Revised June 26, 2006; Accepted July 5, 2006 <lb/>ABSTRACT <lb/>We have developed MUMMALS, a program to con-<lb/>struct multiple protein sequence alignment using <lb/>probabilistic consistency. MUMMALS improves <lb/>alignment quality by using pairwise alignment <lb/>hidden Markov models (HMMs) with multiple match <lb/>states that describe local structural information <lb/>without exploiting explicit structure predictions. <lb/>Parameters for such models have been estimated <lb/>from a large library of structure-based alignments. <lb/>We show that (i) on remote homologs, MUMMALS <lb/>achieves statistically best accuracy among several <lb/>leading aligners, such as ProbCons, MAFFT and <lb/>MUSCLE, albeit the average improvement is small, <lb/>in the order of several percent; (ii) a large collection <lb/>(.10 000) of automatically computed pairwise struc-<lb/>ture alignments of divergent protein domains is <lb/>superior to smaller but carefully curated datasets <lb/>for estimation of alignment parameters and perfor-<lb/>mance tests; (iii) reference-independent evaluation <lb/>of alignment quality using sequence alignment-<lb/>dependent structure superpositions correlates well <lb/>with reference-dependent evaluation that compares <lb/>sequence-based alignments to structure-based <lb/>reference alignments. <lb/></front>

			<body>INTRODUCTION <lb/>Genome sequencing events have resulted in a rapid <lb/>accumulation of protein sequences in public databases. <lb/>As an essential tool in computational sequence analysis, <lb/>sequence alignment is widely used in similarity searches, <lb/>structure modeling, functional prediction and phylogenetic <lb/>analysis (1-5). Construction of a multiple sequence alignment <lb/>aims at arranging residues with inferred common evolution-<lb/>ary origin in the same position for a set of sequences (6). <lb/>Valuable information regarding position-specific residue <lb/>usage and conservation can be extracted numerically from a <lb/>multiple sequence alignment for various applications. <lb/>A classical method for constructing a multiple alignment <lb/>aligns sequences progressively, as exemplified by the program <lb/>ClustalW (7). Guided by a tree or a dendrogram that reflects <lb/>the similarities among sequences, a progressive method <lb/>makes a series of pairwise alignments for neighboring seq-<lb/>uences or pre-aligned sequence groups. In this way, similar <lb/>sequences are aligned prior to divergent sequences. However, <lb/>progressive methods do not correct errors made in each pair-<lb/>wise alignment step. While similar sequences can be aligned <lb/>with acceptable quality, progressive methods using general <lb/>amino acid substitution matrices have limited success in obtain-<lb/>ing high-quality alignments for divergent sequences (8). <lb/>Two main techniques are utilized to correct or minimize <lb/>mistakes made in the progressive alignment process. One is <lb/>iterative refinement of the alignment after the progressive <lb/>steps (9-11), e.g. by repeatedly dividing the aligned sequences <lb/>into two groups and realigning the groups. The other tech-<lb/>nique, pioneered by the program T-COFFEE (12), makes <lb/>a consistency measure among a set of pairwise sequence <lb/>alignments before the progressive alignment steps. Such <lb/>consistency-based scoring functions are superior to scoring <lb/>functions based on general amino acid substitution <lb/>matrices (12). <lb/>Improving pairwise sequence alignments is a key to <lb/>provide high-quality starting materials for a consistency <lb/>measure. The most common technique of constructing a <lb/>protein pairwise alignment utilizes a substitution matrix of <lb/>amino acids and a dynamic programming algorithm with <lb/>gap penalties (13,14). Commonly used substitution matrices, <lb/>such as the BLOSUM or PAM series matrices (15,16) <lb/>are derived from large-scale analysis of relatively similar <lb/>sequences. Other matrices have been derived from distant <lb/>homologs based on structural alignments (17,18), and they <lb/>are more suitable for aligning divergent sequences. Several <lb/>studies have also shown that real or predicted local structural <lb/>information can be used to improve pairwise alignment <lb/>quality (19,20). <lb/></body>

			<front>*To whom correspondence should be addressed. Tel: +1 214 645 5951; Fax: +1 214 645 5948; Email: jpei@chop.swmed.edu <lb/>Ã“ 2006 The Author(s). <lb/>This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (http://creativecommons.org/licenses/ <lb/>by-nc/2.0/uk/) which permits unrestricted non-commercial use, distribution, and reproduction in any medium, provided the original work is properly cited. <lb/>4364-4374 Nucleic Acids Research, 2006, Vol. 34, No. 16 <lb/>Published online 26 August 2006 <lb/>doi:10.1093/nar/gkl514 <lb/></front>

			<body>Another approach to constructing a pairwise alignment <lb/>relies on a hidden Markov model (HMM) (21,22). In a simple <lb/>HMM for global pairwise alignment, aligned residue pairs <lb/>are modeled by a hidden match state, while insertions and <lb/>deletions are modeled by two hidden states that generate <lb/>unmatched residues in either of the two sequences (22). In <lb/>addition to being able to find an optimal alignment, a pairwise <lb/>alignment HMM can be used to estimate the posterior pro-<lb/>bability of any residue in the first sequence being aligned <lb/>to any residue in the second sequence (22). These residue <lb/>match probabilities have been used in ProbCons (23), a <lb/>multiple sequence alignment program based on probabilistic <lb/>consistency. <lb/>In this study, we aim to improve alignment quality <lb/>by using: (i) more complex pairwise alignment HMMs that <lb/>incorporate local structural information and (ii) better <lb/>estimation of HMM parameters from a large set of structural <lb/>alignments of divergent domain pairs from SCOP database <lb/>(24). We show that these two techniques improve both <lb/>pairwise alignments and probabilistic consistency-based <lb/>multiple sequence alignments in reference-dependent and <lb/>reference-independent tests. <lb/>MATERIALS AND METHODS <lb/>Training and testing datasets of SCOP domain pairs <lb/>Protein domain sequences and structures were obtained from <lb/>the ASTRAL database (25) based on SCOP (24) version 1.69. <lb/>We used the dataset consisting of representatives at the 40% <lb/>sequence identity threshold (SCOP40). Domains from SCOP <lb/>classes 1 to 4 [all alpha, all beta, alpha and beta (a/b), alpha <lb/>and beta (a + b)] were selected. For each domain pair from <lb/>the same superfamily of SCOP40, we computed a structural <lb/>alignment using the program DaliLite (26). Alignments with <lb/>coverage (fraction of aligned region to the length of the <lb/>shorter sequence) less than 0.6 were removed. The remaining <lb/>alignments were divided into four datasets corresponding <lb/>to four sequence identity bins: &lt;10, 10-15, 15-20 and <lb/>20-40%. The method for calculating sequence identity that <lb/>takes into account unaligned regions is described in <lb/>Supplementary Data. To apply cross validation training and <lb/>testing, we divided the domain pairs in each identity bin <lb/>into four subsets at the SCOP fold level, so that no domains <lb/>belonging to the same SCOP fold were shared by any two <lb/>subsets. We estimated HMM parameters using alignments <lb/>in three subsets and tested the programs on representative <lb/>domain pairs of the remaining fourth subset. This procedure <lb/>was performed four times corresponding to four ways of <lb/>partitioning into training and testing datasets. To obtain <lb/>representative alignments from a subset for testing, we <lb/>randomly selected one domain pair from each SCOP fold <lb/>in that subset. The number of domain pairs in each training <lb/>dataset is larger than 10 000 (Supplementary Table S1). <lb/>HMMs of pairwise sequence alignment <lb/>Description of HMM structures. The standard pairwise <lb/>alignment HMM has three hidden states emitting residues: <lb/>a single match state &apos;M&apos; emitting residue pairs, an &apos;X&apos; state <lb/>emitting residues in the first sequence and a &apos;Y&apos; state emitting <lb/>residues in the second sequence (Figure 1b) (22). This model <lb/>structure is named HMM_1_1_0 (the format of HMM names <lb/>is described below and in Table 1 and Supplementary Table S2). <lb/>The novelty of our complex HMMs is the introduction of <lb/>more match states based on DaliLite structural alignments, <lb/>which have aligned core blocks (structurally superimposable, <lb/>shown in uppercase letters) and unaligned regions (struc-<lb/>turally not superimposable, shown in lowercase letters) <lb/>(a) Structure-based alignment and hidden state paths <lb/>(b) HMM_1_1_0 <lb/>(d) HMM_1_3_1 <lb/>(c) HMM_1_1_1 <lb/>Figure 1. (a) An illustration of structure-based sequence alignment and hidden state paths. In Sequences 1 and 2, uppercase letters and lowercase letters represent <lb/>aligned core blocks and unaligned regions, respectively. If two corresponding unaligned regions bounded by the same two core blocks are of different length, we <lb/>split the shorter one into two pieces and introduce contiguous gaps in the middle. For both N-and C-terminal ends, the shorter unaligned region is pushed toward <lb/>the core blocks. Secondary structure (ss) types (helix, &apos;h&apos;; strand, &apos;e&apos;; coil, &apos;c&apos;) are shown for Sequence 1. The hidden state paths for three models are shown <lb/>below the amino acid sequences. (b) Model structure of HMM_1_1_0. Residue pairs in unaligned regions are modeled using the same match state (&apos;M&apos;) as those <lb/>in the aligned blocks. Insertions in the first sequence and second sequence are modeled using states &apos;X&apos; and &apos;Y&apos;, respectively. (c) Model structure of <lb/>HMM_1_1_1. Residue pairs in the unaligned regions are modeled using a different match state (&apos;U&apos;) than the match state in the core blocks (&apos;M&apos;). (d) Model <lb/>structure of HMM_1_3_1. Residue pairs in aligned core blocks are modeled using three match states (&apos;H&apos;, &apos;S&apos;, &apos;C&apos;) according to three secondary structure types <lb/>of the first sequence. In (b), (c) and (d), match states are shown as squares and insertion states are shown as diamonds. Begin state, end state, and transitions from <lb/>or to them are present in these models, but are not shown. <lb/></body>

			<note place="headnote">Nucleic Acids Research, 2006, Vol. 34, No. 16</note>

			<page>4365 <lb/></page>

			<body>(Figure 1a). Residue pairs in aligned core blocks can be <lb/>modeled by a match state (&apos;M&apos;). If the two unaligned regions <lb/>in between two core blocks have different and non-zero <lb/>lengths, they can be modeled using a different &apos;match&apos; state <lb/>(&apos;U&apos;, for unaligned) (Figure 1c) and &apos;X&apos; or &apos;Y&apos; state. This <lb/>is done by evenly splitting the unaligned residues in the <lb/>sequence with the shorter unaligned region into two <lb/>segments, placing them beside the two adjacent core blocks <lb/>and separating them by a single stretch of gap symbols. In <lb/>this way, transitions between &apos;X&apos; and &apos;Y&apos; do not occur. <lb/>The residue pair emission probabilities of these artificially <lb/>forced matches in unaligned regions (&apos;U&apos;) are expected <lb/>to be different from those in the core blocks (&apos;M&apos;). This <lb/>model (HMM_1_1_1) has two distinct match states: &apos;M&apos; <lb/>and &apos;U&apos; (Figure 1a and c). <lb/>Furthermore, the residue matches in aligned core blocks <lb/>can be modeled by several distinct match states based on <lb/>the local structure information of the first sequence, for <lb/>instance, secondary structure types (Figure 1d). Since residue <lb/>usage and substitution patterns can vary for different local <lb/>structural environments, the three match states according to <lb/>secondary structure types have different sets of emission <lb/>probabilities of 400 residue pairs. Secondary structure types <lb/>were assigned using program DSSP (27) for SCOP domains. <lb/>The model that incorporates three secondary structure types <lb/>(&apos;H&apos;: helix, &apos;S&apos;: strand and &apos;C&apos;: coil) of the first sequence <lb/>and unaligned match state (&apos;U&apos;) is named HMM_1_3_1 <lb/>(Figure 1d). Similarly, multiple match states can be intro-<lb/>duced based on several solvent accessibility categories, or a <lb/>combination of solvent accessibility categories and secondary <lb/>structure types. Solvent accessibilities of residue sidechains <lb/>were calculated by program NACCESS (28). Three solvent <lb/>accessibility categories were used based on our previous <lb/>studies (29). The model that incorporates three solvent <lb/>accessibility categories and unaligned match state is named <lb/>HMM_3_1_1. Combination of three solvent accessibility <lb/>categories and three secondary structure types results in <lb/>nine classes of match states for the core blocks (model <lb/>HMM_3_3_1). <lb/>Each HMM model is named in the format <lb/>&apos;HMM_solv_ss_u&apos;, where &apos;solv&apos; is the number of solvent <lb/>accessibility categories, &apos;ss&apos; is the number of secondary <lb/>structure types, and &apos;u&apos; is 1 if unaligned regions are modeled <lb/>with an additional match state. Some statistics about the five <lb/>HMMs, such as the number of hidden states, the number of <lb/>parameters and time complexity, are listed in Supplementary <lb/>Table S2. <lb/>Estimation of HMM parameters. We used a supervised <lb/>learning method to estimate HMM parameters from DaliLite <lb/>structural alignments, since hidden state paths are known for <lb/>them (Figure 1a) (22). These parameters are: transition pro-<lb/>babilities among hidden states [match state(s), &apos;X&apos; state, <lb/>&apos;Y&apos; state, begin state and end state], emission probabilities <lb/>of residue pairs for each match state, and residue emission <lb/>probabilities for &apos;X&apos; state and &apos;Y&apos; state (22). Given a training <lb/>dataset, we assign a weight to each sequence. If a sequence <lb/>occurs N times in the dataset, its weight is 1/N 1/2 . For large <lb/>SCOP superfamilies, one sequence is involved in a large <lb/>number of pairwise alignments. Sequence weighting aims <lb/>to reduce the bias introduced by large superfamilies and <lb/>folds. The parameters were estimated from weighted <lb/>counts of observed transitions and emissions in DaliLite <lb/>alignments (22). <lb/>The supervised learning method was also used to estimate <lb/>model parameters from pairwise alignments in BAliBASE2.0 <lb/>(30), from which ProbCons derived its HMM parameters <lb/>with a different approach (23). These alignments also have <lb/>core blocks assigned (uppercase letters). However, local <lb/>structural information is not available for every sequence. <lb/>Therefore, from BAliBASE2.0 pairwise alignments, we <lb/>derived parameters only for models HMM_1_1_0 and <lb/>HMM_1_1_1 that do not have local structure-dependent <lb/>match states. <lb/>Pairwise alignment with optimal match probabilities. <lb/>We apply standard forward and backward algorithms (22) <lb/>to align two sequences x Â¼ (x 1 , x 2 , . . . , x m ) and y Â¼ <lb/>(y 1 , y 2 , . . . , y n ) (m and n are the lengths of x and y). Given <lb/>a pairwise HMM, the forward algorithm applies a dynamic <lb/>programming technique to calculate the probability of <lb/>observing two subsequences (x 1 , . . . , x i ) and (y 1 , . . . , y j ) gen-<lb/>erated by an HMM, with the last position of the two sub-<lb/>sequences being in a certain hidden state. The formula of <lb/>forward probability is: <lb/>F K Ã°iâ€šjÃž Â¼ PÂ½x 1 â€š. . .â€š x i â€šy 1 â€š . . .â€š y j â€špÃ°iâ€šjÃž Â¼ K <lb/>1 <lb/>Here, p(i, j) is the hidden state of the last position. K is one <lb/>of the hidden states. For example, for model HMM_1_3_1, <lb/>K is from the set {&apos;H&apos;, &apos;S&apos;, &apos;C&apos;, &apos;U&apos;, &apos;X&apos;, &apos;Y&apos;} (Figure 1d). <lb/>The backward algorithm calculates the probability of <lb/>generating two subsequences (x i+1 , . . . , x m ) and (y j+1 , . . . , y n ), <lb/>given the condition that the previous position of the two <lb/>subsequences is of a certain type of hidden state. The formula <lb/>of the backward probability is: <lb/>B K Ã°iâ€šjÃž Â¼ PÂ½x iÃ¾1 â€š. . .â€š x m â€šy jÃ¾1 â€š. . .â€š y n j pÃ°iâ€š jÃž Â¼ K <lb/>2 <lb/>The following formula can be derived (22): <lb/>PÂ½pÃ°iâ€šjÃž Â¼ K j xâ€šy Â¼ F K Ã°iâ€š jÃž * B K Ã°iâ€š jÃž/PÃ°xâ€š yÃžâ€š <lb/>3 <lb/>where P[p(i, j) Â¼ K j x, y] is the probability of aligned residue <lb/>pair (x i , y j ) being generated by a certain hidden match state K <lb/>given the two full-length sequences x and y, and P(x, y) is the <lb/>full probability of observing sequences x and y given the <lb/>model. P(x, y) can be calculated by forward algorithm or <lb/>backward algorithm (22). <lb/>The posterior probability (22,31) of residue i in sequence x <lb/>being aligned to residue j in sequence y (match probability) <lb/>can be calculated as: <lb/>PÃ°x i aligned to y j Ãž Â¼ <lb/>X <lb/>K m <lb/>PÂ½pÃ°iâ€šjÃž Â¼ K m j xâ€šy <lb/>4 <lb/>Here, K m belongs to a set of match states. For model <lb/>HMM_1_3_1, K m is from the set {&apos;H&apos;, &apos;S&apos;, &apos;C&apos;, &apos;U&apos;}. <lb/>We then find the alignment path that maximizes the sum of <lb/>match probabilities of residue pairs in the alignment path <lb/>using dynamic programming with zero gap penalties. It has <lb/>been shown that this technique can give better alignment <lb/>quality than Viterbi algorithm (23). <lb/></body>

			<page>4366</page> 

			<note place="headnote">Nucleic Acids Research, 2006, Vol. 34, No. 16 <lb/></note>

			<body>Multiple sequence alignment procedure <lb/>We have developed a progressive multiple sequence align-<lb/>ment program implementing our HMMs (MUMMALS, <lb/>standing for MUltiple alignment with Multiple MAtch state <lb/>models of Local Structure). It applies a probabilistic consis-<lb/>tency scoring function similar to the one in ProbCons (23). <lb/>First, a tree is built-in a fast way based on a k-mer count <lb/>method (10). An initial alignment is built progressively <lb/>guided by the tree with a simple sum-of-pairs scoring func-<lb/>tion. A second tree is then built with a UPGMA method <lb/>based on sequence identities calculated from the initial <lb/>alignment. We then apply the probabilistic consistency stra-<lb/>tegy as described by Do et al. (23). For each sequence pair, <lb/>we calculate the match probabilities of residue pairs using <lb/>one of the HMMs. These probability matrices are subject to <lb/>consistency measure, which involves multiplications of the <lb/>matrices (23). Finally, MUMMALS progressively aligns the <lb/>sequences guided by the second tree using the consistency-<lb/>based scoring function. <lb/>To properly balance alignment speed and accuracy, we <lb/>have also applied a two-stage alignment strategy similar to <lb/>the one used in our program PCMA (32). In the first stage, <lb/>highly similar sequences are progressively aligned in a fast <lb/>way without consistency scoring. The scoring function in <lb/>this stage is a weighted sum-of-pairs measure of BLOSUM62 <lb/>scores (16). If two neighboring groups on a tree have an <lb/>average sequence identity higher than a certain threshold, <lb/>they are aligned in this fast way. The result of the first <lb/>stage is a set of pre-aligned groups that are relatively diver-<lb/>gent from each other. In the second alignment stage, one <lb/>representative sequence is selected from each pre-aligned <lb/>group, and these representative sequences are subject to the <lb/>more time-consuming probabilistic consistency measure. <lb/>Then the representatives are aligned progressively according <lb/>to the consistency-based scoring function. Finally, the pre-<lb/>aligned groups obtained in the first stage are merged accord-<lb/>ing to the alignment of the representatives to obtain the final <lb/>alignment of all sequences. <lb/>Performance assessment of multiple sequence <lb/>alignment programs <lb/>To test multiple sequence alignment programs, we used the <lb/>same representative SCOP pairs selected for pairwise align-<lb/>ment tests (Supplementary Table S1). For each domain, we <lb/>added up to 24 homologs, which were obtained from PSI-<lb/>BLAST searches (1) with five iterations and an E-value <lb/>cut-off of 0.0001. We removed highly similar sequences <lb/>(&gt;97% identity) and sequence fragments (coverage less <lb/>than half of the query) before randomly selecting up to 24 <lb/>homologs. This procedure is similar to the one used to <lb/>build the PREFAB database (10). Similar to pairwise align-<lb/>ment tests, the 4-fold cross validation approach is applied <lb/>to the tests of MUMMALS. <lb/>Two large testing datasets compiled by other researchers <lb/>were used as well. One is the SABmark database (version <lb/>1.65) (33), which is based on homologous SCOP domains, <lb/>and the other is PREFAB database (version 4) (10), which <lb/>is based on structural alignments and homologous sequences <lb/>from database searches. Alignment quality scores (Q-scores) <lb/>were calculated using the built-in programs in SABmark and <lb/>PREFAB packages. The Q-score is the fraction of the number <lb/>of correctly aligned residue pairs in the test alignment to the <lb/>total number of aligned residue pairs in the reference align-<lb/>ment. Additional series of smaller datasets constructed by <lb/>MAFFT authors (11) were 55 HOMSTRAD (34) structural <lb/>alignments with various numbers of close homologs added <lb/>(&apos;HOM + X&apos;, &apos;X&apos; is the number of close homologs added <lb/>and is 0, 20, 50 or 100). To obtain more balanced datasets <lb/>from &apos;HOM + 100&apos;, we used BLASTCLUST to cluster <lb/>sequences in any &apos;HOM + 100&apos; alignment at 50 or 60% iden-<lb/>tity level, and selected up to two homologs in each sequence <lb/>cluster. The resulting datasets are called &apos;HOM + 100_bcl50&apos; <lb/>and &apos;HOM + 100_bcl60&apos;. We also tested programs on 218 <lb/>BAliBASE3.0 (35) alignments with full-length sequences. <lb/>The column scores (the fraction of entirely correct columns) <lb/>were reported in addition to Q-scores for BAliBASE3.0. <lb/>Wilcoxon signed-ranks tests were performed to calculate <lb/>statistical significance of comparisons between alignment <lb/>programs, which include ProbCons (version 1.10) (23), <lb/>MAFFT (version 5.667) (11) with several options, MUSCLE <lb/>(version 3.52) (10) and ClustalW (version 1.83) (7). <lb/>In addition to Q-score, we utilized a reference-independent <lb/>assessment of alignment quality from a structural modeling <lb/>perspective. Given a test sequence alignment of two SCOP <lb/>domains with known structures, corresponding Ca atoms in <lb/>aligned residue pairs were used as equivalent points for struc-<lb/>tural superposition to minimize the root mean square distance <lb/>(RMSD). The structural similarity scores were calculated <lb/>based on this forced superposition of the aligned residue <lb/>pairs. The following scores were used: DALI Z-score (36), <lb/>GDT score (37), TM-score (38), 3D-score (39) and two <lb/>LiveBench contact scores (39) (see Supplementary Data for <lb/>the equations of 3D-score and LiveBench contact scores). <lb/>An alignment with better quality should have a higher <lb/>similarity of the two structures superimposed in a sequence-<lb/>dependent way described above, and thus have a larger struc-<lb/>tural score. Two reference-independent sequence similarity <lb/>scores were also calculated for aligned residue pairs in a <lb/>test alignment: sequence identity and average BLOSUM62 <lb/>scores (16). Additionally, each of the scores was rescaled to <lb/>take into account a random model (the reversed alignment), <lb/>self-comparisons and alignment coverage (see Supplementary <lb/>Data for details). Such rescaling places each score between 0 <lb/>(random match) and 1 (self-match) and makes different <lb/>scoring schemes more comparable to each other. <lb/>Availability <lb/>The MUMMALS multiple alignment web server is at: <lb/>http://prodata.swmed.edu/mummals/, with the source code <lb/>of MUMMALS available for download. <lb/>RESULTS <lb/>Complex HMMs with local structural information <lb/>improve pairwise alignments <lb/>Applying a cross validation approach, we tested our pairwise <lb/>alignment HMMs on representative domain pairs from the <lb/>ASTRAL SCOP40 dataset (Table 1 and Supplementary <lb/>Table S3). Model HMM_1_1_0 represents the simplest <lb/></body>

			<note place="headnote">Nucleic Acids Research, 2006, Vol. 34, No. 16</note>

			<page>4367 <lb/></page>

			<body>model with a single match state (Figure 1a). It can serve as a <lb/>control for more complex models, including HMM_1_1_1 <lb/>that assigns residue pairs in unaligned regions to a different <lb/>match state, HMM_1_3_1 that captures secondary structure <lb/>information, HMM_3_1_1 that captures solvent accessibility <lb/>information, and HMM_3_3_1 that has both types of local <lb/>structural information (see Materials and Methods). <lb/>Several conclusions can be drawn from Table 1 and <lb/>Supplementary Table S3. (i) For each testing dataset, the <lb/>best performance is usually achieved with parameters esti-<lb/>mated on the training dataset with the same identity range <lb/>(Supplementary Table S3). For example, models trained on <lb/>alignments with the highest identity range (20-40%) exhibit <lb/>best performance on testing alignments in that range. <lb/>Thus residue substitution and insertion/deletion statistics are <lb/>different for sequence pairs with different degrees of similar-<lb/>ity, in agreement with other reports (16,17). Although models <lb/>trained on pairs with the lowest identity range can perform <lb/>slightly better (2%) on representatives in that range, <lb/>they perform much worse on alignments with the highest <lb/>identity range (nearly 10% decrease as compared to models <lb/>trained on pairs with the highest identity range). (ii) More <lb/>complex HMMs improve alignment quality. For example, <lb/>HMM_1_3_1 performs better than HMM_1_1_1 in almost <lb/>every case. HMM_1_3_1 performs almost equally well to <lb/>HMM_3_3_1. (iii) Our models trained on pairs with <lb/>20-40% identity range perform better than several other <lb/>aligners, such as ProbCons (23), MAFFT (11) with several <lb/>option, MUSCLE (10) and ClustalW (7) on any testing data-<lb/>set. Although the simplest model HMM_1_1_0 has the same <lb/>model structure as the one used in ProbCons, it gives 3-4% <lb/>increase over ProbCons for every testing dataset. The best <lb/>models HMM_1_3_1 and HMM_3_3_1 give 4-5% increase <lb/>over ProbCons. (iv) When trained on BAliBASE2.0, <lb/>HMM_1_1_0 and HMM_1_1_1 exhibit inferior performance <lb/>compared to the same models trained on SCOP domain pairs <lb/>with identity above 20%, suggesting that SCOP domain pairs <lb/>with above 20% identity is a better training dataset than <lb/>BAliBASE2.0. The two models (especially HMM_1_1_1) <lb/>trained on BAliBASE2.0 nevertheless give slightly better <lb/>performance than ProbCons, which was also trained on <lb/>BAliBASE2.0 but with a different training method (unsuper-<lb/>vised learning) (23). <lb/>To further compare the performance of our HMMs and <lb/>the one used in ProbCons, we tested sequence pairs from <lb/>BAliBASE2.0, on which the HMM in ProbCons was trained <lb/>(Supplementary Table S4). BAliBASE2.0 is a manually <lb/>curated database for testing multiple alignment programs. It <lb/>contains core blocks (uppercase letters) with good quality <lb/>and a large fraction of lowercase letter regions where high <lb/>alignment quality is not guaranteed. HMM_1_1_0 and <lb/>HMM_1_1_1 trained on DaliLite alignments of SCOP <lb/>domain pairs with above 20% identity show better results <lb/>than these two models trained on BAliBASE2.0 as well as <lb/>ProbCons, suggesting that the structural alignments of rela-<lb/>tively divergent SCOP domains form a better training set <lb/>than BAliBASE2.0. HMM_1_3_1 trained on the same <lb/>SCOP domain pairs gives the best BAliBASE2.0 results <lb/>(Supplementary Table S4), confirming that a more complex <lb/>model with multiple match states of secondary structures <lb/>improves alignment quality. <lb/>MUMMALS and multiple sequence alignment tests <lb/>We implemented our HMM models in a multiple sequence <lb/>alignment program based on probabilistic consistency. <lb/>Our program is named MUMMALS, standing for MUltiple <lb/>alignment with Multiple MAtch state models of Local <lb/>Structure. MUMMALS was compared to several other pro-<lb/>grams, such as ProbCons (23), MAFFT (11), MUSCLE (10) <lb/>Table 1. Average Q-scores in pairwise alignment tests on representative SCOP40 domain pairs <lb/>Method/Model <lb/>Testing datasets <lb/>SCOP 0-10% <lb/>SCOP 10-15% <lb/>SCOP 15-20% <lb/>SCOP 2-40% <lb/>SCOP All <lb/>(355) <lb/>(432) <lb/>(420) <lb/>(578) <lb/>(1785) <lb/>HMM_1_1_0 a <lb/>0.146 <lb/>0.322 c <lb/>0.568 c <lb/>0.851 c <lb/>0.516 c <lb/>HMM_1_1_1 a <lb/>0.146 <lb/>0.328 c <lb/>0.573 c <lb/>0.855 c <lb/>0.520 c <lb/>HMM_3_1_1 a <lb/>0.150 c <lb/>0.327 c <lb/>0.574 c <lb/>0.858 c <lb/>0.521 c <lb/>HMM_1_3_1 a <lb/>0.152 c <lb/>0.334 c <lb/>0.585 c <lb/>0.858 c <lb/>0.526 c <lb/>HMM_3_3_1 a <lb/>0.151 c <lb/>0.335 c <lb/>0.586 c <lb/>0.860 c <lb/>0.527 c <lb/>HMM_1_1_0 b <lb/>0.123 <lb/>0.295 <lb/>0.551 <lb/>0.843 <lb/>0.498 <lb/>HMM_1_1_1 b <lb/>0.132 <lb/>0.31 <lb/>0.572 <lb/>0.851 <lb/>0.511 <lb/>ProbCons <lb/>0.116 <lb/>0.294 <lb/>0.536 <lb/>0.833 <lb/>0.490 <lb/>MAFFT-fftnsi <lb/>0.087 <lb/>0.256 <lb/>0.496 <lb/>0.809 <lb/>0.457 <lb/>MAFFT-einsi <lb/>0.081 <lb/>0.248 <lb/>0.491 <lb/>0.809 <lb/>0.453 <lb/>MAFFT-linsi <lb/>0.116 <lb/>0.262 <lb/>0.495 <lb/>0.794 <lb/>0.460 <lb/>MAFFT-ginsi <lb/>0.116 <lb/>0.265 <lb/>0.496 <lb/>0.794 <lb/>0.461 <lb/>MUSCLE <lb/>0.139 <lb/>0.293 <lb/>0.507 <lb/>0.817 <lb/>0.482 <lb/>ClustalW <lb/>0.136 <lb/>0.27 <lb/>0.482 <lb/>0.809 <lb/>0.467 <lb/>Each HMM is named in the format &apos;HMM_solv_ss_u&apos;, where &apos;solv&apos; is the number of solvent accessibility categories, &apos;ss&apos; is the number of secondary structure types, <lb/>and &apos;u&apos; is 1 if unaligned regions are modeled with an additional match state. Average Q-scores of four testing datasets with different identity ranges are shown. <lb/>Q-score is the number of correctly aligned residue pairs in the test alignment divided by the total number of aligned residue pairs in the reference alignment. The <lb/>number of alignments in each testing dataset is shown in parentheses and the identity range in % is specified above the number of alignments. The best results of our <lb/>models and the best results of other programs are in bold numbers. <lb/>a <lb/>Trained on DaliLite alignments of SCOP40 domain pairs with 20-40% identity. <lb/>b <lb/>Trained on BAliBASE2.0 pairwise alignments. <lb/>c <lb/>Our model is statistically better than the best of other programs according to Wilcoxon signed-rank test (P &lt; 0.015). <lb/></body>

			<page>4368</page>

			<note place="headnote">Nucleic Acids Research, 2006, Vol. 34, No. 16 <lb/></note>

			<body>and ClustalW (7). We assembled testing datasets of multiple <lb/>sequences by adding homologs to pairwise alignments <lb/>of SCOP domain pairs (see Materials and Methods). For <lb/>three testing datasets with identity ranges below 20%, <lb/>MUMMALS shows 3-4% increase of average Q-score <lb/>over ProbCons when the best-performing HMMs are selected <lb/>(HMM_1_3_1 and HMM_3_3_1) (Table 2). For the dataset <lb/>with identity range above 20%, the improvement is less <lb/>prominent (1%), although still statistically significant (P &lt; <lb/>0.005). Among the other programs tested (ProbCons, several <lb/>options of MAFFT, MUSCLE and ClustalW), MAFFT with <lb/>options [lg]insi usually gives the best performance. Our pro-<lb/>gram still outperforms any MAFFT option by 2% for the <lb/>three datasets with identity ranges below 20%. <lb/>The other two large datasets we have used for testing are <lb/>PREFAB version 4 (PREFAB4) (10) and SABmark version <lb/>1.65 (33). PREFAB4 consists of 1682 alignments based on <lb/>the consensus of two structural alignment programs SOFI <lb/>(40) and CE (41), with up to 24 homologous sequences <lb/>added from database searches. SABmark database has two <lb/>alignment sets. The &apos;twilight zone&apos; set contains SCOP <lb/>(version 1.65) domain pairs with very low-to-low similarity <lb/>and the &apos;superfamily&apos; set contains SCOP domains with <lb/>low to intermediate similarity. The reference alignments in <lb/>SABmark were also derived from the consensus of SOFI <lb/>and CE. The comparison of MUMMALS with the other <lb/>programs on PREFAB4 and SABmark shows similar trends <lb/>as seen in datasets assembled by us. MUMMALS with the <lb/>best-performing models (HMM_1_3_1 and HMM_3_3_1) <lb/>gives the highest average Q-scores, with 2-4% increase <lb/>over ProbCons and 1% increase over the best of the <lb/>MAFFT series (Table 2). <lb/>We also tested these programs on datasets of 55 <lb/>HOMSTRAD structural alignments (11,34) with various <lb/>numbers of homologs added (Supplementary Table S5). <lb/>MUMMALS performs better than other programs for testing <lb/>datasets &apos;HOM + 0&apos;, &apos;HOM + 20&apos; and &apos;HOM + 50&apos;. The <lb/>results of MUMMALS on &apos;HOM + 100&apos; are inferior to <lb/>those on &apos;HOM + 50&apos;, which is in contrast to MAFFT that <lb/>shows consistent increase of accuracy when more homologs <lb/>are added. We reason that such a problem of MUMMALS <lb/>is due to excessive number of close homologs in some <lb/>sequence subgroups in &apos;HOM + 100&apos; test cases, since our <lb/>consistency measure does not take into account similarities <lb/>among the testing sequences. To test this hypothesis, we <lb/>removed closely related sequences in &apos;HOM + 100&apos; align-<lb/>ment at 50 or 60% identity level (datasets &apos;HOM + <lb/>100_bcl50&apos; and &apos;HOM + 100_bcl60&apos;). The remaining <lb/>sequences are more balanced in terms of similarities among <lb/>them. We indeed obtained the best MUMMALS performance <lb/>after removing closely related sequences (Supplementary <lb/>Table S5). A similar degrading effect of closely related <lb/>sequences is observed for ProbCons, which is also based on <lb/>probabilistic consistency. <lb/>Recently, BAliBASE3.0 multiple alignment benchmark <lb/>has been released (35). We tested the programs on 218 <lb/>BAliBASE3.0 alignments with full-length sequences. These <lb/>alignments represent difficult cases since N-or C-terminal <lb/>non-homologous regions are included for some sequences. <lb/>The average Q-scores and column scores (the fraction of <lb/>entirely correctly columns) in manually defined core blocks <lb/>are reported in Table 2. For Q-score measurement of align-<lb/>ment quality, the Wilcoxon signed rank tests show that <lb/>MUMMALS with best-performing models (HMM_3_3_1 or <lb/>HMM_1_3_1) is statistically better than other programs, <lb/>albeit MUMMALS does not have the highest average <lb/>Q-score. For column score measurement of alignment <lb/>quality, MUMMALS with HMM_3_3_1 or HMM_1_3_1 <lb/>has a lower average column score than MAFFT-[le]insi and <lb/>ProbCons, but the difference between them is not statistically <lb/>Table 2. Average alignment scores in tests of multiple sequence alignment programs <lb/>Methods/Models Testing datasets <lb/>SCOP 0-10% SCOP 10-15% SCOP 15-20% SCOP 20-40% SCOP <lb/>PREFAB SABmark SABmark BAliBASE3.0 <lb/>(355) <lb/>(432) <lb/>(420) <lb/>(578) <lb/>All (1785) (1682) <lb/>Sup (425) Twi (209) Q/col (218) <lb/>HMM_1_1_0 <lb/>0.313 <lb/>0.514 a <lb/>0.727 a <lb/>0.885 <lb/>0.644 a <lb/>0.723 a <lb/>0.516 a <lb/>0.193 a <lb/>0.862/0.551 <lb/>HMM_1_1_1 <lb/>0.313 <lb/>0.512 a <lb/>0.728 a <lb/>0.886 <lb/>0.644 a <lb/>0.724 a <lb/>0.512 a <lb/>0.186 a <lb/>0.861/0.550 <lb/>HMM_3_1_1 <lb/>0.321 a <lb/>0.514 a <lb/>0.730 a <lb/>0.888 <lb/>0.647 a <lb/>0.726 a <lb/>0.516 a <lb/>0.186 a <lb/>0.862/0.554 <lb/>HMM_1_3_1 <lb/>0.327 a <lb/>0.518 a <lb/>0.732 a <lb/>0.889 a <lb/>0.650 a <lb/>0.729 a <lb/>0.519 a <lb/>0.194 a <lb/>0.863/0.554 <lb/>HMM_3_3_1 <lb/>0.329 a <lb/>0.520 a <lb/>0.733 a <lb/>0.889 a <lb/>0.651 a <lb/>0.731 a <lb/>0.522 a <lb/>0.196 a <lb/>0.863/0.557 <lb/>ProbCons <lb/>0.291 <lb/>0.486 <lb/>0.702 <lb/>0.879 <lb/>0.625 <lb/>0.716 <lb/>0.485 <lb/>0.166 <lb/>0.862 c /0.556 b <lb/>MAFFT-fftnsi <lb/>0.283 <lb/>0.472 <lb/>0.673 <lb/>0.865 <lb/>0.608 <lb/>0.7 <lb/>0.45 <lb/>0.147 <lb/>0.829 c /0.515 c <lb/>MAFFT-einsi <lb/>0.293 <lb/>0.498 <lb/>0.71 <lb/>0.882 <lb/>0.631 <lb/>0.72 <lb/>0.502 <lb/>0.175 <lb/>0.866 c /0.585 b <lb/>MAFFT-linsi <lb/>0.301 <lb/>0.5 <lb/>0.707 <lb/>0.883 <lb/>0.633 <lb/>0.722 <lb/>0.51 <lb/>0.184 <lb/>0.868 c /0.586 b <lb/>MAFFT-ginsi <lb/>0.308 <lb/>0.497 <lb/>0.714 <lb/>0.888 <lb/>0.637 <lb/>0.715 <lb/>0.495 <lb/>0.176 <lb/>0.840 c /0.526 c <lb/>MUSCLE <lb/>0.262 <lb/>0.453 <lb/>0.662 <lb/>0.866 <lb/>0.597 <lb/>0.68 <lb/>0.433 <lb/>0.136 <lb/>0.816 c /0.472 c <lb/>ClustalW <lb/>0.21 <lb/>0.357 <lb/>0.566 <lb/>0.798 <lb/>0.519 <lb/>0.617 <lb/>0.39 <lb/>0.127 <lb/>0.749 c /0.373 c <lb/>The format of the HMM names (&apos;HMM_solv_ss_u&apos;) is explained in Table1. Average Q-scores are shown for all the testing datasets. For the BAliBASE3.0 dataset, <lb/>both the Q-score (&apos;Q&apos;, first number) and column score (&apos;col&apos;, second number, fraction of entirely correct columns) are shown. The first four testing datasets are <lb/>representative SCOP40 domain pairs with added homologs. SABmark has &apos;superfamily&apos; dataset (sup) and &apos;twilight zone&apos; dataset (twi). The number of alignments in <lb/>each testing dataset is shown in parentheses and the identity range in % is specified above the number of alignments for SCOP datasets. MUMMALS implementing <lb/>different HMMs are the first five methods. All sequences pairs are subject to consistency measure in MUMMALS. The best scores of MUMMALS and the best <lb/>scores of other programs are in bold. <lb/>a <lb/>MUMMALS with this model is statistically better than the best of other programs according to Wilcoxon signed-rank test (P &lt; 0.015). <lb/>b For BAliBASE3.0 test, the difference between MUMMALS with model HMM_1_3_1 or HMM_3_3_1 and this program is not statistically significant (P &gt; 0.05) <lb/>according to Wilcoxon signed-ranks test. <lb/>c <lb/>For BAliBASE3.0 test, MUMMALS with model HMM_1_3_1 or HMM_3_3_1 is statistically better than this program (P-value less than 0.01, except for Q-scores <lb/>of ProbCons, for which P Â¼ 0.017). <lb/></body>

			<note place="headnote">Nucleic Acids Research, 2006, Vol. 34, No. 16</note>

			<page>4369 <lb/></page>

			<body>significant. In fact MUMMALS with HMM_3_3_1 out-<lb/>performs MAFFT-linsi (having the best average scores) in <lb/>106 cases while MAFFT-linsi performs better in 67 cases, <lb/>measured by column score. <lb/>We found that the major cause of lower average column <lb/>score of MUMMALS is due to a few alignments that <lb/>MUMMALS gives considerably lower scores as compared <lb/>to MAFFT-linsi (10 alignments with a score difference larger <lb/>than 0.5). Manual inspections of these alignments revealed <lb/>some interesting scenarios. In some cases, the low scores of <lb/>MUMMALS are due to wrong alignment of a few divergent <lb/>sequences, some of which have long extensions at the ends. <lb/>Column score is very sensitive in such situations, since a <lb/>low score is produced even if only one sequence is incorrectly <lb/>aligned in many places. MAFFT alignments with local <lb/>options ([le]insi) indeed show advantage in these situations <lb/>(11). In several other cases, MUMMALS produces struc-<lb/>turally meaningful alignments that are scored very low <lb/>since they are not consistent with the reference alignments <lb/>(Supplementary Figure S1). One example is testing case <lb/>BB40037, for which the reference alignment aligns the <lb/>&apos;fer2&apos; domain [2Fe-2S iron sulfur cluster binding domain, <lb/>named by Conserved Domain Database (42)] that is present <lb/>in every sequence. Inspection of the sequences revealed <lb/>two groups of sequences with different domain architectures <lb/>in BB40037 (Supplementary Figure S1a). One group contains <lb/>three domains in the order of &apos;fer2&apos;, &apos;FAD_binding_6&apos; (oxi-<lb/>doreductase FAD-binding domain) and &apos;NAD_binding_1&apos; <lb/>(oxidoreductase NAD-binding domain). The other group <lb/>contains the same three domains, but in the order of <lb/>&apos;FAD_binding_6&apos;, &apos;NAD_binding_1&apos; and &apos;fer2&apos;. MUMMALS <lb/>aligns &apos;FAD_binding_6&apos; and &apos;NAD_binding_1&apos; for the two <lb/>groups and thus misaligned the &apos;fer2&apos; domain. Since the <lb/>reference-dependent evaluation is based on &apos;fer2&apos; domain, <lb/>MUMMALS alignment gets a column score of zero. Another <lb/>evaluation problem is caused by domain duplication or <lb/>repeats, as exemplified by test case BB40040. Most of <lb/>BB40040 sequences have a single domain of carbonic anhy-<lb/>drase. However, the sequence &apos;CAH_DUNSA&apos; has two such <lb/>domains (Supplementary Figure S1b). The reference align-<lb/>ment aligns the first domain of &apos;CAH_DUNSA&apos; to other <lb/>sequences while MUMMALS aligns most of the second <lb/>domain to other sequences, resulting in a low column score. <lb/>Secondary structure prediction and alignment quality <lb/>Model HMM_1_3_1 has hidden secondary structure-<lb/>dependent match states that are used in alignment construc-<lb/>tion. However, secondary structure predictions are not <lb/>explicitly generated and remain &apos;hidden&apos; in the alignment <lb/>process. A posterior decoding technique can be applied to <lb/>this model to output explicit secondary structure predictions <lb/>(see Supplementary Data for details). The prediction accuracy <lb/>is 60% on representative SCOP domains (Supplementary <lb/>Table S6). This prediction accuracy is lower than many <lb/>advanced methods, such as PSI-PRED (43), which use <lb/>homologs from database searches to enhance the secondary <lb/>structure signal of a single sequence. Our HMM-based pre-<lb/>diction of secondary structure corresponds to a single <lb/>sequence predictor, since position-specific information from <lb/>multiple homologs is not used. The prediction accuracy of <lb/>model HMM_1_3_1 is comparable to other methods that <lb/>generate predictions based on a single sequence (44). <lb/>If secondary structure information is known for one of the <lb/>aligned sequences, model HMM_1_3_1 can be modified to <lb/>restrict the hidden state path to follow the experimental <lb/>secondary structure (see Supplementary Data). Using real <lb/>secondary structural information in MUMMALS with <lb/>model HMM_1_3_1, we were able to obtain an average <lb/>Q-score increase of 3% on SABmark datasets (Supplemen-<lb/>tary Table S8). Such a result suggests that one limitation of <lb/>MUMMALS is the low accuracy of the implicit secondary <lb/>structure prediction. Further improvement of alignment <lb/>quality should be possible with more accurate secondary <lb/>structure predictions that explore database homologs. <lb/>Evaluation of programs with reference-independent <lb/>scores <lb/>All previously described tests are based on comparison with <lb/>reference alignments that are treated as &apos;gold standards&apos;. It is <lb/>unclear how the quality of reference &apos;gold&apos; alignments influ-<lb/>ences the ranking of alignment programs (45). Several exam-<lb/>ples from BAliBASE3.0 show some problems with reference-<lb/>dependent evaluation. Since the structures of all domains in <lb/>our testing datasets are known, we can evaluate the quality <lb/>of a test alignment using reference-independent scores that <lb/>reflect the similarity between two structures after they are <lb/>superimposed according to aligned residues in the test align-<lb/>ment. The structural scores we have used are: DALI Z-score, <lb/>TM-score, GDT-TS score, 3D-score and two LiveBench <lb/>contact scores. From Table 3, it is clear that MUMMALS <lb/>with the best-performing models (HMM_1_3_1 and <lb/>HMM_3_3_1) produces higher average reference-<lb/>independent structural scores than other programs for diver-<lb/>gent domain pairs (identity below 20%), suggesting that our <lb/>HMM models produce potentially more useful alignments in <lb/>terms of structure modeling. Interestingly, MUMMALS does <lb/>not produce the highest reference-independent sequence-<lb/>based similarity scores (sequence identity and BLOSUM62 <lb/>scores of aligned residue pairs). This result suggests that <lb/>minimization of these sequence similarity measures alone <lb/>does not lead to better alignment quality for divergent <lb/>sequences. Our experiments with reference-independent <lb/>evaluation shows good correlation with reference-dependent <lb/>results described above, thus rendering a &apos;gold standard&apos; <lb/>reference unnecessary for alignment evaluation. <lb/>Pairwise comparisons of multiple sequence aligners <lb/>MUMMALS shows improvement over MAFFT and Prob-<lb/>Cons by only a few percent in terms of average alignment <lb/>quality scores on various testing datasets. Although this <lb/>improvement is statistically significant and does not depend <lb/>on the testing dataset (assembled by us, or by other <lb/>researchers) or alignment quality measure (reference-<lb/>dependent Q-score, or reference-independent DALI Z-score, <lb/>TM-score, GDT-TS, etc), it is not clear what these average <lb/>scores actually represent. To gain more understanding, we <lb/>directly compared alignment scores of different programs <lb/>for individual domain pairs. Table 4 shows the number of <lb/>alignments where one program performs better than another <lb/>program by 10% or more (measured by Q-score or <lb/></body>

			<page>4370</page>

			<note place="headnote">Nucleic Acids Research, 2006, Vol. 34, No. 16 <lb/></note>

			<body>normalized TM-score) for 1207 divergent SCOP40 pairs with <lb/>added homologs (sequence identity &lt;20%). The numbers for <lb/>such differences among MUMMALS family of programs <lb/>with five different HMMs are relatively small, suggesting <lb/>that MUMMALS with different HMMs generates alignments <lb/>not that different from each other. The differences between <lb/>MUMMALS and other programs are significantly larger. <lb/>For example, MUMMALS with HMM_3_3_1 has a large <lb/>Q-score increase (&gt;10%) over ProbCons on 201 alignments, <lb/>while ProbCons is better by 10% or more on 62 alignments. <lb/>For MUMMALS with HMM_3_3_1 and MAFFT-ginsi, these <lb/>numbers are 199 and 117, respectively. Our comparisons thus <lb/>suggest that different programs can explore somewhat differ-<lb/>ent regions in alignment space, and the program giving lower <lb/>average performance may be capable of generating better <lb/>alignments in many cases. However, selection of a better <lb/>alignment in the absence of structural comparison is still a <lb/>difficult task (46). <lb/>DISCUSSION <lb/>Comparison of multiple sequence alignment programs <lb/>ProbCons (23) and MAFFT (11) are two of the most accurate <lb/>multiple sequence alignment programs that explore only <lb/>sequence information. They use different strategies to <lb/>improve the accuracy of progressive alignment. ProbCons <lb/>mainly relies on the consistency-based scoring function and <lb/>MAFFT utilizes iterative refinement. MAFFT&apos;s scoring func-<lb/>tion is a weighted sum-of-pairs score of BLOSUM62, a gen-<lb/>eral amino acid substitution matrix. Recent versions of <lb/>MAFFT enhance performance by exploring aligned core <lb/>regions with a simple consistency measure (11). However, <lb/>the time-consuming ProbCons-type consistency operations <lb/>on sequence triplets are not implemented in MAFFT. Our <lb/>results show that MUMMALS based on probabilistic consis-<lb/>tency can perform better than MAFFT, implying that <lb/>consistency-based scoring function is superior to weighted <lb/>sum-of-pairs measures of general substitution matrices. <lb/>Among existing multiple aligners, MUMMALS is meth-<lb/>odologically closest to ProbCons. However, we implement <lb/>HMMs that are different from the one used in ProbCons <lb/>in three aspects. First, we introduce more complex model <lb/>structures by increasing the number of match state types. <lb/>While HMM_1_1_0, used mainly as a control, has the <lb/>same model structure as the one in ProbCons, the other <lb/>four models (HMM_1_1_1, HMM_1_3_1, HMM_3_1_1 <lb/>and HMM_3_3_1) incorporate more match states, which <lb/>take into account residue substitution differences in unaligned <lb/>regions and aligned core blocks, as well as local structural <lb/>differences in aligned core blocks. Second, we have estimated <lb/>model parameters from DaliLite structural alignments of <lb/>divergent SCOP domains (&lt;40% identity), while the training <lb/>data of ProbCons are from BAliBASE2.0. Third, we applied a <lb/>supervised learning approach to estimating model parameters <lb/>from structural alignments that have known hidden state <lb/>paths. ProbCons applied an unsupervised learning approach <lb/>(expectation maximization) to derive parameters without <lb/>using reference alignments. Trained and tested on DaliLite <lb/>structural alignments of SCOP40 domain pairs and on <lb/>BAliBASE2.0 alignments, our models give better alignment <lb/>quality than ProbCons and a number of other programs. We <lb/>show that more complex models improve alignment quality <lb/>and SCOP40 superfamily pairs with identity range of 20-<lb/>40% provide a better training dataset than BAliBASE2.0 <lb/>alignments. <lb/>Although we do not explicitly perform structure prediction <lb/>in the course of alignment construction, our HMMs with <lb/>multiple match states have built-in information of residue <lb/>substitution characteristics in distinct local structure <lb/>environments. Such information is learned from structural <lb/>alignments in the training process and is encoded in the mod-<lb/>els. Since these match states are hidden states, our HMMs <lb/>construct alignments using only sequence information. In <lb/>this aspect, our method is different from some other methods <lb/>that require direct use of real or predicted local structural <lb/>information (19,47). <lb/>Time complexity of HMMs and MUMMALS <lb/>The trade-off for improvement of alignment quality with <lb/>more complex model structures is more time for computation <lb/>Table 3. Assessment of multiple sequence alignment programs using reference-independent sequence and structural similarity scores on 1207 representative <lb/>SCOP40 domain pairs with identity &lt;20% <lb/>Method <lb/>Structural similarity <lb/>Sequence similarity <lb/>DALI Z-score <lb/>GDT-TS <lb/>TM-score <lb/>3D-score <lb/>LBcona <lb/>LBconb <lb/>Sequence identity <lb/>Blosum62 score <lb/>HMM_1_1_0 <lb/>0.1178 <lb/>0.2510 <lb/>0.3005 <lb/>0.2499 a <lb/>0.2181 <lb/>0.2828 <lb/>0.0953 <lb/>0.1687 <lb/>HMM_1_1_1 <lb/>0.1200 a <lb/>0.2519 a <lb/>0.3010 a <lb/>0.2514 a <lb/>0.2190 a <lb/>0.2838 <lb/>0.0955 <lb/>0.1688 <lb/>HMM_3_1_1 <lb/>0.1217 a <lb/>0.2540 a <lb/>0.3034 a <lb/>0.2532 a <lb/>0.2215 a <lb/>0.2872 a <lb/>0.0938 <lb/>0.1665 <lb/>HMM_1_3_1 <lb/>0.1226 a <lb/>0.2564 a <lb/>0.3061 a <lb/>0.2557 a <lb/>0.2230 a <lb/>0.2892 a <lb/>0.0944 <lb/>0.1662 <lb/>HMM_3_3_1 <lb/>0.1231 a <lb/>0.2570 a <lb/>0.3070 a <lb/>0.2563 a <lb/>0.2240 a <lb/>0.2909 a <lb/>0.0932 <lb/>0.1651 <lb/>ProbCons <lb/>0.1003 <lb/>0.2324 <lb/>0.2767 <lb/>0.2307 <lb/>0.2060 <lb/>0.2670 <lb/>0.0983 <lb/>0.1719 <lb/>MAFFT-fftnsi <lb/>0.0982 <lb/>0.2333 <lb/>0.2814 <lb/>0.2297 <lb/>0.2004 <lb/>0.2632 <lb/>0.0917 <lb/>0.1621 <lb/>MAFFT-einsi <lb/>0.1136 <lb/>0.2425 <lb/>0.2886 <lb/>0.2410 <lb/>0.2105 <lb/>0.2763 <lb/>0.0940 <lb/>0.1666 <lb/>MAFFT-linsi <lb/>0.1135 <lb/>0.2485 <lb/>0.2982 <lb/>0.2467 <lb/>0.2143 <lb/>0.2820 <lb/>0.0923 <lb/>0.1632 <lb/>MAFFT-ginsi <lb/>0.1126 <lb/>0.2454 <lb/>0.2960 <lb/>0.2429 <lb/>0.2152 <lb/>0.2803 <lb/>0.0972 <lb/>0.1725 <lb/>MUSCLE <lb/>0.0980 <lb/>0.2297 <lb/>0.2777 <lb/>0.2266 <lb/>0.1941 <lb/>0.2535 <lb/>0.0939 <lb/>0.1686 <lb/>ClustalW <lb/>0.0723 <lb/>0.1916 <lb/>0.2318 <lb/>0.1876 <lb/>0.1551 <lb/>0.2030 <lb/>0.0733 <lb/>0.1344 <lb/>The first five methods are MUMMALS implementing different HMMs. The format of the HMM names (&apos;HMM_solv_ss_u&apos;) is explained in Table 1. The best scores <lb/>of MUMMALS and the best scores of other programs (ProbCons, MAFFT with different options, MUSCLE, ClustalW) are in bold. <lb/>a <lb/>MUMMALS with this model is statistically better than the best of other programs according to Wilcoxon signed-rank test (P &lt; 0.01). <lb/></body>

			<note place="headnote">Nucleic Acids Research, 2006, Vol. 34, No. 16</note>

			<page>4371 <lb/></page>

			<body>(Supplementary Table S2). HMM_3_3_1 (modeling both <lb/>secondary structure and solvent accessibility) has the <lb/>largest number of hidden states and is the most time-<lb/>consuming model, running about three times slower than <lb/>HMM_1_3_1 (modeling only secondary structure). However, <lb/>the performance of these two models is fairly similar in pair-<lb/>wise or multiple sequence alignment tests (Tables 1-3). <lb/>HMM_3_1_1 (modeling only solvent accessibility) has the <lb/>same time complexity as HMM_1_3_1, but usually shows <lb/>slightly inferior performance to HMM_1_3_1. These obser-<lb/>vations suggest that HMM_1_3_1 (modeling only secondary <lb/>structure) is most efficient in balancing alignment accuracy <lb/>and speed. <lb/>For MUMMALS, the rate-limiting steps are the computa-<lb/>tion of match probabilities using forward and backward algo-<lb/>rithms (time order is N 2 *L 2 *K 2 , N: number of sequences, <lb/>L: average length, K: number of hidden states), and the com-<lb/>putation of the consistency-based scoring function, which <lb/>requires operations on all sequence triplets (time order is <lb/>N 3 *L 2 ). If probabilistic consistency measure is applied to <lb/>every sequence pair, MUMMALS is much slower than <lb/>MAFFT, MUSCLE and ClustalW (Supplementary Table S9). <lb/>For example, the median CPU time of MUMMALS with <lb/>model HMM_1_3_1 on 1785 SCOP40 pairs with added <lb/>homologs is 174s per alignment, as compared to 2.5s for <lb/>MAFFT with &apos;ginsi&apos; option (on Redhat Enterprise Linux 3, <lb/>AMD Opteron 2.0 GHz). Applying a two-stage alignment <lb/>strategy similar to the one used in the program PCMA (32), <lb/>we were able to make MUMMALS almost an order of mag-<lb/>nitude faster while still maintaining the same level of align-<lb/>ment accuracy on SCOP testing datasets (Supplementary <lb/>Table S9). Since highly similar sequences can be aligned <lb/>accurately with a general scoring function (8), there is no <lb/>need for all of them to be subject to the time-consuming con-<lb/>sistency measure. Although adding homologous sequences <lb/>can in general improve alignment quality, our results on <lb/>HOMSTRAD datasets suggest that proper balance of the <lb/>similarity among the added homologs is also critical for <lb/>MUMMALS as well as ProbCons. <lb/>Methods for alignment quality evaluation <lb/>Reference-dependent alignment evaluation relies on compari-<lb/>son of a test alignment to a reference alignment that is <lb/>assumed to be correct. A commonly used alignment quality <lb/>score is the fraction of correctly aligned residue pairs <lb/>(Q-score). More complex scores have been designed to take <lb/>into account the relative shifts of residues (48,49). Even <lb/>though structure-based alignments can serve as high-quality <lb/>references, there are several well-known drawbacks. First, <lb/>structural alignments generated by automatic programs <lb/>could still contain errors, especially for pairs with relatively <lb/>low structural similarity, i.e. careful expert-driven multila-<lb/>teral research may generate alignments more meaningful <lb/>than those obtained by programs. Second, defining the opti-<lb/>mal structural alignment in certain regions is difficult for <lb/>structurally divergent pairs, i.e. it is simply not possible to <lb/>identify a single &apos;correct&apos; alignment, which may not even <lb/>exist. Third, for multi-domain proteins, especially those <lb/>with repeats or duplications, multiple ways of aligning struc-<lb/>turally similar parts exist, resulting in a variety of reference <lb/>Table 4. Number of large <lb/>Q-score or TM-score differences (no less than 0.1) among the multiple sequence alignment programs on 1207 representative SCOP40 domain pairs with identity <lb/>&lt;20% <lb/>HMM_1_1_0 HMM_1_1_1 HMM_3_1_1 HMM_1_3_1 HMM_3_3_1 ProbCons MAFFT-fftnsi MAFFT-einsi MAFFT-linsi MAFFT-ginsi MUSCLE ClustalW <lb/>HMM_1_1_0 <lb/>-<lb/>13/8 <lb/>41/18 <lb/>29/15 <lb/>45/24 <lb/>50/157 <lb/>105/191 <lb/>108/163 <lb/>119/127 <lb/>85/102 <lb/>92/208 <lb/>73/399 <lb/>HMM_1_1_1 <lb/>14/14 <lb/>-<lb/>35/16 <lb/>18/6 <lb/>38/24 <lb/>53/156 <lb/>100/189 <lb/>103/171 <lb/>109/124 <lb/>90/110 <lb/>91/209 <lb/>76/397 <lb/>HMM_3_1_1 <lb/>28/45 <lb/>22/40 <lb/>-<lb/>16/24 <lb/>4/5 <lb/>39/164 <lb/>86/211 <lb/>101/183 <lb/>109/135 <lb/>81/124 <lb/>82/225 <lb/>63/418 <lb/> HMM_1_3_1 <lb/>19/29 <lb/>9/22 <lb/>26/20 <lb/>-<lb/>25/19 <lb/>46/155 <lb/>90/202 <lb/>107/169 <lb/>110/124 <lb/>89/116 <lb/>92/214 <lb/>70/408 <lb/>HMM_3_3_1 <lb/>29/57 <lb/>22/54 <lb/>6/17 <lb/>20/36 <lb/>-<lb/>38/169 <lb/>85/207 <lb/>97/185 <lb/>111/138 <lb/>82/128 <lb/>82/227 <lb/>59/431 <lb/>ProbCons <lb/>187/76 <lb/>186/80 <lb/>203/67 <lb/>189/73 <lb/>201/62 <lb/>-<lb/>149/133 <lb/>152/98 <lb/>172/80 <lb/>162/76 <lb/>162/169 <lb/>110/336 <lb/>MAFFT-fftnsi 334/123 <lb/>334/118 <lb/>354/113 <lb/>344/115 <lb/>352/115 <lb/>242/154 <lb/>-<lb/>123/98 <lb/>137/71 <lb/>153/76 <lb/>115/143 <lb/>88/342 <lb/>MAFFT-einsi <lb/>234/156 <lb/>232/152 <lb/>260/147 <lb/>247/152 <lb/>258/138 <lb/>152/186 <lb/>116/225 <lb/>-<lb/>80/37 <lb/>133/96 <lb/>134/193 <lb/>93/369 <lb/>MAFFT-linsi <lb/>206/138 <lb/>204/140 <lb/>237/131 <lb/>219/143 <lb/>239/128 <lb/>133/188 <lb/>87/207 <lb/>62/82 <lb/>-<lb/>85/98 <lb/>93/196 <lb/>60/387 <lb/>MAFFT-ginsi <lb/>160/124 <lb/>162/124 <lb/>192/119 <lb/>176/126 <lb/>199/117 <lb/>113/184 <lb/>109/253 <lb/>129/158 <lb/>111/132 <lb/>-<lb/>90/185 <lb/>67/395 <lb/>MUSCLE <lb/>370/94 <lb/>374/94 <lb/>390/83 <lb/>384/90 <lb/>401/83 <lb/>302/138 <lb/>218/136 <lb/>309/134 <lb/>295/110 <lb/>327/106 <lb/>-<lb/>75/288 <lb/>ClustalW <lb/>627/67 <lb/>628/66 <lb/>645/60 <lb/>645/65 <lb/>649/55 <lb/>559/103 <lb/>498/96 <lb/>582/91 <lb/>585/70 <lb/>600/76 <lb/>449/100 <lb/>-<lb/>The first five methods are MUMMALS implementing different HMMs. The format of the HMM names (&apos;HMM_solv_ss_u&apos;) is explained in Table 1. Each none-diagonal cell has two numbers separated by a slash. <lb/>The first number is the number of cases where the alignment quality score of the program listed to the left (in a row) is inferior to that of the program listed above (in a column) by 0.1 or more. The second number is <lb/>the number of cases where the score of the &apos;row&apos; program is better than that of the &apos;column&apos; program by 0.1 or more. The alignment quality scores in the lower triangle and upper triangle are <lb/>Q-scores and weighted <lb/>and normalized TM-scores, respectively. Comparisons of MUMMALS with the best model (HMM_3_3_1) with other programs are highlighted in bold. <lb/></body>

			<page>4372</page>

			<note place="headnote">Nucleic Acids Research, 2006, Vol. 34, No. 16 <lb/></note>

			<body>alignments that are correct from structure modeling pers-<lb/>pective. However, structure superposition programs usually <lb/>provide a single best alignment. Some problems of reference-<lb/>dependent evaluations are illustrated by examples from <lb/>BAliBASE3.0. For SCOP40 testing datasets, we found <lb/>about 20 domain pairs for which all sequence-based programs <lb/>failed to align a single position correctly according to <lb/>DaliLite reference alignment. Manual inspection of these <lb/>instances suggests that most of these domains involve struc-<lb/>tural repeats. Many alignments produced by the tested pro-<lb/>grams did produce structurally meaningful results, but they <lb/>had zero scores because they matched different repeats than <lb/>those aligned by DaliLite. <lb/>Reference-independent evaluation can avoid these <lb/>drawbacks. Although reference-independent evaluation is <lb/>routinely used for assessing structure prediction models <lb/>(50,51), it has not been frequently used in assessment of <lb/>multiple sequence alignment programs (10,45). Our results <lb/>show that reference-independent evaluation using various <lb/>structural similarity scores produces similar, if not identical, <lb/>rankings of the programs compared to reference-dependent <lb/>evaluations using DaliLite alignments (Table 3). On the one <lb/>hand, this result suggests that a large collection of reference <lb/>alignments generated by structure alignment program <lb/>DaliLite are on average well-suited for assessment of align-<lb/>ment quality. On the other hand, it is probably unnecessary <lb/>to have a set of &apos;gold standard&apos; reference alignments. <lb/>Reference-independent evaluation through scoring super-<lb/>positions generated according sequence-based alignments <lb/>is an easier and maybe more fair method to assess align-<lb/>ment quality and to compare different aligners. Therefore, <lb/>particularly when the size of a testing dataset is large, <lb/>improving reference alignment quality either by manual <lb/>inspection and adjustment (30), or by using the consensus <lb/>of structural aligners (10,33) is probably not necessary. <lb/>With reference-independent evaluation techniques, we <lb/>even suggest bypassing the step of generating reference <lb/>alignments. <lb/>Multiple sequence alignment: still an unsolved problem <lb/>Despite several percentage points&apos; improvement in align-<lb/>ments provided by MUMMALS, alignment quality for <lb/>divergent sequences (sequence identity &lt;15%) is still not <lb/>high, since only 50% or even less residue pairs on average <lb/>are aligned correctly according to reference alignments <lb/>(Table 2). Although the best programs (MUMMALS, <lb/>MAFFT and ProbCons) have limited differences in terms of <lb/>average alignment quality score, they can produce quite <lb/>different alignments for some sequence pairs (Table 4). It <lb/>can be a good practice to use several aligners to generate <lb/>alignments for divergent sequences. Manual examination of <lb/>these alignments can be helpful in making expert judgments. <lb/>Exploration of the consensus among programs is fruitful as <lb/>well and is frequently used in meta-servers for structure <lb/>prediction (52-54). Results of the meta-aligner M-COFFEE <lb/>(46) as well as ours (data not shown, MUMMALS package <lb/>contains a meta-program similar to M-COFFEE) suggest <lb/>that combining different multiple sequence aligners can <lb/>give significant but limited improvement of alignment <lb/>quality. <lb/>One advantage of MUMMALS is the use of HMMs with <lb/>local structure information learned from structural align-<lb/>ments. Our model HMM_1_3_1 gives low secondary struc-<lb/>ture prediction accuracy. Providing real secondary structure <lb/>information to this model can further improve alignment <lb/>quality by a few percent. These results suggest that applica-<lb/>tion of more accurate secondary structure predictions can <lb/>lead to better alignment quality. Exploration of database <lb/>sequence homologs and available 3D structures was also <lb/>shown to be helpful (11,55,56). Further enhancement of <lb/>multiple alignment quality could be achieved by effective <lb/>integration of existing alignment techniques and various <lb/>evolutionary and structural information resources. <lb/></body>

			<div type="annex">SUPPLEMENTARY DATA <lb/>Supplementary Data are available at NAR Online. <lb/></div>

			<div type="acknowledgement">ACKNOWLEDGEMENTS <lb/>The authors would like to thank Bong-Hyun Kim for the <lb/>program to calculate reference-independent sequence and <lb/>structural scores and Dr Kazutaka Katoh for providing the <lb/>HOMSTRAD datasets. The authors would also like to thank <lb/>Lisa Kinch, James Wrabl and anonymous referees for helpful <lb/>comments. Funding to pay the Open Access publication <lb/>charges for this article was provided by Howard Hughes <lb/>Medical Institute. This work was supported in part by NIH <lb/>grant GM67165 to NVG. <lb/></div>

			<div type="annex">Conflict of interest statement. None declared. <lb/></div>

			<listBibl>REFERENCES <lb/>1. Altschul,S.F., Madden,T.L., Schaffer,A.A., Zhang,J., Zhang,Z., <lb/>Miller,W. and Lipman,D.J. (1997) Gapped BLAST and PSI-BLAST: <lb/>a new generation of protein database search programs. Nucleic Acids <lb/>Res., 25, 3389-3402. <lb/>2. Eddy,S.R. (1998) Profile hidden Markov models. Bioinformatics, 14, <lb/>755-763. <lb/>3. Lichtarge,O., Bourne,H.R. and Cohen,F.E. (1996) An evolutionary <lb/>trace method defines binding surfaces common to protein families. <lb/>J. Mol. Biol., 257, 342-358. <lb/>4. Jones,S. and Thornton,J.M. (2004) Searching for functional sites in <lb/>protein structures. Curr. Opin. Chem. Biol., 8, 3-7. <lb/>5. Wallace,I.M., Blackshields,G. and Higgins,D.G. (2005) Multiple <lb/>sequence alignments. Curr. Opin. Struct. Biol., 15, 261-266. <lb/>6. Edgar,R.C. and Batzoglou,S. (2006) Multiple sequence alignment. <lb/>Curr. Opin. Struct. Biol., 16, 368-373. <lb/>7. Thompson,J.D., Higgins,D.G. and Gibson,T.J. (1994) CLUSTAL W: <lb/>improving the sensitivity of progressive multiple sequence alignment <lb/>through sequence weighting, position-specific gap penalties and weight <lb/>matrix choice. Nucleic Acids Res., 22, 4673-4680. <lb/>8. Thompson,J.D., Plewniak,F. and Poch,O. (1999) A comprehensive <lb/>comparison of multiple sequence alignment programs. Nucleic Acids <lb/>Res., 27, 2682-2690. <lb/>9. Gotoh,O. (1996) Significant improvement in accuracy of multiple <lb/>protein sequence alignments by iterative refinement as assessed by <lb/>reference to structural alignments. J. Mol. Biol., 264, 823-838. <lb/>10. Edgar,R.C. (2004) MUSCLE: multiple sequence alignment with high <lb/>accuracy and high throughput. Nucleic Acids Res., 32, 1792-1797. <lb/>11. Katoh,K., Kuma,K., Toh,H. and Miyata,T. (2005) MAFFT version 5: <lb/>improvement in accuracy of multiple sequence alignment. Nucleic <lb/>Acids Res., 33, 511-518. <lb/>12. Notredame,C., Higgins,D.G. and Heringa,J. (2000) T-Coffee: a novel <lb/>method for fast and accurate multiple sequence alignment. J. Mol. <lb/>Biol., 302, 205-217. <lb/></listBibl>

			<note place="headnote">Nucleic Acids Research, 2006, Vol. 34, No. 16</note>

			<page>4373 <lb/></page>

			<listBibl>13. Needleman,S.B. and Wunsch,C.D. (1970) A general method applicable <lb/>to the search for similarities in the amino acid sequence of two <lb/>proteins. J. Mol. Biol., 48, 443-453. <lb/>14. Smith,T.F. and Waterman,M.S. (1981) Identification of common <lb/>molecular subsequences. J. Mol. Biol., 147, 195-197. <lb/>15. Dayhoff,M.O., Schwartz,R.M. and Orcutt,B.C. (1978) A model of <lb/>Evolutionary Change in Proteins. In Dayhoff,M.O. (ed.), Atlas of <lb/>Protein Sequences and Structures. National Biomedical Research <lb/>Foundation. Washington, DC., Vol. 5, pp. 345-352. <lb/>16. Henikoff,S. and Henikoff,J.G. (1992) Amino acid substitution matrices <lb/>from protein blocks. Proc. Natl Acad. Sci. USA, 89, 10915-10919. <lb/>17. Prlic,A., Domingues,F.S. and Sippl,M.J. (2000) Structure-derived <lb/>substitution matrices for alignment of distantly related sequences <lb/>[In Process Citation]. Protein Eng., 13, 545-550. <lb/>18. Blake,J.D. and Cohen,F.E. (2001) Pairwise sequence alignment below <lb/>the twilight zone. J. Mol. Biol., 307, 721-735. <lb/>19. Wang,J. and Feng,J.A. (2005) NdPASA: a novel pairwise protein <lb/>sequence alignment algorithm that incorporates neighbor-dependent <lb/>amino acid propensities. Proteins, 58, 628-637. <lb/>20. Huang,Y.M. and Bystroff,C. (2006) Improved pairwise alignments of <lb/>proteins in the Twilight Zone using local structure predictions. <lb/>Bioinformatics, 22, 413-422. <lb/>21. Eddy,S.R. (1996) Hidden Markov models. Curr. Opin. Struct. Biol., <lb/>6, 361-365. <lb/>22. Durbin,R., Eddy,S.R., Krogh,A. and Mitchison,G. (1998) Pairwise <lb/>alignment using HMMs. In Biological Sequence Analysis. Cambridge <lb/>University Press, pp. 80-99. <lb/>23. Do,C.B., Mahabhashyam,M.S., Brudno,M. and Batzoglou,S. (2005) <lb/>ProbCons: probabilistic consistency-based multiple sequence <lb/>alignment. Genome Res., 15, 330-340. <lb/>24. Murzin,A.G., Brenner,S.E., Hubbard,T. and Chothia,C. (1995) SCOP: a <lb/>structural classification of proteins database for the investigation of <lb/>sequences and structures. J. Mol. Biol., 247, 536-540. <lb/>25. Chandonia,J.M., Hon,G., Walker,N.S., Lo Conte,L., Koehl,P., <lb/>Levitt,M. and Brenner,S.E. (2004) The ASTRAL Compendium in <lb/>2004. Nucleic Acids Res., 32, D189-D192. <lb/>26. Holm,L. and Sander,C. (1996) Mapping the protein universe. Science, <lb/>273, 595-603. <lb/>27. Kabsch,W. and Sander,C. (1985) Identical pentapeptides with different <lb/>backbones. Nature, 317, 207. <lb/>28. Hubbard,S.J., Campbell,S.F. and Thornton,J.M. (1991) Molecular <lb/>recognition. Conformational analysis of limited proteolytic sites and <lb/>serine proteinase protein inhibitors. J. Mol. Biol., 220, 507-530. <lb/>29. Pei,J. and Grishin,N.V. (2004) Combining evolutionary and structural <lb/>information for local protein structure prediction. Proteins, 56, <lb/>782-794. <lb/>30. Bahr,A., Thompson,J.D., Thierry,J.C. and Poch,O. (2001) BAliBASE <lb/>(Benchmark Alignment dataBASE): enhancements for repeats, <lb/>transmembrane sequences and circular permutations. Nucleic Acids <lb/>Res., 29, 323-326. <lb/>31. Miyazawa,S. (1995) A reliable sequence alignment method based on <lb/>probabilities of residue correspondences. Protein Eng., 8, 999-1009. <lb/>32. Pei,J., Sadreyev,R. and Grishin,N.V. (2003) PCMA: fast and accurate <lb/>multiple sequence alignment based on profile consistency. <lb/>Bioinformatics, 19, 427-428. <lb/>33. Van Walle,I., Lasters,I. and Wyns,L. (2005) SABmark-a benchmark <lb/>for sequence alignment that covers the entire known fold space. <lb/>Bioinformatics, 21, 1267-1268. <lb/>34. de Bakker,P.I., Bateman,A., Burke,D.F., Miguel,R.N., Mizuguchi,K., <lb/>Shi,J., Shirai,H. and Blundell,T.L. (2001) HOMSTRAD: adding <lb/>sequence information to structure-based alignments of homologous <lb/>protein families. Bioinformatics, 17, 748-749. <lb/>35. Thompson,J.D., Koehl,P., Ripp,R. and Poch,O. (2005) BAliBASE 3.0: <lb/>latest developments of the multiple sequence alignment benchmark. <lb/>Proteins, 61, 127-136. <lb/>36. Holm,L. and Sander,C. (1998) Dictionary of recurrent domains in <lb/>protein structures. Proteins, 33, 88-96. <lb/>37. Zemla,A., Venclovas,C., Moult,J. and Fidelis,K. (1999) Processing <lb/>and analysis of CASP3 protein structure predictions. Proteins, 3, <lb/>22-29. <lb/>38. Zhang,Y. and Skolnick,J. (2004) Scoring function for automated <lb/>assessment of protein structure template quality. Proteins, 57, <lb/>702-710. <lb/>39. Rychlewski,L., Fischer,D. and Elofsson,A. (2003) LiveBench-6: <lb/>large-scale automated evaluation of protein structure prediction servers. <lb/>Proteins, 53, 542-547. <lb/>40. Boutonnet,N.S., Rooman,M.J., Ochagavia,M.E., Richelle,J. and <lb/>Wodak,S.J. (1995) Optimal protein structure alignments by multiple <lb/>linkage clustering: application to distantly related proteins. Protein <lb/>Eng., 8, 647-662. <lb/>41. Shindyalov,I.N. and Bourne,P.E. (1998) Protein structure alignment by <lb/>incremental combinatorial extension (CE) of the optimal path. Protein <lb/>Eng., 11, 739-747. <lb/>42. Marchler-Bauer,A., Anderson,J.B., Cherukuri,P.F., DeWeese-Scott,C., <lb/>Geer,L.Y., Gwadz,M., He,S., Hurwitz,D.I., Jackson,J.D., Ke,Z. et al. <lb/>(2005) CDD: a Conserved Domain Database for protein classification. <lb/>Nucleic Acids Res., 33, D192-D196. <lb/>43. Jones,D.T. (1999) Protein secondary structure prediction based <lb/>on position-specific scoring matrices. J. Mol. Biol., 292, <lb/>195-202. <lb/>44. Rost,B. (2001) Review: protein secondary structure prediction <lb/>continues to rise. J. Struct. Biol., 134, 204-218. <lb/>45. O&apos;Sullivan,O., Zehnder,M., Higgins,D., Bucher,P., Grosdidier,A. and <lb/>Notredame,C. (2003) APDB: a novel measure for benchmarking <lb/>sequence alignment methods without reference alignments. <lb/>Bioinformatics, 19, i215-i221. <lb/>46. Wallace,I.M., O&apos;Sullivan,O., Higgins,D.G. and Notredame,C. (2006) <lb/>M-Coffee: combining multiple sequence alignment methods with <lb/>T-Coffee. Nucleic Acids Res., 34, 1692-1699. <lb/>47. Zhou,H. and Zhou,Y. (2005) SPEM: improving multiple sequence <lb/>alignment with sequence profiles and predicted secondary structures. <lb/>Bioinformatics, 21, 3615-3621. <lb/>48. Cline,M., Hughey,R. and Karplus,K. (2002) Predicting reliable regions <lb/>in protein sequence alignments. Bioinformatics, 18, 306-314. <lb/>49. Sadreyev,R. and Grishin,N. (2003) COMPASS: a tool for comparison <lb/>of multiple protein alignments with assessment of statistical <lb/>significance. J. Mol. Biol., 326, 317-336. <lb/>50. Venclovas,C. and Margelevicius,M. (2005) Comparative modeling in <lb/>CASP6 using consensus approach to template selection, <lb/>sequence-structure alignment, and structure assessment. Proteins, 61, <lb/>99-105. <lb/>51. Kinch,L.N., Wrabl,J.O., Krishna,S.S., Majumdar,I., Sadreyev,R.I., <lb/>Qi,Y., Pei,J., Cheng,H. and Grishin,N.V. (2003) CASP5 assessment of <lb/>fold recognition target predictions. Proteins, 53, 395-409. <lb/>52. Ginalski,K., Elofsson,A., Fischer,D. and Rychlewski,L. (2003) <lb/>3D-Jury: a simple approach to improve protein structure predictions. <lb/>Bioinformatics, 19, 1015-1018. <lb/>53. Wallner,B. and Elofsson,A. (2005) Pcons5: combining consensus, <lb/>structural evaluation and fold recognition scores. Bioinformatics, <lb/>21, 4248-4254. <lb/>54. Chivian,D., Kim,D.E., Malmstrom,L., Schonbrun,J., Rohl,C.A. and <lb/>Baker,D. (2005) Prediction of CASP6 structures using automated <lb/>Robetta protocols. Proteins, 61, 157-166. <lb/>55. O&apos;Sullivan,O., Suhre,K., Abergel,C., Higgins,D.G. and Notredame,C. <lb/>(2004) 3DCoffee: combining protein sequences and structures <lb/>within multiple sequence alignments. J. Mol. Biol., 340, <lb/>385-395. <lb/>56. Simossis,V.A. and Heringa,J. (2004) Integrating protein secondary <lb/>structure prediction and multiple sequence alignment. Curr. Protein <lb/>Pept. Sci., 5, 249-266. <lb/></listBibl>

			<page>4374</page>

			<note place="headnote">Nucleic Acids Research, 2006, Vol. 34, No. 16 </note>


	</text>
</tei>
