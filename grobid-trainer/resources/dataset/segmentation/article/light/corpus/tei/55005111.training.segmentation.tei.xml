<?xml version="1.0" ?>
<tei xml:space="preserve">
	<teiHeader>
		<fileDesc xml:id="_0"/>
	</teiHeader>
	<text xml:lang="en">
			<front>InfoStick: an interaction device for <lb/>Inter-Appliance Computing <lb/>Naohiko Kohtake 1 , Jun Rekimoto 2 , and Yuichiro Anzai 1 <lb/>1 Department of Computer Science, Keio University, <lb/>3-14-1 Hiyoshi, Kohoku-ku, Yokohama 223-0061 Japan <lb/>kohtake@naohiko.com, anzai@aa.cs.keio.ac.jp <lb/>http://www.naohiko.com/ <lb/>2 Interaction Laboratory, Sony Computer Science Laboratories, <lb/>3-14-3 Higashigotanda, Shinagawa-ku, Tokyo 141-0022 Japan <lb/>rekimoto@csl.sony.co.jp <lb/>http://www.csl.sony.co.jp/person/rekimoto.html/ <lb/>Abstract. Many electric appliances have recently become network reach-<lb/>able, and we would receive better services from them if we could use them <lb/>in combination. We have therefore developed a new hand-held interac-<lb/>tion device called &quot;InfoStick&quot; that serves as an &quot;information carrier&quot; <lb/>for these appliances. For example, a user can &quot;pick up&quot; TV program <lb/>information from a web browser and &quot;drop&quot; it into a VCR deck, just <lb/>like moving a physical object from one place to another. Using attached <lb/>visual markers, the InfoStick identifies information appliances or other <lb/>physical objects and gives an appropriate choice of action to the user. <lb/>This paper explains the design and implementation of the InfoStick as <lb/>well as several potential applications using this device. <lb/></front>

			<body>1 Introduction <lb/>The network infrastructure has spread all over the world, and nowadays there <lb/>are a variety of devices that can access the Internet. Internet access is no longer <lb/>limited to personal computers or powerful workstations. Thanks to recent ad-<lb/>vances in digital and network technologies, many consumer electric devices such <lb/>as VCRs, electric-organs or air-conditioners, as well as office appliances such as <lb/>printers and LCD projectors are becoming &quot;network reachable&quot;. We call these <lb/>devices &quot;Information Appliances&quot;. It is now reasonable to expect these appli-<lb/>ances to communicate with each other in order to provide better services to <lb/>users. For example, a VCR could receive a TV program information from the <lb/>web browser or a printer could create a hardcopy of an image projected on a <lb/>LCD projector. <lb/>However, operating these multiple devices may cause user interface problems. <lb/>We might have to handle a number of remote controllers for each device, and <lb/>there are few practical ways of controlling two or more appliances. When we want <lb/>to &quot;transfer&quot; TV program information from the web browser on a computer to <lb/>the VCR deck, the VCR controller does not help us. We thus need to operate <lb/>information appliances in combination, that is not on their own appliance. <lb/>In addition, we also need to deal with physical (non-electric) objects such <lb/>as printed paper. Even if digital and network technology becomes more advan-<lb/>tageous, paper still has significant advantages: it is portable, writable, inex-<lb/>pensive, and physically visible. However, transferring data between information <lb/>appliances and physical objects always requires manual operations. For instance, <lb/>when we find an URL of an interesting web site on a poster, it is necessary to <lb/>input the URL into a computer with a keyboard or write it down if there is no <lb/>computer nearby. It would be quite useful if we could &quot;pick up&quot; a printed URL <lb/>and &quot;drop&quot; it on an information appliance. In summary, we always need support <lb/>for exchanging information between digital and physical objects. We call such <lb/>operations &quot;Inter-Appliance Computing&quot;. <lb/>To provide this support, we have developed a hand-held device called &quot;Info-<lb/>Stick&quot; that serves as &quot;an information carrier&quot; for Inter-Appliance Computing. <lb/>Using the InfoStick, a user can &quot;pick up&quot; TV program information from a web <lb/>browser and &quot;drop&quot; it into a VCR deck. The InfoStick identifies information <lb/>appliances or other physical objects by recognizing attached visual markers and <lb/>gives an appropriate choice of actions to the user. <lb/>

            2 InfoStick Device <lb/>Fig. 1. External appearance of the InfoStick <lb/>The InfoStick prototype is a hand-held interaction device for exchanging <lb/>information among information appliances and physical objects. Figure 1 shows <lb/>the external appearance of the InfoStick. It consists of a small display to show <lb/>what kind of data items can be exchanged, a video camera for object recognition, <lb/>three buttons to operate data exchanges, and a micro processor for controlling <lb/>all of them. The InfoStick can be connected to the Internet through a wireless <lb/>network. Physically, it looks like a laser-pointer or a small wand, and can be <lb/>easily pointed to target objects. Using the InfoStick is similar to drag-and-drop, <lb/>a commonly used technique for interacting with GUIs. <lb/>The InfoStick automatically identifies the information appliance (e.g., a VCR) <lb/>or the physical object (e.g., paper) in front of it, and shows a user a list of ap-<lb/>propriate actions on the display. Visual markers attached to the objects are <lb/>recognized by the InfoStick&apos;s camera. Among the three buttons for operating <lb/>the InfoStick, the &quot;get&quot; button is used to &quot;pick up&quot; information from the target <lb/>object, the &quot;put&quot; button is used to transfer information from the InfoStick to the <lb/>target object, and the &quot;select&quot; button is used to select actions and information <lb/>showed on the InfoStick display. <lb/>ÖìòÅ¾ÓÂ¥³¦ <lb/>±ÔìïéáÀòí ¶ ¶Íìðñâï <lb/>®ÕÊââñaeëäÐéaeáâÃaeéâ <lb/>¯ÐìëöÀÐÉÍÞêíåéâñ <lb/>°Çòë&apos;ðÓaeðaeñaeëäÀÞïá <lb/>±ÔìïéáÀòí ¶ ¶Íìðñâï <lb/>²ÀËËÑaeêâÑÞßéâ <lb/>³ÊÞëòÞéìãÊÁªÕ <lb/>Scroll by SELECT Button <lb/>Recognition <lb/>ÄÂÑÌéöêíaeàÍïìäïÞê <lb/>ÍÒÑ § § § § § <lb/>ÖìòÅ¾ÓÂ¥´¦ <lb/>´ÌéöêíaeàÍïìäïÞê <lb/>GET <lb/>ÖìòÅ¾ÓÂ¥³¦ <lb/>²ÀËËÑaeêâÑÞßéâ <lb/>SELECT <lb/>ÖìòÅ¾ÓÂ¥´¦ <lb/>´ÌéöêíaeàÍïìäïÞê <lb/>ÖìòÅ¾ÓÂ¥´¦ <lb/>³ÊÞëòÞéìãÊÁªÕ <lb/>ÖìòÅ¾ÓÂ¥´¦ <lb/>²ÀËËÑaeêâÑÞßéâ <lb/>SELECT <lb/>SELECT <lb/>Recognition <lb/>ÄÂÑ § § § § § <lb/>ÍÒÑÀËËËâôðµ•² <lb/>SELECT ÄÂÑ § § § § § <lb/>ÍÒÑÌéöÐèae¯¬²µª ¶ <lb/>PUT <lb/>RESERVATION Olympic98 Ski <lb/>ÍÒÑ•Óaeáâì°½ïììê¯® <lb/>ÌéöÐèae¯¬²µª ¶ÀÅ° <lb/>Recognition <lb/>ÄÂÑË«ÖÔâÞñåâïAEëãì« <lb/>ÍÒÑÊÞaeéÌéöêíaeàÌïä« <lb/>ÄÂÑË«ÖÔâÞñåâïAEëãì« <lb/>ÍÒÑÌéöêíaeàÒÏÉ« <lb/>SELECT <lb/>PUT <lb/>BROWSING www.Olympic.org <lb/>ÖìòÅ¾ÓÂ¥µ¦ <lb/>µË«ÖÔâÞñåâïAEëãì« <lb/>GET <lb/>GET <lb/>ÍÒÑ•ÍÀ®¯½¾ë÷ÞaeÉÞß« <lb/>åññí•ôôô«Ìéöêíaeà«àìê <lb/>Recognition <lb/>ÄÂÑ § § § § § <lb/>ÍÒÑÊÞëòÞéìãÊÁÕ <lb/>PRINTING MDX.DOC file <lb/>PUT <lb/>ÍÒÑ•Íïae¯½®ÃÉÞðâï <lb/>ÊÁÕ«áìà <lb/>ÄÂÑ § § § § § <lb/>ÍÒÑÊÞëòÞéìãÊÁÕ <lb/>A <lb/>E <lb/>D <lb/>C <lb/>B <lb/>SELECT <lb/>Fig. 2. Typical Information flow during the InfoStick operation <lb/>Figure 2 shows a typical information flow during the InfoStick operation. <lb/>The InfoStick display shows a list of data items, and a user can scroll down <lb/>the list and select one by pushing the &quot;select&quot; button (Figure 2 A). When a <lb/>user points the InfoStick at a target object, the video camera mounted in the <lb/>InfoStick detects a visual marker attached to the object (Figure 2 B). Then, the <lb/>display on the InfoStick shows a list of items that can be picked up from the <lb/>target object and also a list of items that can be transmitted to the target object. <lb/>When the &quot;get&quot; button is pushed, the target object&apos;s information is stored in <lb/>the InfoStick. In Figure. 2 B, a user is getting &quot;Olympic Program information&quot;. <lb/>When a user moves to another target, the InfoStick recognizes it and the <lb/>available actions corresponding to the recognized object appear on the display <lb/>(Figure 2 C, D, and E). If the InfoStick has some data that can be &quot;put&quot; into the <lb/>computer, the user can select an action by the &quot;select&quot; button (from the mail <lb/>address to the URL in Figure 2 C). By pushing the &quot;put&quot; button, the user can see <lb/>on the display which target and what kind of information the InfoStick has put <lb/>into the computer. In this case, the target is a PC &quot;PC12@Anzai Lab.&quot; and the <lb/>&quot;put&quot; information is &quot;Olympic URL&quot;, which the user can then browse. However, <lb/>if the InfoStick has only one possible action corresponding to the recognized <lb/>object, the displayed action does not change even if the user pushes the &quot;select&quot; <lb/>button (Figure 2 D). So in this case, the user can do only one operation; that <lb/>is, printing out &quot;Manual of MDX file&quot;. If a user wants to select information <lb/>previously put in, he can select it before detecting a target object. Then, this <lb/>information appears on the display as the possible action that he can &quot;put&quot; first <lb/>(Figure 2 E). After that, other possible actions can be selected in turn. <lb/>During these operation sequences, the InfoStick does not directly &quot;get&quot;/&quot;put&quot; <lb/>data from/to the target objects. Instead, actual data transfer occurs through the <lb/>network to which all devices are connected. The InfoStick recognizes a target ob-<lb/>ject according to the attached ID and issues appropriate data transfer commands <lb/>to the network. In our system, we use printed 2D matrix codes (see Figure 1) as <lb/>IDs. It is also possible to attach such IDs to non-electric objects. <lb/>

            3 InfoStick Applications <lb/>Using the prototype InfoStick, we have built several potential applications to <lb/>accomplish an interaction for Inter-Appliance Computing. We believe this tech-<lb/>nology will become a part of functions for mobile phone and each user has his <lb/>own InfoStick device in the future. Some examples of these applications are given <lb/>in the following sections. <lb/>3.1 Transferring Information between Computers <lb/>A basic usage of the InfoStick is to transfer digital data between several comput-<lb/>ers. At a meeting, for example, the presenter often uses a projector to support <lb/>his presentation (Figure 3). <lb/>Fig. 3. At a meeting, the InfoStick creates the illusion that the presenter can &quot;get a <lb/>slide from the projector&quot; and &quot;put it in my computer&quot;. <lb/>The presenter can get the target presentation slide by physically pointing <lb/>the InfoStick to the projector and pushing the &quot;get&quot; button. When he wants to <lb/>take the entire slides, he can &quot;select&quot; the &quot;Entire Slides&quot; menu item and push <lb/>the &quot;get&quot; button. After that, if he wants to create a copy of the acquired slide, <lb/>he can point the InfoStick to his computer and upload the slide by pushing the <lb/>&quot;put&quot; button. In this case, the projector itself does not have to hold the slide <lb/>data. In fact, the actual slide contents are stored in servers on the network, and <lb/>the projector is used as a physical landmark for obtaining data, because it has a <lb/>mental connection to the currently displayed slide. The visibility and tangibility <lb/>of the user&apos;s action are important because of intuitive. A user can therefore <lb/>exchange information more directly and the InfoStick creates the illusion that <lb/>a user can &quot;get a slide from the projector&quot; and &quot;put it in my computer&quot;. On <lb/>the other hand, if the usual file transfer method is used, a user must recognize <lb/>both the target computer&apos;s name and the slide&apos;s name in order to move the slide <lb/>by file transfer protocol (FTP). These operations are quite symbolic and thus <lb/>invisible. <lb/>3.2 Operating Information Appliances <lb/>The second possible application of the InfoStick allows a user to operate in-<lb/>formation appliances. For example, if TV program information is stored in the <lb/>InfoStick, when a user points the InfoStick to the target VCR deck, the display <lb/>of the InfoStick shows the TV program names that he can reserve for recording. <lb/>After selecting the program name with the &quot;select&quot; button and putting it into <lb/>the VCR with the &quot;put&quot; button, the VCR is thus programmed. (Figure 4). <lb/>Another InfoStick application is making a phone call. You normally know <lb/>the person&apos;s name and phone number before calling. If you do not, you have <lb/>to find them out. Without the phone number, it is impossible to call. However, <lb/>with the InfoStick, a user does not have to know the number because it is stored <lb/>Fig. 4. The InfoStick programs a VCR to make a recording <lb/>in a server on the network. The user simply points the InfoStick at a phone and <lb/>puts the person&apos;s name into the phone, which then calls the person. <lb/>3.3 Getting information from paper <lb/>The InfoStick can also &quot;get&quot; information from physical objects like paper by <lb/>using visual markers. When the InfoStick recognizes the IDs, a server connected <lb/>to the InfoStick displays a list of items of the recognized physical object. Then, <lb/>the user can &quot;get&quot; the information from the target object directly by the same <lb/>interaction as that with information appliances (Figure 5). <lb/>Fig. 5. A user can &quot;pick up&quot; a printed URL from a poster and &quot;drop&quot; it into a computer <lb/>

            3.4 Putting Information onto paper <lb/>Another InfoStick application is to attach digital information onto paper like <lb/>a tag or a document note. For example, it would be useful if we could attach <lb/>presentation slide files to the corresponding document. Using the InfoStick, the <lb/>user can &quot;pick up&quot; the slide data from the computer and attach it to the printed <lb/>marker on the document. For instance, a user can simply take this document to <lb/>the conference, &quot;get&quot; the presentation file from this marker, and &quot;put&quot; the file <lb/>into the projector. So the user does not have to bring a computer, a projector <lb/>or a floppy disk. InfoStick can be used to place all the necessary information on <lb/>the presentation paper. The InfoStick can also use a piece of paper as a physical <lb/>memory bank. If we want to store data for a long time, we can &quot;put&quot; it and <lb/>write down its name as a title on a tag. Later, when a user wants to use this <lb/>data, he can &quot;get&quot; it from the tag. This system can also be used by teachers for <lb/>announcing information about exercises to students. After teachers &quot;put&quot; data <lb/>with the title of the exercise on a tag, students use the InfoStick to &quot;get&quot; it from <lb/>the tag on a notice board. <lb/>Fig. 6. A PostIt note with attached digital data <lb/>It is also possible to use a PostIt note with a printed visual marker (Figure 6). <lb/>The user can attach any digital data on a PostIt note, and stick it to any objects. <lb/>This usage provides a way of organizing digital data with physical documents. <lb/>So even networking becomes ubiquitous, paper will still remain significant. This <lb/>application of the InfoStick therefore augments electric features with advantages <lb/>of paper. <lb/>3.5 Getting information from one object and Putting it into many <lb/>objects <lb/>In everyday life, there are many kinds of information. A name card is a typ-<lb/>ical example of this. Generally, it gives a person&apos;s name, occupation, address, <lb/>phone/facsimile number, email and URL. When we make a phone call, we intu-<lb/>itively select appropriate information (a phone number) from the card. When we <lb/>use a facsimile, the other attribute (a facsimile number) would be used instead <lb/>of a phone number. There is thus an implicit correspondence between the target <lb/>device and these attributes. When the InfoStick identifies the target object, it <lb/>automatically selects appropriate information by combining the attribute&apos;s ID <lb/>and the target object&apos;s ID (Figure 7). <lb/>Anzai Lab. Dept. of Computer Science <lb/>Graduate School Sci&amp;Tech KEIO Univ. <lb/>NAOHIKO KOHTAKE <lb/>3-14-1 Hiyoshi Kouhoku-ku <lb/>Yokohama 223-8522, Japan <lb/>Tel: +81-45-560-1060 (Fax:1064) <lb/>Email: kohtake@aa.cs.keio.ac.jp <lb/>Get <lb/>Put <lb/>E-Mail <lb/>FAX <lb/>TEL <lb/>WWW <lb/>InfoStick <lb/>Fig. 7. Automatic selections of information according to the target object <lb/>3.6 Getting information from a screen <lb/>The InfoStick can recognize visual markers displayed on a screen. It is therefore <lb/>possible to &quot;pick up&quot; the IDs from TV programs or web pages. Figure 8 illustrates <lb/>this technique. When a user is watching a TV program, he finds an interesting <lb/>piece of information on the TV screen. Then, he &quot;gets&quot; this information from the <lb/>visual marker on the TV screen (above-left) and &quot;puts&quot; it to the nearby computer <lb/>(below-left). The corresponding web page appears on the computer screen. After <lb/>browsing the information from this page, he also find some information on an <lb/>interesting TV program and he &quot;gets&quot; it by pointing the InfoStick at the browser <lb/>on the screen (below-right). Finally, he goes to the VCR deck, and &quot;puts&quot; it into <lb/>the VCR to record the TV program (above-right). <lb/>(a) <lb/>(b) <lb/>(c) <lb/>Fig. 8. (a) Picking up a URL from a TV screen and dropping it into a computer, <lb/>(b) browsing TV program information on the computer, and (c) operating a VCR by <lb/>picking up the TV program information from the computer and dropping it in the <lb/>VCR deck <lb/>

            4 Implementation Details <lb/>4.1 Hardware Architecture <lb/>A prototypical InfoStick is depicted in Figure 9. We made it as compact as pos-<lb/>sible to allow the user to operate it with only one hand. The InfoStick consists of <lb/>the following items: a SONY CCD-MC1 as a CCD camera to sense video images <lb/>from a physical environment, three input buttons to &quot;get&quot;/&quot;put&quot;/&quot;select&quot;, and a <lb/>SUNLIKE 16×2 LCD as a display to show the particular information that the In-<lb/>foStick can &quot;get&quot;/&quot;put&quot;/&quot;select&quot;. A PARALLAX BASIC STAMP II is included <lb/>in the InfoStick as a small computer for controlling the I/O signal and LCD and <lb/>for exchanging data between the InfoStick and a Mitsubishi AMiTY-CN with <lb/>RS-232 serial communication protocols. Parallax BASIC Stamps are small com-<lb/>puters that run Parallax BASIC (PBASIC) programs. They have programmable <lb/>I/O pins that can be used to directly interface to TTL-level devices, such as <lb/>buttons, LCDs, speakers, and shift registers. And with extra components, these <lb/>I/O pins can be connected to non-TTL devices, such as RS-232 networks. The <lb/>Mitsubishi AMiTY-CN is located on the user&apos;s waist. It is a mobile computer for <lb/>recognizing the 2D matrix code from the CCD camera&apos;s video image, by using <lb/>an IBM Smart Capture Card II, and for communicating with other computers <lb/>on the network. For electric appliances that are not on the network, the near-<lb/>est IBM PC communicates with other PCs and controls the electric appliances <lb/>through them. SONY VboxII-CI1100s connected to the IBM PCs control electric <lb/>appliances. <lb/>CCD CAMERA <lb/>GET/ PUT BUTTON <lb/>DISPLAY <lb/>NTSC <lb/>RS-232C <lb/>SELECT BUTTON <lb/>PROCESSOR <lb/>Fig. 9. Configuration of the InfoStick <lb/>4.2 Software Architecture <lb/>Figure 10 illustrates the structure of the software in the InfoStick system. A <lb/>video image from the CCD camera is first sent to the Marker Reader. The <lb/>Marker Reader then extracts the black-and-white pattern of the image that the <lb/>InfoStick is pointing at and analyzes it. If a 2D Matrix Code is found from <lb/>the image, it is converted to an ID number that will be sent to the InfoStick <lb/>Controller. Then the controller receives the ID number, it searches for the target <lb/>object&apos;s name and the corresponding available information that the InfoStick <lb/>can &quot;get&quot;/&quot;put&quot; from the InfoStick DataBase. Marker Reader and InfoStick <lb/>Controller are implemented in the InfoStick, and the other software modules <lb/>are in computers connected to the network. The InfoStick DataBase contains <lb/>the information received by the InfoStick and the ID Table corresponding to <lb/>the ID number given by the Information Manager on the network. If the user <lb/>wants to operate one of objects, he can &quot;select&quot; and &quot;get&quot;/&quot;put&quot; the necessary <lb/>information with the input buttons. In the case of &quot;get&quot;, the target information <lb/>is added into the InfoStick DataBase. On the other hand, in the case of &quot;put&quot;, the <lb/>target physical object is operated by the Machine Controller with the necessary <lb/>information obtained from the Information Manager. <lb/>All code without PBASIC is written in Java and executed on an IBM PC <lb/>running Windows95. The video capturing class is of special note as it uses <lb/>JDK1.1 Java-native-interface (JNI). The Information Manager and ID table are <lb/>also Java applications and communicate with other experimental applications <lb/>through TCP/IP connections. All physical objects used in our applications are <lb/>directly connected to the Ethernet. The InfoStick, however, uses a wireless local <lb/>area network. A user therefore can take the InfoStick anywhere within wireless <lb/>coverage. <lb/>InfoStick <lb/>DataBase <lb/>(ISDB) <lb/>MarkerReader(MR) <lb/>InfoStickController(ISC) <lb/>InformationManager(IM) <lb/>MachineController(MC) <lb/>ID Table <lb/>(IDT) <lb/>BUTTON <lb/>DISPLAY <lb/>VIDEO, PRINTER, PC, etc. <lb/>CCD <lb/>ª¼ÉÍ¼É <lb/>Å½AEªËÀºÂÊ <lb/>Network <lb/>Fig. 10. Software architecture of the InfoStick system <lb/>

            5 Related Work <lb/>There are several hand-held devices that are designed for operating other digital <lb/>and physical objects. Most of them, however, aim to operate a single target (e.g., <lb/>a remote controller for a TV set), rather than to operate several target objects. <lb/>The PDA-ITV [4] uses a PDA as a commander for interactive TV. Although <lb/>it uses two different displays for one task, the roles of PDA and TV are static; <lb/>PDA acts as a commander only for the TV. Neither seamless manipulation is <lb/>possible, nor exchanging information between the PDA and ITV is interactive. <lb/>For example, it is not possible to &quot;pick up&quot; information from the TV screen, and <lb/>then &quot;drop&quot; it into the PDA. The PaperLink [1] is a computer augmented pen <lb/>with a video camera that is capable of recognizing text on a printed document. <lb/>Although PaperLink can pick up information from paper and put it on other <lb/>paper, it does not support inter object operations. For example, the user can not <lb/>operate a computer object and paper information with the same PaperLink pen. <lb/>MediaBlocks [5] is a small tag used as a physical container of digital information. <lb/>The user can virtually attach and carry digital data by using this tag. This <lb/>system assumes every information appliance has a tag reader/writer, making <lb/>it different to scale this environment. A user is unable to see the carried data <lb/>until the tag is actually inserted into a tag reader/writers. Finally, the Pick-<lb/>and-Drop system [2] is a direct manipulation technique that can be used to <lb/>transfer data between different computers as well as on the same computer. <lb/>Pick-and-Drop allows the user &quot;pick up&quot; an object from a display and drop it <lb/>onto another display as if he were operating a physical object. Our InfoStick <lb/>system is an extension of this system. Although our system also uses the Pick-<lb/>and-Drop metaphor for &quot;get&quot; and &quot;put&quot; operations, the purpose of the InfoStick <lb/>is to operate not only computers but all physical objects. <lb/>

            6 Conclusion and Future Work <lb/>We have developed the InfoStick, a new hand-held interaction device that aims to <lb/>provide a uniform way of operating everyday digital/physical objects. Currently, <lb/>the InfoStick recognizes the target object by using a combination of attached <lb/>visual markers and a video camera. When it identifies the ID of the object, the <lb/>InfoStick searches for the object&apos;s name and available information related to that <lb/>name from the InfoStick DataBase on the network. The idea of deploying visual <lb/>markers for object-level identification in the environment is aging. However, the <lb/>use of these markers has advantages and disadvantages. This technique enables <lb/>to identify an object even if it is not connected to the network, such as a printed <lb/>material like a poster, a book, or a newspaper, and that visual marker can <lb/>operate it with easy technology at low cost. On the other hand, a user must <lb/>always know where the visual marker is. And the camera in the InfoStick needs <lb/>to be pointed at it. <lb/>There are other ways of recognizing objects. They include wireless tags and <lb/>infrared (IR) beacons. In the case of using a wireless tag, when a receiver ap-<lb/>proaches within about one meter of the tag, the receiver can recognize its ID <lb/>number. On the other hand, the IR beacon transmits the ID number to the envi-<lb/>ronment periodically. This beacon covers room-size area and is relatively robust <lb/>regarding orientation of the sensors. For each method for recognizing objects, <lb/>there is a different advantage and by using it appropriately, the InfoStick will <lb/>become more widely used. <lb/>In addition, we are planning to provide a &quot;docking station&quot; of the InfoStick <lb/>for easy information exchange with PCs. When a user &quot;docks&quot; the InfoStick, <lb/>information stored in the InfoStick is transferred to the PC and the user can ex-<lb/>change them on the PC window with the mouse. The mouse&apos;s advantages include <lb/>being able to &quot;grab&quot;, &quot;drag&quot; and &quot;drop&quot; one object from many objects on the <lb/>same window. On the contrary, when the InfoStick receives a lot of information, <lb/>it is difficult to select items on the LCD display. If the InfoStick icon pops up on <lb/>a window when it is put into a docking station connected to a computer, we can <lb/>release, delete and select objects on the window by using the mouse. (Figure 11). <lb/>+PHQ5VKEM0Q <lb/>Drag <lb/>Drop <lb/>Drag <lb/>Fig. 11. Drag-and-drop to the InfoStick icon on the computer window <lb/></body>

			<div type="acknowledgement">Acknowledgements <lb/>We wish to thank Jun Yamamoto, Nobuyuki Matsushita and Masanori Saitoh <lb/>from Keio University for their contributions to this project. Several helpful dis-<lb/>cussions with members of the Sony CSL real-world UI group were also very <lb/>helpful. We would also like to express our appreciation to Mario Tokoro and <lb/>Toshi Doi for supporting this research. <lb/></div>

			<listBibl>References <lb/>1. Toshifumi Arai, Dietmar Aust, and Scott Hudson. Paperlink: A technique for hy-<lb/>perlink from real paper to electronic content. InProceedings of CHI&apos;97, pp.327-333, <lb/>1997. <lb/>2. Jun Rekimoto. Pick-and-Drop: A Direct Manipulation Technique for Multiple Com-<lb/>puter Environments. In Proceedings of UIST&apos;97, pp. 31-39, 1997. <lb/>3. Jun Rekimoto, and Masanori Saitoh. Augmented Surfaces: A Spatially Continuous <lb/>Work Space for Hybrid Computing Environments. In Proceedings of CHI&apos;99, pp. <lb/>378-385, 1999. <lb/>4. Stott Robertson, Cathleen Wharton, Cathsrine Achworth, and Marita Franzke. <lb/>Dual device user interface design: PDAs and interactive television. In Proceedings <lb/>of CHI&apos;96, pp. 79-86, 1996. <lb/>5. Brygg Ullmer, Hiroshi Ishii, and Dylan Glas. mediaBlocks: Physical Containers, <lb/>Transports, and Control for Online Media, In Proceedings of SIGGRAPH&apos;98, pp. <lb/>379-386, 1998. <lb/>6. Mark Weiser. The computer for the twenty-first-century. Scientific American, pp.94-<lb/>104, 1991. </listBibl>


	</text>
</tei>
