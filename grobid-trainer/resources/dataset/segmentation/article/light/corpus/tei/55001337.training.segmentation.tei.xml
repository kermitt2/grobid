<?xml version="1.0" ?>
<tei xml:space="preserve">
	<teiHeader>
		<fileDesc xml:id="_0"/>
	</teiHeader>
	<text xml:lang="en">
			<front>A. J. MCAULEY <lb/>SELF-CONFIGURING NETWORKS <lb/>K. MANOUSAKIS <lb/>TELCORDIA <lb/>445 SOUTH STREET, MORRISTOWN, NJ 07960 <lb/>ABSTRACT* <lb/>To make future tactical battlefield networks more flexible <lb/>and robust, nodes must rapidly configure themselves with <lb/>little or no human intervention and reconfigure <lb/>automatically as the environment changes. This paper <lb/>describes the Dynamic Registration and Configuration <lb/>Protocol (DRCP) and Dynamic Address Allocation <lb/>Protocol (DAAP) that together can provide true stateless <lb/>autoconfiguration of an entire network domain. We first <lb/>describe DRCE which extends DHCP into new domains <lb/>such as wireless networks and commercial service <lb/>providers. We then describe DAAP, which distributes <lb/>addresses and other configuration parameters to DRCP <lb/>servers. Although kept much simpler by relying on DRCE <lb/>we show DAAP must still be carefully designed to ensure <lb/>robustness while maintaining enough address hierarchy to <lb/>reduce routing protocol overhead. Implementations of <lb/>DRCP and DAAP on a Linux PC platform are described. <lb/></front>

			<body>1. INTRODUCTION <lb/>Most applications use the TCP/IP Internet Protocol suite to <lb/>provide robust communication over heterogeneous <lb/>network technologies. With the growth in networked <lb/>devices and wireless access technology, these networks are <lb/>becoming more complex and malleable. Although the <lb/>mobility is largely confined to roaming hosts in the <lb/>commercial domain, battlefield networks will be <lb/>characterized by high mobility, not only of leaf nodes but <lb/>also of whole networks. Whole networks (e.g., of sensors) <lb/>may need to be rapidly deployed. Nodes may continuously <lb/>move and may appear for short periods of time and then <lb/>disappear. The result is a more dynamic network. <lb/>At one extreme, networks will constantly change shape <lb/>and have little structure. Here addressing can be flat and <lb/>routing done using an ad-hoc (MANET) routing or simply <lb/></body>

			<front>I <lb/>Prepared through collaborative participation in the Advanced Telecommuni-<lb/>cations &amp; Information Distribution Research Program (ATIRP) Consortium <lb/>sponsored by the U.S. Army Research Laboratory under the Federated Labora-<lb/>tory Program, Cooperative Agreement DAALOl-96-~-OOOl?. The U.S. Govem-<lb/>ment is authorized to reproduce and distribute reprints for Government purposes <lb/>notwithstanding any copyright notation thereon. <lb/> 0-7803-6521-6/$10.00 (C) 2000 IEEE <lb/>315 <lb/>UNIVERSITY OF MARYLAND <lb/>MARYLAND <lb/></front>

			<body>broadcasting. At the other extreme, networks will be <lb/>highly stable, with only leaf nodes (hosts) moving. Here, <lb/>router addresses can be manually configured to reflect the <lb/>fixed hierarchy and routing can be done using <lb/>conventional routing protocols. In between, however, there <lb/>are many quasi-dynamic networks. <lb/>There are many examples of quasi-dynamic networks. A <lb/>dynamically deployed sensor array, for example, may <lb/>require rapid deployment; but be relatively stable except <lb/>for some incremental deployment and losses. A fast <lb/>moving platoon might constantly change its attachment <lb/>point to the rest of the Brigade, but its elements may be <lb/>fairly constant. An airbome communication node may <lb/>move over the battlefield and provide support to different <lb/>elements, but remain &quot;fixed&quot; for hours at a time. <lb/>Quasi-dynamic networks present challenges for <lb/>registration, configuration, address binding and routing. <lb/>This paper is concerned with registration and <lb/>autoconfiguration in these quasi-dynamic networks, which <lb/>we believe, are functions that should be tied together. It <lb/>does not discuss binding, and routing protocols, which we <lb/>believe should be independent of autoconfiguration. <lb/>Our goal is that all host and routers in the quasi-dynamic <lb/>domain will be plug and play. Nodes register then self-<lb/>configure, with little or no human intervention; moreover, <lb/>the nodes reconfigure automatically as network topology <lb/>changes. The only restriction on the number of nodes <lb/>would be the size of the address space. If achieved this <lb/>would not only reduce management nightmares, but allow <lb/>far greater mobility to battlefield nodes without causing: <lb/>a) routing protocols to blow-up, b) single points of failure <lb/>(servers), or c) forcing tunneling overhead on all users. <lb/> Section 2 describes existing approaches to registration and <lb/>configuration. Section 3 and describe the Dynamic <lb/>Registration and Configuration Protocol (DRCP) that <lb/>extends DHCP for new environments and Dynamic <lb/>Address Allocation Protocol (DAAP) which distributes <lb/>addresses within a domain. Section 5 describes the <lb/>combination of DRCP and DAAP for complete network <lb/>autoconfiguration. Finally, Section 6 compares our <lb/>approach to other approaches. <lb/>2. REGISTRATION AND CONFIGURATION <lb/>This section describes several protocol used Today for <lb/>registration and autoconfiguration. We define these <lb/>functions as follows: <lb/>Registration: A network checks a client&apos;s credentials <lb/>and either allows or disallows them into the network. <lb/>Configuration: A network provides client&apos;s <lb/>information to adapt then to network characteristics, <lb/>such a fully qualified IP address, domain name, and <lb/>addresses of the first-hop and local DNS server. <lb/>We believe these two functions should be combined, <lb/>because they both must be done before a node can send <lb/>packets. Other functions should be separate either because <lb/>they either do not involve clients (e.g., routing and access <lb/>control) or should be optional (e.g., locating a node). <lb/>2.1 PPP <lb/>The most common protocol client&apos;s use for registration <lb/>and configuration is the Point to Point Protocol (PPP) [l]. <lb/>The client sends registration information, such as login <lb/>and password to an access concentrator on the Layer 2 <lb/>network to which the client is connected. The access <lb/>concentrator then configures the client. Layer Two <lb/>Tunneling Protocol (L2TP) can tunnel PPP packets from <lb/>the concentrator to a server anywhere in the Intemet [2]. <lb/>While PPP is a good for serial links, such as phone lines, it <lb/>is not ideal for networks that frame packets, such as <lb/>Ethernet. While protocols can allow PPP over anything <lb/>(e.g., PPPoE [3]), they leave much unnecessary overhead <lb/>(2 bytes for framing, 2 bytes for CRC, up to 4 other bytes, <lb/>and bit or byte stuffing overhead). <lb/>2.2 Mobile IP <lb/>Mobile IP is a simple and scalable solution to manage <lb/>device mobility throughout the global Intemet [4]. A <lb/>Home Agent provides the dynamic binding function that <lb/>redirects messages to the roaming users&apos; latest location. In <lb/>addition the Foreign Agent supports host registration and <lb/>configuration, especially when combined with recent <lb/>enhancements [5] [6] [7]. <lb/>Mobile IP provides networks transparency above the IP <lb/>layer. Although this transparency is ideal for many <lb/>applications (e.g., TCP applications such as telnet or ftp), <lb/>this functionality is not always needed (e.g., for web <lb/>browsing) or may be better provided by alternative <lb/>mechanism (viz., SIP for real-time applications). Given its <lb/>costs (e.g., triangular routing) and need for Foreign <lb/>Agents, we believe Mobile IP should not be required in the <lb/>battlefield environment; rather we believe Mobile IP is <lb/>best used selectively and in pop-up mode. <lb/>0-7803-6521-6/$10.00 (C) 2000 IEEE <lb/>2.3DHCP <lb/>The Dynamic Host Configuration Protocol (DHCP) <lb/>provides a framework for host registration and <lb/>configuration [XI. DHCP has many desirable features, <lb/>including: a) worhng on any wired or wireless network, b) <lb/>no manual configuration, c) direct routing, d) choice of <lb/>dynamic binding protocol, e) allowing nodes to go on and <lb/>off without re-registration, and f) allowing a single <lb/>network server per domain (using relay agents). DHCP is <lb/>likely to continue to gain in popularity with recent <lb/>enhancements, such as: authentication [9], dynamic <lb/>updating of DNS [lo], LDAP database management [ll], <lb/>load balancing [ 121 and server fail-over [13]. <lb/>3. DRCP <lb/>The Dynamic Registration and Configuration Protocol <lb/>(DRCP) is designed to be a general-purpose, stand-alone <lb/>protocol that supports node configuration. <lb/>3.1 Added Features <lb/>While DRCP borrows heavily from DHCP, it adds many <lb/>new features created by new environments [19]: <lb/>Rapid configuration (milliseconds not seconds). <lb/>Efficient use of scarce wirelesses bandwidth. <lb/>Rapid client detection of need to reconfigure. <lb/>Allowing clients to be routers. <lb/>Dynamic serverhelay &quot;pre-configuration&quot;. <lb/>Leightweight (no added functions). <lb/>DHCP specification [8] says a client SHOULD do ARP <lb/>checking before an assigned address is used. This &quot;in-line&quot; <lb/>checking results in long delay (typically 3-15 seconds) <lb/>before communication can resume after a move; too long <lb/>for many roaming users. DHCP message size and number <lb/>of messages are also much larger than needed. This wastes <lb/>valuable bandwidth. <lb/>DHCP provides no mechanism to detect a need to change <lb/>configuration. Hosts must rely on external mechanisms, <lb/>such as a layer 2 hand-off indication. These triggers are <lb/>not always available, however, and do not distinguish <lb/>between movement within a subnet and among subnets. A <lb/>platoon in a battlefield, for example, may need to be <lb/>reconfigured when it moves relative to the rest of the <lb/>brigade. DHCP also says that client nodes must be a host. <lb/>Like DHCP, however, DRCP remains focused solely on <lb/>configuration. Other protocols must provide features such <lb/>as registration, continuous connectivity (e.g., [4] [ l SI), <lb/>inter-domain AAA ([ 151 [ 161 [20]), or address distribution <lb/>(See Section 4). <lb/></body>

			<page>316 <lb/></page>

			<body>DRCP, nor DRCP, provides registration capabilities. <lb/>Battlefield networks need a scalable way to identify (e.g., <lb/>[14]) and authenticate users and perform other registration <lb/>functions. DRCP, however, does provide the address of the <lb/>registration agent that will perform node authentication, <lb/>authorization, and accounting (AAA) protocol [ 151 [ 161 <lb/>3.2DRCPMessages <lb/>Most messages have the same basic semantics as those <lb/>used in DHCP; however, many have extended <lb/>functionality. There are five messages from a client: <lb/>DISCOVER: Client requests an address and/or other <lb/>configuration parameters. <lb/>ACCEPT: Client accepts offered parameters from one <lb/>server and implicitly declining offers from all others. <lb/>DECLINE: Client refuses offered parameters (e.g., <lb/>because the service offered is unacceptable). <lb/>REQUEST: Client confirms correctness of previously <lb/>allocated address and/or other service parameters. <lb/>RELEASE: De-registration message sent by a client <lb/>on its local subnet to cancel a remaining lease. <lb/>0 <lb/>0 <lb/>0 <lb/>There are four messages sent to the DRCP client: <lb/>0 <lb/>OFFER: Configuration message sent to a client in <lb/>response to a DISCOVER message. <lb/>ACK: Acknowledgment message sent back to a client <lb/>sending a REQUEST or RELEASE message. <lb/>NAK: Message sent to reconfigure clients (e.g., in <lb/>response to a network topology change). <lb/>0 <lb/>ADVERTISEMENT: Unsolicited broadcast message <lb/>to clients about a server IP address. <lb/>3.3 Operation <lb/>DRCP uses a client-server model. The client is similar to a <lb/>DHCP-client, except that it can lie on a host or a router. A <lb/>server is similar to the DHCP-server leasing addresses <lb/>from its pool to clients within its domain. Each domain <lb/>must have at least one server, but multiple servers can be <lb/>used for fault tolerance.. <lb/>If a client has just been rebooted, moves to a new domain, <lb/>or just wants to extend a lease, then there may be a flow of <lb/>messages such as that shown in Figure 1. Here, the server <lb/>initiates periodic ADVERTISEMENT messages (these <lb/>messages are optional). The client transmits and <lb/>retransmits DISCOVER (or REQUEST) messages until it <lb/>gets an OFFER (or ACK). The server transmits and <lb/>retransmits the OFFER (or ACK) until it gets an ACCEPT <lb/>or DECLINE. <lb/>DRCP configures the client as soon as receiving an <lb/>OFFER (duplicate detection is handled in the <lb/>0 <lb/>Client <lb/>Server <lb/>Registratipn Agent <lb/>REQUEST <lb/>FFEWACK <lb/>ACCEPT1 <lb/>time <lb/>&amp; DECLINE&apos; <lb/>REQUEST <lb/>b-<lb/>AAA Request&apos; <lb/>background). If a DRCP client does not like an OFFER, <lb/>then it can request a new offering using a DECLINE <lb/>message (the DRCP server can then either do nothing or, if <lb/>the client indicates willingness, can send a new OFFER). <lb/>Once it has an IP address the client can perform <lb/>registration with the network or mobility agents (e.g., a <lb/>Mobile IP agent). <lb/>Agent <lb/>ACCEPTDECLINE <lb/>k p ; ; S ] <lb/>Figure 1 DRCP Client moves into a New Domain <lb/>3.4 Interoperation with DHCP <lb/>There is a large paradigm shift from supporting hosts on <lb/>physically secure LANs, to supporting roaming hosts and <lb/>routers on networks that allow unauthorized access. We <lb/>therefore propose a new sister protocol, DRCP, rather than <lb/>extending DHCP to eliminate the added complexity of <lb/>maintaining compatibility, and allowing protocol <lb/>optimization (e.g., minimizing message size). <lb/>DRCP can still interoperate with existing DHCP clients <lb/>and servers using a dual approach. For example, a client <lb/>could have both protocols and use DHCP if a DRCP server <lb/>is not available in the subnet. <lb/>4. DAAP <lb/>This section describes the &quot;Dynamic Address Allocation <lb/>Protocol (DAAP) that distributes address-pools (and other <lb/>configuration information) among nodes in a domain. <lb/>4.1 Features <lb/>DAAP is a completely new protocol. Its features include: <lb/>0 <lb/>0 <lb/>Rapidly update address-pools <lb/>Rapidly leases address-pools to nodes in a domain. <lb/>Divides addresses using a binary split. <lb/></body>

			<note place="footnote">0-7803-6521-6/$10.00 (C) 2000 IEEE <lb/></note>

			<page>317 <lb/></page>

			<body>Allows multiple address-pools within a domain <lb/>5.2 Example <lb/>4.2 Messages <lb/>There are two basic messages defined: <lb/>POOL-REQUEST: A request sent from a DAAP <lb/>3.DAAP <lb/>node over one of its configured interfaces to request a <lb/>pool of addresses for unconfigured interfaces. <lb/>POOL-RESPONSE: A response send from a DAAP <lb/>node with a pool of addresses. <lb/>4. DRCP OFFER <lb/>4.3 Operation <lb/>6. DAAP POOL-<lb/>DAAP has relatively simple operation. A node without an <lb/>address-pool requests one using a POOL-REQUEST <lb/>message (e.g., using an IP address given by DRCP). The <lb/>node receiving the request divides its address pool and <lb/>sends part in a POOL-RESPONSE message. The <lb/>7. DRCP OFFER <lb/>algorithm used to divide the address pool can be as simple <lb/>as a binary split. <lb/>Figure DRCp,,,AAPAddreis Autoconfiguration <lb/>5. DRCPAND DAAP <lb/>This section describes how DRCP and DAAP can be <lb/>combined to provide autoconfiguration of a domain. <lb/>5.1 Functional Split <lb/>DAAP has to do with the utilization and distribution of <lb/>address pools that are used by configuration protocols <lb/>such as DRCP. At the moment, protocols like DHCP and <lb/>DRCP require manual distribution of the pools of <lb/>available IP addresses. In sense DAAP as a supporting <lb/>protocol that can distribute a large pool of available I P <lb/>addresses to tens of thousands of nodes and hundred of <lb/>subnets without manual intervention. <lb/>Section 3 shows that DRCP can only configure an inter-<lb/>face if there are DRCP server nodes on the subnet to <lb/>which that interface is attached. DRCP, however, allows <lb/>the address-pool (and other information such as address of <lb/>a central server) to be changed dynamically. A DRCP node <lb/>can even go from a client mode to a server after receiving <lb/>an address pool. DAAP distributes the address-pools to the <lb/>DRCP nodes. DAAP protocol balances these goals: <lb/>Figure 3 shows an example network with four nodes and <lb/>three subnets that completely self configures using DRCP <lb/>and DAAP in 9 stages: <lb/>0. Node A is either preconfigured or autoconfigures itself <lb/>an address pool [10.1.1.0 to 10.1.1.2551. <lb/>1. Node A has an address pool, so DRCP can configure <lb/>its interfaces (10.1.1.1). <lb/>2. Node B sends DISCOVER messages on both its <lb/>interfaces and receives an OFFER on its upper <lb/>interface from Node A (IO. 1.1.2). <lb/>3. Node B sends a POOL-REQUEST on its configured <lb/>interface. Node A sends Node B half its address pool <lb/>[10.1.1.128 to 10.1.1.2551. <lb/>4. Node B now has an address pool, so DRCP can <lb/>configure its remaining interfaces (10.1 .l. 129). <lb/>5. After configuring itself, Node B acts as a DRCP server <lb/>and sends Node C (which has been sending <lb/>DISCOVER messages) an OFFER (10.1.1.130). <lb/>The final three stages (6-8) are analogous to stages 3-5. <lb/>6. COMPARISON <lb/>There has been relatively little published work on <lb/>complete autoconfiguration. There are, however, two <lb/>Maximize the utilization of available addresses. <lb/>&apos; <lb/>0 <lb/>Autoconfigure as fast as possible. <lb/>altemative types of protocol that could be considered. <lb/>Assign addresses that minimize routing tables and <lb/>6.1 Bottom-up <lb/>routing signaling overhead (e.g., allow address <lb/>aggregation). <lb/>Nodes can autoconfigure by dynamically forming clusters. <lb/>A group of nodes that are close neighbors (e.g., nodes less <lb/>than 3 hops away not already members of another cluster) <lb/>Minimize signaling overhead. <lb/>Maintain robustness. <lb/>Meet adminstrative policies. <lb/>form a first-level cluster. The cluster then picks a master <lb/>node that look&apos; for other level-1 master nodes within a <lb/>neighborhood (e.g., up to 5 hops away from the master). <lb/></body>

			<note place="footnote">0-7803-6521-6/$10.00 (C) 2000 IEEE <lb/></note>

			<page>318 <lb/></page>

			<body>The level-I master nodes form a second-level cluster, <lb/>which elects a second-level master. This process repeats <lb/>until all nodes in a domain are covered. This approach is <lb/>attractive because it is highly distributed and robust to <lb/>failures. Unfortunately, it becomes complex and cannot <lb/>take advantage of a protocol like DHCP/DRCP. Also, the <lb/>cluster formation has a high overhead particularly in <lb/>dynamic non-hierarchical environments. <lb/>6.2 Link State <lb/>Autoconfiguration can be done after finding out the <lb/>topology with a domain. This is a similar idea to a link <lb/>state routing protocol, such as OSPF and can potentially <lb/>configure nodes even when address space is limited. The <lb/>drawback of this approach is the amount of signaling <lb/>traffic needed to distribute link state information (a big <lb/>problem in battlefield environments where bandwidth may <lb/>be scarce and networks may be highly dynamic). <lb/>7. CONCLUSION <lb/>This paper describes our approach to plug-and-play <lb/>operations within a domain. It combines an enhanced <lb/>DHCP protocol (DRCP) with an address-pool distribution <lb/>protocol (DAAP). The dual protocol approach is attractive <lb/>since it allows commercial development of the complex <lb/>base protocol (DRCP) [17], leaving a much simpler <lb/>protocol (DAAP) for those, such as the military, that need <lb/>stateless autoconfiguration of an entire network domain. <lb/>Unlike DHCP, on which it is based, DRCP supports many <lb/>different network environments: everything from open <lb/>dynamic ad-hoc networks to secured, stable tightly <lb/>managed high-speed networks. We describe the many <lb/>enhancements required to support the new environments. <lb/>An initial implementation has been built in user space on a <lb/>Linux platform. It has successfully autoconfigured 4 PCs <lb/>over two subnets, displaying some of the enhanced <lb/>features such fast handoff and router configuration. <lb/>As part of an overall solution to the tactical battlefield, <lb/>DRCP and DAAP greatly reduces management nightmares <lb/>and provides much greater movement flexibility. <lb/>Furthermore, it does not cause: a) routing protocols to <lb/>blow-up, b) single points of failure (servers), or c) <lb/>tunneling overhead on all users. Providing these functions <lb/>independently of Mobile IP allows applications to choose <lb/>whether to have the overhead or to use a solution better <lb/>suited to the environment (e.g., SIP [18]). <lb/></body>

			<listBibl>REFERENCES <lb/>[I]. W. Simpson, &quot;The Point to Point Protocol (PPP), Internet <lb/>STD 51, July 1994. <lb/>123. W. Townsley, et al, &quot;Layer Two Tunneling Protocol <lb/>&apos;L2TP&apos;,&quot; RFC 2661, August 1999. <lb/>[3]. L. Mamakos, et al., &quot;Method for Transmitting PPP Over <lb/>Ethemet (PPPoE),&quot; RFC 2561, February 1999. <lb/>[4]. C. Perkins, &quot;IP Mobility Support,&quot; RFC 2002, Oct. 1996. <lb/>[5]. S. Glass, S. Jacobs, C. Perluns, &quot;Mobile IP Authentication, <lb/>Authorization, <lb/>and <lb/>Accounting <lb/>Requirements,&quot; <lb/>&lt;draft-ietf-mobileip-aaa-reqs-OO.txt&gt;, October 1999. <lb/>[6]. P. Calhoun and C.E. Perkins, &quot;Mobile IP Network Access <lb/>Identifier Extension,&quot; &lt;draft-ietf-mobileip-mn-nai-OS.txt&gt;, <lb/>October 1999. Work in progress. <lb/>[7]. Tom Hiller, et al. &quot;3G Wireless Data Provider Architecture <lb/>Using Mobile IP and AAA,&quot; &lt;draft-hiller-3gwireless-<lb/>OO.txt&gt;, October 1999, Work in progress. <lb/>[8]. R. Droms, &apos;&apos;Dynamic Host Configuration Protocol,&quot; RFC <lb/>2131, March 1997. <lb/>[9]. R. Droms, &quot;Authentication for DHCP Messages&quot;, &lt;draft-<lb/>ietf-dhc-authentication-12.txt&gt;, October 1999. <lb/>[lo]. Y. Rekhter, M. Stapp, &quot;Interaction between DHCP and <lb/>DNS,&quot; &lt;draft-ietf-dhc-dhcp-dns-lO.txt&gt;, June 1999. <lb/>1111. A. Bennett, B. Volz, A. Westerinen, &quot;DHCP Schema for <lb/>LDAP,&quot; &lt;draft-ietf-dhc-schema-OO.txt&gt;, June 1999. <lb/>[12]. B. Volz, S. Gonczi, T. Lemon, R. Stevens, &quot;DHC load <lb/>balancing <lb/>algorithm,&quot; &lt;draft-ietf-dhc-loadb-OO.txt&gt;, <lb/>October 1999, Work in progress. <lb/>[13]. R. Droms, K. Kinnear, M. Stapp, B. Volz, S. Gonczi, G. <lb/>Rabil, M. Dooley, A. Kapur, &quot;DHCP Failover Protocol,&quot; <lb/>&lt;draft-ietf-dhc-failover-05.txt&gt;, October 1999. <lb/>141. B. Aboba and M. A. Beadles, &quot;The network access <lb/>identifier,&quot; Internet draft, Work in Progress, Nov 1998. <lb/>1.51. C. Rigney, A. Rubens, W. Simpson, and S. Willens, <lb/>&quot;Remote Authentication Dial in User Service (RADIUS),&quot; <lb/>Request for Comments 2138, Apr 1997. <lb/>161. P. Calhoun and A. Rubens, &quot;DIAMETER Base Protocol,&quot; <lb/>Internet draft, Work in Progress, Nov 1998. <lb/>[17]. A. McAuley, S. Das, S.Baba, and Y.Shobatake, &quot;Dynamic <lb/>Registration and Configuration Protocol (DRCP),&quot; &lt;draft-<lb/>itsumo-drcp-OO.txt&gt;, Work in Progress, October 1999. <lb/>[18]. E. Wedlund and H. Schulzrinne, &quot;Mobility Support using <lb/>SIP&quot;, Proc. of ACM Intl. Workshop on Wireless Mobile <lb/>Multimedia (WOWMOM&apos;99), August, 1999, pp 76-82 <lb/>[ 191. A. McAuley, S. Das, S.Baba, YShobatake, &quot;Requirements <lb/>for extending DHCP into New Envimoments, <lb/>&lt;draft-ietf-dhc-enhance-requirements-OO.txt&gt;, March 2000 <lb/>[20]. A. McAuley, S. Das, S.Baba, and Y.Shobatake, &quot;AAA <lb/>Requirements for Roaming Nodes using DHCP,&quot; <lb/>&lt;draft-ietf-dhc-aaa-requirements-OO.txt&gt;, March 2000.^* <lb/>0-7803-6521-6/$10.00 (C) 2000 IEEE <lb/></listBibl>

			<page>319 <lb/></page>

			<div type="annex">Kyriakos Manousakis is currently pursuing a Ph.D. at the University of <lb/>Maryland. This work was done during a summer intemship at Telcordia. <lb/>The views and conclusions contained in this document are those of the authors <lb/>and should not be interpreted as representing the official policies, either ex-<lb/>pressed or implied of the Army Research Laboratory or the US. Govemment </div>


	</text>
</tei>
