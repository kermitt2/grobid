<?xml version="1.0" ?>
<tei xml:space="preserve">
	<teiHeader>
		<fileDesc xml:id="_0"/>
	</teiHeader>
	<text xml:lang="en">
			<page>1 <lb/></page>

			<front>MAUDE: Inferring expression changes in sorting-based <lb/>CRISPR screens <lb/>Carl G. de Boer 1,2, § , John P. Ray 1 , Nir Hacohen 1,3 , and Aviv Regev 1,2,4,5 § <lb/>1 Broad Institute of MIT and Harvard University, Cambridge, MA 02142, USA <lb/>2 Klarman Cell Observatory, Broad Institute of MIT and Harvard University, Cambridge, <lb/>MA 02142, USA <lb/>3 Center for Cancer Research, Massachusetts General Hospital, Boston, MA 02114, USA <lb/>4 Department of Biology, Massachusetts Institute of Technology, Cambridge, MA 02142, <lb/>USA <lb/>5 Howard Hughes Medical Institute, Cambridge, MA 02142 <lb/> § correspondence should be addressed to CGD (carlgdeboer@gmail.com) and AR <lb/>(aregev@broadinstitute.org) <lb/> 2 <lb/> Abstract <lb/>Pooled CRISPR screens allow high-throughput interrogation of genetic elements that <lb/>alter expression of a reporter gene readout. New computational methods are needed to <lb/>model these data. We created MAUDE (Mean Alterations Using Discrete Expression) for <lb/>quantifying the impact of guide RNAs on a target gene&apos;s expression in a pooled, sorting-<lb/>based expression screen. MAUDE quantifies guide-level effects by modeling the <lb/>distribution of cells across sorting expression bins. It then combines guides to estimate <lb/>the statistical significance and effect size of targeted genetic elements. We show that <lb/>MAUDE significantly improves over previous approaches and provide experimental <lb/>design guidelines to best leverage MAUDE. <lb/></front>

			<page>3 <lb/></page>

			<body>Background <lb/>Pooled CRISPR/Cas9 screens with a readout of reporter gene&apos;s expression have <lb/>improved our understanding of how both cis and trans regulators control gene <lb/>expression. CRISPR/Cas9 and related systems use complementarity between an RNA <lb/>guide and the genomic DNA to direct Cas9 to specific loci. Engineered Cas9 proteins <lb/>with different enzymatic and regulatory activities now allow researchers to mutate DNA 1 , <lb/>modify the chromatin state 2 of the targeted locus, inertly bind loci to inhibit <lb/>transcription 3 , or recruit activators 4 . Using these tools, pooled screens with libraries of <lb/>guides targeting genes or the non-coding genome and measuring the impact on a reporter <lb/>gene&apos;s expression can identify trans regulators or cis-regulatory elements that affect the <lb/>reporter&apos;s expression 1, 2, 5-7 . For instance, CRISPR interference (CRISPRi) and CRISPR <lb/>activation (CRISPRa) have been used to respectively repress or activate elements in a <lb/>targeted cis-regulatory region and identify enhancers of a gene&apos;s expression 2, 4, 8, 9 . In <lb/>each case, we estimate how each guide affects the targeted (or reporter) gene&apos;s expression <lb/>by sorting cells into discrete expression bins, and measuring the guide&apos;s abundance in the <lb/>bins. Such screens help dissect enhancer regulatory logic 5, 8 , and identify the genetic <lb/>variation most likely to contribute to common human disease 9 . <lb/>Despite the growing number of gene expression CRISPR screening strategies, <lb/>computational methods to determine which guides and elements alter gene expression <lb/>remain relatively ad hoc. In general, detecting guides that impact expression relies on <lb/>finding those with a biased distribution across the expression bins. To date, most methods <lb/>fall into two categories: (1) using the log fold-change between the guide abundances in <lb/>the high and low expression bins directly 5, 6, 9 , or (2) repurposing RNA-seq differential <lb/>expression tools 10, 11 to find changes in guide abundance between high and low bins 6, 12 . <lb/>However, both strategies are difficult to apply if more than two sorting bins are used and <lb/>do not leverage the unique character of these data. <lb/>Here, we describe MAUDE (Mean Alterations Using Discrete Expression), an analytical <lb/>framework for estimating the effect of CRISPR guides (or other perturbagens) on <lb/>expression, as measured by sorting into discrete expression bins and sequencing. <lb/>MAUDE maximizes the likelihood of the observed sequencing data over the cell sorting <lb/>bins to estimate the mean expression for cells containing each guide. It then combines the <lb/>resulting Z-scores from multiple guides targeting the same element into element-level <lb/>effect sizes and estimates statistical significance. Elements can defined a priori, by <lb/>annotating guides with the element they target, or identified de novo by using a sliding <lb/>window to combine guides targeting neighboring chromosomal locations. MAUDE is <lb/>highly sensitive at finding expression-altering guides and elements, is adept at estimating <lb/>effect sizes, and outperforms existing approaches. Finally, we provide guidance on the <lb/>design of expression-based CRISPR screens to maximize the information gleaned. <lb/>Results <lb/>MAUDE identifies expression-altering guides by their distribution across bins <lb/>To identify guides that alter expression, MAUDE makes four assumptions: (1) the <lb/>perturbations do not differentially affect cell viability; (2) expression is distributed <lb/>approximately (log) normally; (3) guides can alter the mean expression, but not the <lb/></body>

			<page>4 <lb/></page>

			<body>variance; and (4) sampling by sequencing of CRISPR guides integrated in the genomic <lb/>DNA of sorted cells is captured by a negative binomial distribution (as described <lb/>previously 10, 13, 14 ). Note that when assumptions (2) or (3) are violated, such as if <lb/>expression is bimodal (e.g. perturbations alter the fraction of expressing cells), MAUDE <lb/>guide-level effect sizes correspond to the average effect of the perturbation (see below). <lb/>Additionally, we require that the bin sizes be known (as a fraction of the total expression <lb/>distribution of sorted cells), that the unsorted input library be sequenced to quantify <lb/>overall library composition, and that the screen includes non-targeting control guides that <lb/>should not affect expression. <lb/>Figure 1: MAUDE approach to scoring expression-based screens (A) Method overview. (B-<lb/>D) MAUDE approach to estimating the optimal mean expression level per guide. (B) Estimation <lb/>of cell density distribution for each guide. Cell density distribution (y axis) of target gene <lb/>expression (x axis) for each guide is modeled as a normal distribution, with mean µ g . µ g is <lb/>optimized by calculating, for each bin (Bin A and B, top), the fraction of cells expected to be in <lb/>the bin under the null model (no overall change in expression; ( , 0)) and the fraction of cells <lb/>expected in the bin given the current value of µ g ( ( , ! )). (C) Estimation of optimal µ g . We find <lb/>the optimal ! by calculating the log likelihood (y axis) of the observed bin read abundances <lb/>given each value of µ g (x axis). (D) Expected number of guide reads per bin. The fraction of reads <lb/>(y axis) of guide g ( ! <lb/>! ) expected in each bin b (x axis), for different values of µ g (colors). <lb/>MAUDE estimates the most likely mean expression level effect of a given guide g, ! , <lb/>by maximizing the likelihood of the observed reads per bin under these assumptions (Fig. <lb/>1). To do so, it estimates the number of reads of guide g expected to be in each <lb/>expression bin b, for a given mean expression level µ g . It estimates the optimal ! as the <lb/>one that maximizes the log likelihood of the observed number of reads given the expected <lb/>number of reads in each bin (Fig. 1A -left). <lb/></body>

			<page>5 <lb/></page>

			<body>To achieve this, MAUDE proceeds in several steps. First, it uses the unsorted (input) <lb/>library to estimate the library composition, defined as ∅! / ∅ , the fraction of reads from <lb/>guide g ( ∅! ) out of the total reads ( ∅ ). Next, using the overall fraction of cells observed <lb/>in each expression bin (recorded during cell sorting), it quantile normalizes the sorting <lb/>expression space to a standard normal reference (µ=0 and σ=1). For each bin, it calculates <lb/>the Z-scores in standard normal space (Z b0 and Z b1 for lower and upper limit, respectively) <lb/>that capture the same quantile as the bin captured in the original (FACS) data. Since most <lb/>guides in such screens do not alter expression, the vast majority of the overall distribution <lb/>represents the expression σ associated with no effect (e.g. wild type). Thus, for modeling <lb/>simplicity, we can assume that each guide has the same σ -that of the overall <lb/>distribution. It then defines S(b, µ g ) as the fraction of cells containing guide g expected by <lb/>the model to have been sorted into bin b (with the bin defined by Z b0 and Z b1 , <lb/>respectively). S(b, µ g ) is calculated using the normal cumulative distribution function, <lb/>CDF norm (), yielding the probability that a cell sampled from a normal distribution with <lb/>mean µ g will have an expression (x) less than the sorting upper bin bound Z b1 , but not <lb/>smaller than the lower bin bound Z b0 : <lb/>, ! = <lb/>!&quot;#$ <lb/>+ ! ≤ !! − <lb/>!&quot;#$ ( + ! ≤ !! ) <lb/>(1) <lb/>For a given µ g , MAUDE calculates the expected expression distribution (Fig. 1B). The <lb/>expected fraction of cells in bin b that contain guide g is: <lb/>! <lb/>! = <lb/>! ∅! <lb/>! ∅ <lb/>× <lb/>!(!,! ! ) <lb/>!(!,!) <lb/>(2) <lb/>Intuitively, if guide g does not affect expression, µ g is 0, and so ! ( | ! ) is just the <lb/>fraction of the overall library occupied by the guide ( ∅! / ∅ ); if the value of µ g results in <lb/>a higher fraction of cells containing guide g in bin b, the guide is enriched in that bin <lb/>( ! ( | ! ) &gt; ∅! / ∅ ; Fig. 1B -right); depletion results when fewer cells end up in the <lb/>bin ( ! <lb/>! &lt; ∅! / ∅ ; Fig. 1B -left). <lb/>Finally, MAUDE learns the optimal µ g given the observed guide reads, by maximizing <lb/>the (log) likelihood of observing the reads from the guide g in each bin b (r gb ), given the <lb/>overall number of reads observed in that bin (R b ; Fig. 1C,D). To reduce the impact of <lb/>cases where a guide cannot be quantified reliably due to low coverage, MAUDE also <lb/>includes a prior favoring no change in expression via a pseudocount added uniformly to <lb/>all expression bins (Methods). We assume reads are sampled using a negative binomial <lb/>distribution (with probability density function PDF NB ()) 10, 13, 14 . Thus, MAUDE <lb/>maximizes the following equation separately for each guide g to learn its optimal ! : <lb/>! = argmax ! ! <lb/>log ( <lb/>!&quot; !&quot; , ! , ! <lb/>! ) <lb/>!&quot;#$ ! <lb/>(3) <lb/>Once MAUDE learned ! for each guide, it subtracts from each the average ! of the <lb/>non-targeting guides ( !&quot; ) to convert each guide&apos;s effect on expression to a Z-score (Z g ; <lb/>Fig. 1A -middle): <lb/>! = ! − !&quot; <lb/>(4) <lb/>This step is necessary because targeting guides, whose true mean is sometimes not 0, are <lb/>also included in the overall distribution and may have shifted the overall mean. Thus, Z g <lb/></body>

			<page>6 <lb/></page>

			<body>represents the number of standard deviations (SDs) by which guide g has altered gene <lb/>expression compared to the non-targeting guides. <lb/>MAUDE calculates element level effect size and significance by aggregating signal <lb/>across guides <lb/>With a Z-score representing the expression change for every guide, MAUDE calculates <lb/>element-level effect size and statistical significance (Fig. 1A -right), using either (1) <lb/>known element annotations or (2) a sliding window across the locus of interest to define <lb/>elements. Examples of potential annotated elements are putative enhancers or protein <lb/>coding genes. Sliding windows require that the region be tiled with guides, with the final <lb/>resolution and sensitivity proportional to the tiling density, but require no prior <lb/>knowledge about the region. We combine all guides within a pre-specified window size <lb/>(e.g. 500 bp), requiring a minimum number of guides per window (e.g. 5), and testing all <lb/>possible windows with distinct guide sets. The element&apos;s effect size, expressed as a Z-<lb/>score, is the average Z-score of the guides targeting that element. <lb/>To estimate statistical significance, we combine guide-level Z-scores for all guides <lb/>targeting that element (by Stouffer&apos;s method) into a single Z-score, representing a signed <lb/>significance of the regulatory change (Z&gt;0 representing upregulation, and Z&lt;0 <lb/>representing downregulation). Because experimental noise and the number of guides per <lb/>element can greatly affect the robustness of these Stouffer Z-scores, we repeatedly <lb/>sample the non-targeting guides for each experiment and every possible number of <lb/>guides/element, to create null distributions. We then scale the Stouffer Z-scores by the <lb/>standard deviation of the corresponding null (i.e. the null for that experiment with the <lb/>same number of guides/element). Finally, the resulting significance Z-scores are <lb/>converted into P-values using the normal cumulative distribution function (µ=0, σ=1), for <lb/>the upper tail (upregulation), lower tail (downregulation), or the minimum of the two <lb/>(either), with corresponding Benjamini-Hochberg FDR correction. <lb/>MAUDE correctly identifies differential elements in simulated data <lb/>To test MAUDE&apos;s performance and underlying assumptions, we next simulated two <lb/>experiments, each with 200 targeted elements and 5 guides per element. We compared <lb/>two ways in which expression might be altered by targeting of an element: (1) a shift <lb/>from one unimodal distribution of expression levels to another, reflecting an impact on <lb/>expression affecting each perturbed cell (µ g ranging from 0.01 to 1 SDs, in 0.01 <lb/>increments; &quot;mean-altering&quot;; Fig. 2A); or (2) having two fixed distributions of expression <lb/>levels, as would be the case in two sub-populations, with the perturbation causing a shift <lb/>in the relative proportion of cells in each expression mode (µ g = 1; and the fraction of <lb/>affected cells r g ranges from 1% to 100%, in 1% increments; &quot;proportion-altering&quot;; Fig. <lb/>2B). In either case, 100 &quot;effective&quot; elements have an impact, and the other 100 <lb/>&quot;ineffective&quot; elements have no effect on expression. We generated these synthetic data, <lb/>simulating sorting cells by expression into six different 10% bins on the extremes of <lb/>expression (Methods). <lb/>MAUDE analysis was adept at identifying effective elements, and accurately estimated <lb/>effect sizes and fractions of responding cells. In both simulations, it detected as <lb/>significant (1% Benjamini-Hochberg FDR) 97 of the 100 effective elements, with effect <lb/></body>

			<page>7 <lb/></page>

			<body>sizes as low as 0.03 SDs (mean-altering; Fig. 2C) or 3% of cells responding (proportion-<lb/>altering; Fig. 2D), indicating that MAUDE is sensitive to even small changes. As <lb/>expected, each simulation included 1-2 false positives (2/99 and 1/98 for mean-altering <lb/>and proportion-altering simulations, respectively; estimated effect size of ~0.04 SDs for <lb/>both), consistent with our 1% FDR, indicating that our P-values are well-calibrated. The <lb/>correlation between inferred and actual effect size was very high (Pearson&apos;s r = ~0.998 <lb/>for both simulations; only considering the 100 simulation-defined effective elements). In <lb/>the proportion-altering simulation, the estimated effect size corresponds to the average <lb/>affect size (e.g. 10% of cells shifting by 1 SD results in an average effect size of 0.1). <lb/>Overall, MAUDE performs extremely well on synthetic data and can identify <lb/>perturbations that shift the mean expression or the fraction of expressing cells with high <lb/>sensitivity and specificity. <lb/>Figure 2: MAUDE correctly identifies functional elements and effect sizes in simulated data <lb/>(A) Simulation for mean-altering elements. A mean altering element is modeled as changing the <lb/>mean expression µ g (between 0.01 and 1) of cells with the effective element (red curve) compared <lb/>to cells with ineffective elements or non-targeting guides (gray curve). (B) Simulation of <lb/>proportion-altering elements. A proportion-altering element is modeled as resulting in a different <lb/>proportion of cells with altered expression (r g ), from 1% to 100%. On average, r g % of cells would <lb/>have expression increased by µ g = 1 (dark red curve), and (1-r g )% of cells would have no change <lb/>in expression (µ g = 0; light red curve) relative to ineffective elements and non-targeting guides <lb/>(gray curve). (C, D) Effect sizes are correctly estimated. The true effect used to generate the <lb/></body>

			<page>8 <lb/></page>

			<body>simulated data (x axis) versus the inferred effect size (y axis) for (C) mean-altering elements <lb/>(where the true effect is µ g ), and (D) proportion-altering elements (where the true effect is r g ). <lb/>Elements meeting a 1% FDR are shown in red and others in gray. Pearson&apos;s r is shown in lower <lb/>left (considering effective elements only). Black line: y=x. <lb/>MAUDE application to a CD69 CRISPRa screen increases accuracy and highlights <lb/>new regulatory elements <lb/>We next evaluated MAUDE&apos;s performance on actual data from a CRISPRa tiling screen <lb/>to identify regions that could regulate CD69 in Jurkat cells 9 , which was conducted in <lb/>duplicate. We compared MAUDE to the original analysis (&quot;original&quot;), where guide <lb/>effects were estimated as the log ratio of normalized counts within the &quot;high&quot; enriched <lb/>bin and &quot;baseline&quot; bin 9 , and with edgeR 10 and DESeq2 11 , looking for differential guides <lb/>between the &quot;high&quot; and &quot;baseline&quot; bins following previous studies 6, 12 . <lb/>We assessed the sensitivity and accuracy of each approach by three criteria, where <lb/>possible: (1) higher similarity between effect sizes of adjacent guides, which are expected <lb/>to more often target the same regulatory element, compared to pairs of randomly selected <lb/>guides; (2) ability to distinguish promoter-targeting guides from other targeting guides, <lb/>because CD69 promoter-targeting guides are a positive control expected to greatly alter <lb/>CD69 expression; and (3) similarity between the effect sizes estimated for each replicate, <lb/>which should be high if a method is successful. <lb/>MAUDE performed well on all three measures, out-performing the other approaches <lb/>(Fig. 3A-C). MAUDE most easily distinguished adjacent from randomly paired guides <lb/>(by AUROC; Fig. 3A), with adjacent guides having more similar effect sizes than <lb/>randomly paired guides, as expected; MAUDE most easily distinguished promoter-<lb/>targeting guides from other genome-targeting guides (by AUROC; Fig. 3B); and the <lb/>estimated guide-level effects were much more correlated between the two replicates for <lb/>MAUDE than for the original approach (Pearson&apos;s r = 0.66 vs. 0.25, respectively; edgeR <lb/>and DESeq2 do not return replicate-level statistics; Fig. 3C). <lb/>We next asked if MAUDE yielded any new insights into CD69 regulation, which were <lb/>not highlighted in the original analysis. We generated element-level statistics using a <lb/>200 bp sliding window across the locus, combining the two experimental replicates by <lb/>requiring elements to have FDR &lt; 0.01 in both replicates and consistent expression <lb/>changes. The minimum element effect size that was reproducibly found by MAUDE was <lb/>a change of 0.12 SDs. <lb/></body>

			<page>9 <lb/></page>

			<body>Figure 3: MAUDE outperforms other methods and yields insight into CD69 regulation (A-<lb/>C) MAUDE outperforms other methods by three criteria. Comparison of the original analysis of <lb/>CD69 CRISPRa tiling screen 9 (&quot;original&quot;), edgeR, DESeq2, and MAUDE (x axes), by three <lb/>evaluation criteria (y axes, higher values correspond to better performance): (A) relative <lb/>similarity in effect sizes of adjacent guides (compared to randomly selected pairs of guides, by <lb/>AUROC); (B) ability to distinguish promoter-targeting guides from other targeting guides; and <lb/>(C) Pearson correlation between the effect size estimates of both replicates. Correlation between <lb/>replicates was not possible for edgeR or DESeq2 as they combine replicates to estimate effect <lb/>sizes and statistics. (D) Reanalysis of CD69 CRISPRa screen data with MAUDE&apos;s sliding <lb/>window approach highlights additional plausible regulatory elements. Effect size (y axes) vs <lb/>genomic position (x axis) for two replicates (top and bottom), with elements (points) colored by <lb/>those that significantly increased (red) or decreased (blue) expression of CD69 and those that did <lb/>not (black). Bottom: Gene annotations (blue) and Jurkat DNaseI hypersensitivity (black). Vertical <lb/>bars: Clusters of significant elements identified by MAUDE: regions that increase CD69 <lb/>expression (red), and regions that decrease CD69 expression (blue), with previously identified <lb/>regions indicated (gray border). <lb/></body>

			<page>10 <lb/></page>

			<body>MAUDE re-discovered the four regions previously called as being CRISPRa-sensitive <lb/>(Fig. 3D, gray bars), and called 15 additional regions as responsive to CRISPRa. Of <lb/>these, 10 appeared to cause a down-regulation of CD69 when activated by CRISPRa <lb/>(Fig. 3D, red bars). Although none of these are in open chromatin regions in Jurkat cells, <lb/>two are adjacent to the promoters of other nearby genes (CLECL1 and CLEC2B), <lb/>suggesting these may act by competition with the CD69 promoter. Similar opposing <lb/>effects on expression have been previously reported when targeting the promoters of <lb/>neighboring genes with CRISPRi 8, 12 . The remaining five CRISPRa-sensitive regions we <lb/>identified caused upregulation of CD69; all five of these regions overlapped with Jurkat <lb/>open chromatin regions (Fig. 3D, red bars), as did the CRISPRa-sensitive regions <lb/>originally identified 9 . Overall, 85% of CD69-upregulating elements identified by <lb/>MAUDE were within Jurkat open chromatin and were closer to open chromatin than <lb/>expected by chance (rank sum P&lt;10 -15 ; distances to open chromatin vs. distances to <lb/>randomly-placed open chromatin; Methods). <lb/>MAUDE helps design bin number and width to enhance screen sensitivity <lb/>While an experimenter can set the sizes of the expression bins, finding an optimal bin <lb/>configuration experimentally is laborious and costly, and typically not pursued in <lb/>practice. We reasoned that our simulation framework can readily test different expression <lb/>bin configurations to help choose the best one under our assumptions. <lb/>To this end, we accounted for several experimental considerations. First, cell sorters can <lb/>have between two to six bins available, and the optimal bin size may differ when <lb/>different numbers of bins are used. Second, the tails of the distribution are the most <lb/>informative because they show the greatest ratios of effective versus ineffective guides, <lb/>and this ratio increases as bins get more extreme. However, the more extreme the bins, <lb/>the fewer cells will be captured, resulting in higher sampling noise. Finally, it is desirable <lb/>to have each bin capture approximately the same number of cells to facilitate uniform <lb/>treatment of samples (e.g. genomic DNA isolation and library preparation). <lb/>With these considerations in mind, we tested by simulation how bin size and number <lb/>altered the ability to identify differentially active elements (Fig. 4A). We altered our <lb/>simulation framework to include more elements (1,000 ineffective and 1,000 effective), <lb/>and, to make the recovery of effective elements more challenging, focused on smaller <lb/>effect sizes (100 each with effect sizes from 0.01 to 0.1, at 0.01 increments). Here, the <lb/>smallest effect sizes are the most difficult to recover and only the most sensitive <lb/>approaches will recover them. Our bin configurations included both uniform percentile <lb/>bins and more complex bin configurations, always placing bins symmetrically at both <lb/>tails of the distribution, and, within each tail, bins are contiguous (Fig. 4A, right). <lb/>Uniform binning schedules were also tested with two and four bins, always retaining the <lb/>most extreme bins. Otherwise, six bins were used. We evaluated bin configurations for <lb/>their accuracy in predicting effect sizes (Pearson&apos;s r) and their sensitivity in recovering <lb/>functional elements (true positives). <lb/></body>

			<page>11 <lb/></page>

			<body>Figure 4: MAUDE simulations propose optimal cell-sorting bin configurations (A) <lb/>Evaluation of expression bin configurations by simulation. Left: An experiment is simulated (10 <lb/>replicates, top), followed by selection of each bin configuration, MAUDE analysis and evaluation <lb/>of performance for true positive recovery and effect size prediction (by Pearson&apos;s r). Right: Each <lb/>bin configuration had 2-6 bins that are contiguous on each end and symmetric about the center, <lb/>progressing gradually with inclusion from outer to innermost: A and F: outermost and always <lb/>included, B and E (when present): contiguous with A and F (respectively) and more central; and <lb/>C and D (when present): contiguous with B and E (respectively) and innermost. (B, C) <lb/>Identification of optimal bin configurations. Performance (y axis) of each bin configuration (x <lb/>axis) for (B) Pearson&apos;s r between the true effect sizes (as defined in the simulation) and the <lb/>predicted effect sizes (by MAUDE), and (C) the number of true positives (elements defined as <lb/>having an effect in the simulation that are predicted to have an effect by the analysis). x axis <lb/>labels: Bin sizes expressed as the percent of the distribution covered by each of the paired <lb/>corresponding bins, sorted in order of increasing performance. Error bars: standard error of the <lb/></body>

			<page>12 <lb/></page>

			<body>mean (SEM) for the 10 simulated experiments. Gray shading: number of bins in the <lb/>configuration. <lb/>The best bin configurations include more bins and cover of most of the distribution. <lb/>When using non-uniform bins, greater resolution (i.e. smaller bin sizes) at the tails of the <lb/>distribution (i.e. A/F scheme, Fig. 4A) resulted in both greater sensitivity and accuracy <lb/>than greater resolution at the inner bins (Fig. 4B,C). Having more sorting bins was <lb/>always better, but particularly when bins are small, and going from two to four bins was a <lb/>much more significant increase than from four to six bins (Fig. 4B,C). Overall, <lb/>performance was relatively poor when bins covered less than 20% of the overall <lb/>distribution (Fig. 4B,C -indicated at left). However, performance is also poor if bins are <lb/>too large, presumably because resolution is reduced. For example, having two 50% bins <lb/>was worse than two 25% bins, and four 25% bins was worse than four 12.5% bins (Fig. <lb/>4B,C). The best configuration tested by both measures had A and F cover 5%, B and E <lb/>cover 10%, and C and D cover 20%, but uniform bins covering 12.5 -15% had similar <lb/>performance (Fig. 4B,C) and yield uniform cell numbers per sample, and so are more <lb/>practical. Overall, this simulation indicates that the greatest sensitivity and accuracy is <lb/>achieved by having more bins, good performance can be achieved with uniform bins, and <lb/>each of the bins should cover about ~15% of the distribution (~25% if using only two <lb/>bins). <lb/>Discussion <lb/>MAUDE is a principled framework for the analysis and design of pooled CRISPR <lb/>screens with an expression readout. By estimating the effects of guides and elements <lb/>from the distribution of guides across bins, we show that MAUDE is both sensitive and <lb/>specific on simulated data, and more accurate on real data, allowing the recovery of <lb/>additional regulatory elements. Notably, although our sliding window approach can be <lb/>used for identifying regulatory regions in a tiling experiment, MAUDE can also be used <lb/>in combination with other approaches 15 . MAUDE&apos;s simulation framework can help <lb/>experimental design to maximize a screen&apos;s success. <lb/>Although we focus our testing on CRISPR screens aiming to identify regulatory elements <lb/>with a guide RNA perturbagen, which are the current common examples, we expect any <lb/>experiment with a binned expression readout and sequencing to quantify perturbations <lb/>could use MAUDE analysis. This could include perturbations of genes 6 , other types of <lb/>perturbagens (e.g. RNAi), direct readouts of mutation (e.g. via base editors), or even <lb/>reporter assays 16 . <lb/>Conclusions <lb/>MAUDE is a highly sensitive and accurate approach for identifying functional elements <lb/>in a binned expression screen. MAUDE estimates the effect size on expression of <lb/>individual perturbagens (e.g. CRISPR guide RNAs), and combines perturbagens to <lb/>estimate the effects of genetic elements. MAUDE performs well in simulations, and <lb/>outperforms other methods on experimental data by all three independent evaluation <lb/>criteria. Finally, by simulation, we identify which cell-sorting bin configurations are <lb/>optimal. <lb/></body>

			<page>13 <lb/></page>

			<body>As research focused on the function on regulatory variants and regions, which are <lb/>disproportionately contributing to the genetic basis of common disease 17 , we expect that <lb/>pooled genetic screens with expression readouts will become much more common. <lb/>Moreover, many such variants and elements are expected to have smaller effect sizes, <lb/>emphasizing the need for sensitive detection and accurate effect size estimates. We <lb/>anticipate that MAUDE -which we implemented as an R package available on GitHub <lb/>(https://github.com/Carldeboer/MAUDE) -will become an important tool in the effort to <lb/>map from variants to function. <lb/>Methods <lb/>Implementation and usage <lb/>MAUDE is implemented in R. Tutorials are provided on the MAUDE website <lb/>(https://github.com/Carldeboer/MAUDE). Users provide a data.frame, with columns <lb/>containing the bin counts (one column per bin, plus one for the unsorted cells), as well as <lb/>columns annotating the data included in each row, including: guide ID, experimental <lb/>identifiers (e.g. replicate, condition, etc.), whether or not the guide is a non-targeting <lb/>guide, and any other guide-associated data (e.g. genomic locus). Users also provide a <lb/>data.frame containing the bin sizes, with one row per bin per experiment, and columns <lb/>corresponding to the Z-score bounds of each bin (&apos;binStartZ&apos; and &apos;binEndZ&apos;) and the <lb/>corresponding bin cumulative distribution function percentiles (&apos;binStartQ&apos; and <lb/>&apos;binEndQ&apos;). Using MAUDE&apos;s &apos;findGuideHitsAllScreens&apos; function, and providing the <lb/>experimental design data.frame, read count data.frame, and bin bound data.frame, <lb/>MAUDE will calculate the optimal mean expression for each guide, separately for each <lb/>experiment, returning the mean guide expression ( ! ), Z score (Z g ), and log likelihood <lb/>ratio for each guide/experiment pair. By default, for each guide g and bin b, 10 <lb/>pseudocounts are added to the read count (r g,b ) for every million reads of coverage in that <lb/>bin (R b ) to reduce the noise resulting from poor coverage. R&apos;s &apos;optimize&apos; function is used <lb/>for finding the guide mean expression with the highest log likelihood. The fraction of <lb/>cells expected to be in a bin given the current ! is calculated with the &apos;pnorm&apos; function, <lb/>scaled by the overall abundance in the library of that guide and the fraction of cells sorted <lb/>into the bin, as in Equation (2). The log likelihood for each guide/bin is calculated as <lb/>using the &apos;dnbinom&apos; function, with x = number of reads for this guide in this bin, size = <lb/>number of reads total for this bin, prob = 1 -the fraction of this bin expected to be <lb/>occupied by this guide, as in Equation (3). The &apos;findGuideHitsAllScreens&apos; will return the <lb/>guide-level statistics as a data.frame. <lb/>Once guide-level statistics have been calculated for each experiment, they can then be <lb/>combined <lb/>to <lb/>obtain <lb/>element-level <lb/>statistics. <lb/>Using <lb/>MAUDE&apos;s <lb/>&apos;getTilingElementwiseStats&apos; function, one can identify elements de novo by tiling across <lb/>the region, providing the experimental design data.frame and the guide-level statistics <lb/>data.frame, including columns denoting the genomic coordinates of the guide <lb/>(chromosome, position). By default, all guides within each 500 bp window are combined <lb/>in this sliding window approach, requiring a minimum of five guides per window <lb/>(parameters which can and should be customized, dependent on the density of tiled <lb/>guides), and testing all possible windows with unique guide sets. Alternatively, MAUDE <lb/></body>

			<page>14 <lb/></page>

			<body>provides the &apos;getElementwiseStats&apos; function to calculate element-level statistics given <lb/>element annotations as an additional column in the guide-level statistics data.frame. <lb/>In either case, element-level statistics are calculated by combining all Z-scores for guides <lb/>in the element. Three Z-scores are calculated for each element: (1) an effect size -the <lb/>mean of the guides&apos; Z-scores; (2) the Stouffer Z-score -the guides&apos; Z-scores combined <lb/>with Stouffer&apos;s method (&apos;stoufferZ&apos;); and (3) a significance Z-score -the Stouffer Z-<lb/>score scaled using the appropriate non-targeting null model (&apos;significanceZ&apos;). To create <lb/>robust null models used to scale the statistical Z scores, we sample each non-targeting <lb/>guide up to 10 times each. For each experiment and number of guides per element, we <lb/>calculate the standard deviation of the null Stouffer Z scores. By dividing by this standard <lb/>deviation, we ensure that the null now has a standard deviation of 1, and so we can treat <lb/>them as a true Z scores, calculating P-values with the &apos;pnorm&apos; function. P-values can be <lb/>calculated with one-tail (up-/down-regulation) or two tails (either). FDRs are then <lb/>calculated per-experiment using the Benjamini-Hochberg procedure. <lb/>Synthetic data generation <lb/>For each simulation, we included 1,000 targeting guides (5 per element for 200 elements) <lb/>and 1,000 non-targeting guides designed to have no effect. The underlying abundance of <lb/>each guide (A g ) followed a Poisson distribution with mean 1,000 (representing library <lb/>construction noise; A g ~ Pois(1000)). The number of cells sorted for each guide (S g ) <lb/>followed another Poisson distribution with a mean corresponding to the abundance of that <lb/>guide within the library (S g ~ Pois(A g )). For the mean-altering simulation (Fig. 2A,C), <lb/>expression levels of cells (E gc ) were simulated by sampling from a normal distribution <lb/>with a mean corresponding to the assigned mean expression of that guide (E gc ~ <lb/>Norm(µ g )) for each sorted cell c. For the proportion-altering simulation (Fig. 2B,D), cells <lb/>were partitioned into responders and non-responders with a probability proportional to <lb/>the assigned fraction of cells whose expression is changed by the perturbation (r g ), and <lb/>the expression followed a normal distribution with a mean 0 for non-responder cells and <lb/>1 for responder cells. The number of cells &quot;sorted&quot; into each bin (S bg ) using the bounds of <lb/>each bin is: <lb/>!&quot; = <lb/>!! ≤ !&quot; ≤ !! <lb/>! <lb/>Reads were simulated with a negative binomial distribution with the number of reads for <lb/>each bin equal to ten times the number of cells sorted into that bin and the probability of <lb/>selecting a guide equal to its fraction of cells within that bin (Fig. 2C): <lb/>!&quot;~( 10× <lb/>!&quot; , <lb/>!&quot; <lb/>!&quot; <lb/>! <lb/>! <lb/>) <lb/>MAUDE, logFC, edgeR, and DESeq2 application to CD69 data <lb/>Raw count data for the CD69 CRISPRa screen was downloaded from PubMed Central <lb/>(Simeonov et al. Supplementary Table 1) 9 . The logFC values of the original analysis <lb/></body>

			<page>15 <lb/></page>

			<body>were used as-is (&quot;original&quot;). EdgeR (v 3.16.1) analysis was done with default parameters <lb/>by comparing high to baseline bins, for each of the two replicates, together, normalizing <lb/>the data (calcNormFactors) and performing a likelihood ratio test (estimateDisp, glmFit, <lb/>glmLRT), and the significance p-values and estimated log fold change retrieved <lb/>(topTags). DESeq2 (v 1.14.1) analysis was done with default parameters by creating a <lb/>DESeq2 experiment using the CD69 count data, comparing the high and baseline bins, <lb/>using both replicates (DESeqDataSetFromMatrix), and then comparing the expression <lb/>between these bins (using the &quot;DESeq&quot; function). MAUDE analysis was performed with <lb/>default parameters on the count data for each bin, including the unsorted bin. We <lb/>estimated the fraction of cells in each bin for use in MAUDE analysis by reconstructing <lb/>the expression distribution in Simeonov et al. Extended Data Fig. 1a 9 using the &quot;digitize&quot; <lb/>R package 18 , using the same data for both replicates. Using the actual bin proportions for <lb/>each replicate would likely increase MAUDE&apos;s performance. <lb/>For each evaluation criterion, we used effect sizes or significance values, as appropriate. <lb/>Effect sizes were: the mean of the two replicates&apos; guide Z-scores (MAUDE); the <lb/>estimated log fold change (edgeR and DESeq2); or the mean logFC for the two replicates <lb/>as originally reported (&quot;original&quot;). Significance values were: combined replicates&apos; Z <lb/>scores by Stouffer&apos;s method (MAUDE); estimated p-values (edgeR and DESeq2); and <lb/>the mean of the two replicates&apos; logFCs (&quot;original&quot;; no significance estimates were given <lb/>in Simeonov et al.). <lb/>For testing whether adjacent guides have similar effect sizes, we sorted the guides by the <lb/>genomic coordinates of the target site, and, for each pair of adjacent guides, calculated <lb/>the absolute difference in effect sizes. To create the random-pairing distribution, this was <lb/>repeated, including each guide 10 times (to improve our &quot;random&quot; estimate), and <lb/>randomizing the order of the guides. The distributions in absolute effect size differences <lb/>between adjacent and randomly paired guides were compared with the Area Under the <lb/>ROC curve statistic (AUROC), and how much it differed from that expected by chance <lb/>(0.5; i.e. AUROC-0.5). Here, the AUROC is proportional to the fraction of randomly <lb/>paired guides whose absolute effect size differences are greater than those of adjacent <lb/>guides. <lb/>The AUROC statistic was also used to compare the guide significance distributions <lb/>between CD69 promoter-targeting guides and other genomic targeting guides, where the <lb/>AUROC is proportional to the fraction of promoter targeting guides that are more <lb/>significant than non-promoter targeting guides. Promoter-targeting guides were defined <lb/>as those in the 1 kb surrounding the CD69 TSS (between 9912997 and 9913996 on <lb/>chromosome 12; hg19). <lb/>For testing the correlation between replicates, the original logFC values and MAUDE <lb/>guide Z-scores were used directly. <lb/>Element-level statistics for CD69 screen were calculated with the sliding window <lb/>approach, using a 200 bp window and requiring a minimum of five guides per element. <lb/>To estimate the significance of the overlap between CD69-activating elements and Jurkat <lb/>open chromatin (DNaseI hypersensitivity), the distance distributions between open <lb/>chromatin sites and MAUDE-identified CD69-activating elements were compared for <lb/>actual vs. randomized open chromatin sites. The randomization placed open chromatin <lb/></body>

			<page>16 <lb/></page>

			<body>elements in between the starts of the first and last open chromatin sites in the locus <lb/>(chr12: 9885788 -9973087), accepting only random placements with no overlap between <lb/>open chromatin sites, and preserving their widths. 100 such randomizations were created, <lb/>each time computing the distances between the MAUDE-identified CD69-upregulating <lb/>elements and the nearest randomly-placed open chromatin element. The distance <lb/>distributions for the actual open chromatin data vs. the randomized open chromatin data <lb/>were then compared using a two-tailed Wilcoxon rank sum test. <lb/></body>

			<div type="annex">Abbreviations <lb/>AUROC: Area under the receiver operating characteristic curve <lb/>CaRE: CRISPRa responsive element (as identified in 9 ) <lb/>CRISPR: clustered regularly interspaced short palindromic repeats <lb/>FDR: false discovery rate <lb/>MAUDE: mean alterations using discrete expression <lb/>SD: standard deviation <lb/>TSS: transcription start site <lb/></div>

			<div type="availability">Availability of data and software <lb/>All data analyzed during this study are included in the supplementary information of <lb/>Simeonov et al. (Supplementary Table 1) 9 . MAUDE is available as an R package on <lb/>GitHub (https://github.com/Carldeboer/MAUDE). <lb/></div>

			<div type="annex">Authors&apos; contributions <lb/>CGD conceived of and implemented the algorithms with help from JPR. CGD drafted the <lb/>manuscript, with input from JPR, AR, and NH. All authors read and approved the final <lb/>manuscript. <lb/></div>

			<div type="acknowledgement">Acknowledgements <lb/>We thank Benjamin Doughty and Charles Fulco for helpful discussions. <lb/>CGD was supported by a Fellowship from the Canadian Institutes for Health Research <lb/>and the NIH (K99-HG009920-01). JPR is funded by NIH 5 F32 AI129249. Work was <lb/>supported by the Klarman Cell Observatory and HHMI (AR), the Center for Cell <lb/>Circuits, a Center of Excellence in Genome Science (RM1HG006193), and the NHGRI <lb/>(R01HG008131-01; NH). NH is the David P. Ryan endowed chair, and thanks Sandra, <lb/>Sarah and Arthur Irving for support. <lb/>AR is an equity holder and founder of Celsius Therapeutics and an SAB member of <lb/>ThermoFisher Scientific, Neogene Therapeutics and Syros Pharmaceuticals. NH is a co-<lb/>founder and equity holder of Neon Therapeutics. All other authors declare no competing <lb/>interests. <lb/></div>

			<page>17 <lb/></page>

			<listBibl>References <lb/>1. <lb/>Sanjana, N.E. et al. High-resolution interrogation of functional elements in <lb/>the noncoding genome. Science 353, 1545-1549 (2016). <lb/>2. <lb/>Fulco, C.P. et al. Systematic mapping of functional enhancer-promoter <lb/>connections with CRISPR interference. Science 354, 769-773 (2016). <lb/>3. <lb/>Gilbert, L.A. et al. CRISPR-mediated modular RNA-guided regulation of <lb/>transcription in eukaryotes. Cell 154, 442-451 (2013). <lb/>4. <lb/>Konermann, S. et al. Genome-scale transcriptional activation by an <lb/>engineered CRISPR-Cas9 complex. Nature 517, 583-588 (2015). <lb/>5. <lb/>Canver, M.C. et al. BCL11A enhancer dissection by Cas9-mediated in situ <lb/>saturating mutagenesis. Nature 527, 192-197 (2015). <lb/>6. <lb/>Parnas, O. et al. A Genome-wide CRISPR Screen in Primary Immune <lb/>Cells to Dissect Regulatory Networks. Cell 162, 675-686 (2015). <lb/>7. <lb/>Korkmaz, G. et al. Functional genetic screens for enhancer elements in <lb/>the human genome using CRISPR-Cas9. Nature biotechnology 34, 192-<lb/>198 (2016). <lb/>8. <lb/>Fulco, C.P. et al. Activity-by-Contact model of enhancer specificity from <lb/>thousands of CRISPR perturbations. bioRxiv, 529990 (2019). <lb/>9. <lb/>Simeonov, D.R. et al. Discovery of stimulation-responsive immune <lb/>enhancers with CRISPR activation. Nature 549, 111-115 (2017). <lb/>10. <lb/>Robinson, M.D., McCarthy, D.J. &amp; Smyth, G.K. edgeR: a Bioconductor <lb/>package for differential expression analysis of digital gene expression <lb/>data. Bioinformatics 26, 139-140 (2010). <lb/>11. <lb/>Love, M.I., Huber, W. &amp; Anders, S. Moderated estimation of fold change <lb/>and dispersion for RNA-seq data with DESeq2. Genome biology 15, 550 <lb/>(2014). <lb/>12. <lb/>Klann, T.S. et al. CRISPR-Cas9 epigenome editing enables high-<lb/>throughput screening for functional regulatory elements in the human <lb/>genome. Nature biotechnology 35, 561-568 (2017). <lb/>13. <lb/>Anders, S. &amp; Huber, W. Differential expression analysis for sequence <lb/>count data. Genome biology 11, R106 (2010). <lb/>14. <lb/>Trapnell, C. et al. Transcript assembly and quantification by RNA-Seq <lb/>reveals unannotated transcripts and isoform switching during cell <lb/>differentiation. Nature biotechnology 28, 511-515 (2010). <lb/>15. <lb/>Hsu, J.Y. et al. CRISPR-SURF: discovering regulatory elements by <lb/>deconvolution of CRISPR tiling screen data. Nature methods 15, 992-993 <lb/>(2018). <lb/>16. <lb/>Sharon, E. et al. Inferring gene regulatory logic from high-throughput <lb/>measurements of thousands of systematically designed promoters. Nature <lb/>biotechnology 30, 521-530 (2012). <lb/>17. <lb/>Maurano, M.T. et al. Systematic localization of common disease-<lb/>associated variation in regulatory DNA. Science 337, 1190-1195 (2012). <lb/>18. <lb/>Poisot, T. The digitize package: extracting numerical data from <lb/>scatterplots. The R Journal 3, 25-26 (2011). </listBibl>


	</text>
</tei>
