<?xml version="1.0" ?>
<tei>
	<teiHeader>
		<fileDesc xml:id="__J90-2003"/>
	</teiHeader>
	<text xml:lang="en">
			<front> AN IMPLEMENTABLE SEMANTICS FOR COMPARATIVE <lb/>CONSTRUCTIONS 1 <lb/> Manny Rayner and Amelie Banks 2 <lb/>Swedish Institute of Compu~ter Science <lb/>Box 1263 <lb/>S-164 28 KISTA <lb/>Sweden <lb/> We describe a comprehensive treatment of the syntax and semantics of comparative constructions based on <lb/>theoretical work by Pinkham, which can be implemented in a relatively straightforward fashion within a <lb/>feature-based phrase-structure grammar. Comparatives are divided up into &quot;clausal&quot; and &quot;phrasal&quot; <lb/>constructions; in contrast to most previous theories, however, phrasals are not regarded as reduced forms of <lb/>clausals. We begin by defining a Montagovian semantics for phrasal comparatives that directly links <lb/>interpretation rules to the surface syntactic structure; we 1then show how this solution can be made <lb/>computationally more efficient by &quot;factoring&quot; the interpretation through an intermediate level of representa-<lb/>tion, using a method similar to that used for dealing with scoping phenomena. Detailed examples are <lb/>provided, showing how the method can correctly describe the semantics of a variety of superficially widely <lb/>different comparative constructions. The ideas have all been implemented within a large-scale grammar for <lb/>Swedish, a &quot;toy&quot; version of which is presented, along with examples of the output. <lb/></front>

			<body>1 INTRODUCTION <lb/>1.1 OVERVIEW <lb/>This paper is written with two different, though to some <lb/>extent overlapping, audiences in mind. On the practical <lb/>side, we address ourselves to the natural language interface <lb/>constructor, who wants to expand the coverge of her system <lb/>so as to incorporate comparative constructions; the state of <lb/>the art has now progressed to the point where it is generally <lb/>acknowledged that this 4s a problem that a serious system <lb/>must attempt to deal with. In the following, we will thus <lb/>attempt to describe our ideas in a sufficiently concrete <lb/>fashion that they can be used as an implementation guide. <lb/>Typical examples of comparatives according to the tradi-<lb/>tional classification are the following: <lb/> Clausal comparatives <lb/> 1) Mary was happier in New York than John was in <lb/>London. <lb/>2) John has more books than Mary has newspapers. <lb/>3) The table is longer than it is wide. <lb/> Comparative ellipsis <lb/> 4) John is taller than Mary. <lb/>5) Few people run as fast as John. <lb/>6) John bought more books than Mary. <lb/>7) John was happier in New York than in London. <lb/>8) Mary had more friends than John thought. <lb/>9) John hit Mary harder than he meant to. <lb/>10) ]More men than women bought the book. <lb/>11) ]More people voted for the proposal than against. <lb/>12) John likes Mary&apos;s house better than Mary John&apos;s. <lb/> Unclear cases <lb/> 13) More than 50 people signed the petition. <lb/>14) Mary needs a larger car than this Fiat. <lb/>15) .John ran faster than the world record. <lb/>16) John was born in the same city as Mary. <lb/>17) John arrived before Mary. <lb/>On tile theoretical side, we want to re-examine some funda-<lb/>menta]L questions about the nature of the comparative <lb/>construction, and in particular about the phenomenon gen-<lb/>erally referred to as &quot;comparative ellipsis&quot;; by this, we <lb/>mean comparative constructions like those listed above in <lb/>which the element after the comparative marker is not a <lb/>clause, and which traditionally have been explained in <lb/>terms of various kinds of deletion rules. Here, we will argue <lb/>that, in most common cases, it is by no means necessary to <lb/>postulate syntactic deletion operations. We will claim, <lb/>rather, that it is possible (and indeed  simpler)  to assign a <lb/>syntactic representation to such constructions that closely <lb/>follows the apparent surface constituent structure. We will <lb/>then slhow how to define semantic interpretation rules for <lb/>such s~ructures, which at no level reconstruct a representa-<lb/>tion ,of&apos; a syntactic clause, but rather operate on the princi-<lb/>ple of directly comparing constituents of similar type. To <lb/>highli~,ht the difference between our approach and the <lb/></body>
			
			<page>86 <lb/></page>
			
			<front>Computational Linguistics Volume 16, Number 2, June 1990 <lb/></front>

			<note place="headnote"> Mammy Rayner and Amelie Banks <lb/>An lmplementable Semantics for Comparative Constructions <lb/></note>

			<body>traditional one, we will refer to constructions handled by <lb/>this method as examples, not of  comparative ellipsis,  but <lb/>rather of  contrastive comparison. <lb/> Our opinion is that the issues we are raising are probably <lb/>applicable to most grammatical frameworks subsumed un-<lb/>der  the feature-based phrase structure grammar  paradigm; <lb/>this includes established formalisms like LFG, GPSG, <lb/>HPSG, PATR-II etc., and a vast number of more or less <lb/>obscure formalisms in use around the world. At risk of <lb/>offending everybody and pleasing nobody, we will make no <lb/>particular attempt to align ourselves with any one of these <lb/>theories; in Section 1.2, we will describe in general terms <lb/>the properties we will expect a framework to possess, if it is <lb/>to be capable of supporting the type of operations we will <lb/>need. Basically, we will demand distinct levels of represen-<lb/>tation for constituent structure, function-argument struc-<lb/>ture, and logical form, related in the normal way; we will <lb/>also require certain constructions to be treated as syntactic <lb/>constituents. Most of this will be quite uncontroversial. <lb/>To clear the decks before moving into action, we now <lb/>spend a couple of paragraphs making clear which questions <lb/>we are  not  attempting to answer. We regard the lexical <lb/>semantics of comparatives as being outside the scope of the <lb/>paper; we are only interested in determining how the <lb/>phrasal semantics can be derived from them. We explain <lb/>exactly what we mean by this statement in Section 1.2. We <lb/>will ignore complex comparative operators (&quot;more than <lb/>twice as much as&quot;; &quot;at least two inches longer than three <lb/>times as long as&quot;); these are well dealt with in Ballard <lb/>(1988), and in any case do not seem to pose fundamental <lb/>difficulties. For similar reasons, we refrain from discussing <lb/>determiners with phrasal comparatives, like &quot;more than <lb/>two&quot; or &quot;at least half&quot;: here, the most comprehensive <lb/>reference is perhaps Keenan and Stavi (1986). We also <lb/>ignore certain idiosyncratic constructions (&quot;as fast as ever&quot;; <lb/>&quot;as much as usual&quot;), which do not seem to fit any pattern <lb/>known to us. <lb/>In our treatment of clausal comparatives, we will present <lb/>two slightly different variants of a solution. The first is <lb/>simple to implement, and appears capable of giving correct <lb/>semantics to most normal examples; however, it fails to give <lb/>both readings for the notorious Russell example, &quot;I thought <lb/>your yacht was longer than it is.&quot; The second solution, on <lb/>the other hand, is capable of dealing with this kind of <lb/>sentence, but needs a number of additional scoping rules. <lb/>We say more about this in Section 4. <lb/>With regard to cross-linguistic coverage, we will restrict <lb/>ourselves to English, Swedish, and a few other languages in <lb/>which the comparative construction is syntactically similar <lb/>in nature; this actually appears to include most European <lb/>languages. Although we suspect that our results are proba-<lb/>bly applicable to at least some languages outside this <lb/>group, 3 we shall not make any further attempt to lend <lb/>credibility to this claim. <lb/>The organization of the rest of the paper is as follows. In <lb/>Section 2 we review previous work: in particular, we point <lb/>out what we regard as the main weaknesses of the deletion <lb/>method, and summarize earlier attempts to describe phrasal <lb/>comparatives by direct interpretation methods. The next <lb/>two sections contain the main results of the paper. <lb/>In Section 3, we examine contrastive phrasal compara-<lb/>tives. We begin by defining a Montagovian semantics for <lb/>these, and then show how this can be improved by <lb/>&quot;factoring&quot; it through an intermediate level of representa-<lb/>tion, in which the &quot;contrasting&quot; relationship between <lb/>phrases is left undefined. We then go on to show how this <lb/>methodology can be used to provide a readily implement-<lb/>ablesemantics for a wide variety of contrastive construc-<lb/>tions, which also gives a simple explanation of the ambigu-<lb/>ity of certain comparative sentences. Section 4 then goes on <lb/>to describe our treatment of clausal comparatives, which is <lb/>largely adapted from the work reported in Klein (1980) <lb/>and Pinkham (1985). <lb/>In Section 5 we briefly discuss noncoreference of com-<lb/>pared objects; we also look at sentences containing the <lb/>words &quot;before&quot; and &quot;after,&quot; pointing out some differences <lb/>between these and comparative sentences. A corpus analy-<lb/>sis, which gives some indication of the relative frequencies <lb/>of the various constructions, is presented in Section 6. In <lb/>Section 7 we summarize our results. <lb/>The theoretical ideas advocated here were first developed <lb/>and tested in practice within the framework of the SNACK-<lb/>85 project (Rayner and Banks 1986; 1989). In Appendix 2 <lb/>we give the complete program code for a &quot;scaled-down&quot; <lb/>version of the system, which handles all the constructions <lb/>described in the main body of the paper, and in Appendix 3 <lb/>we show examples of the system&apos;s output. <lb/>1.2 THEORETICAL ASSUMPTIONS <lb/>1.2.1 GENERAL REMARKS ON THE THEORETICAL <lb/> FRAMEWORK <lb/> In this section, we attempt to summarize the theoretical <lb/>assumptions needed to support our arguments. The main <lb/>body of the paper is Section 3, which deals with phrasal <lb/>comparatives: here we present our theory in two separate <lb/>forms. <lb/>Version one is a Montague grammar, modified slightly to <lb/>allow use of generalized quantifiers. This has the advantage <lb/>of theoretical elegance, but as we shall see is computation-<lb/>ally unattractive. We consequently recast it in a form more <lb/>suitable for implementation purposes, which draws its inspi-<lb/>ration from the well-known treatment of scoping phenom-<lb/>ena originally described in Woods et al. (1972); later <lb/>elaborations and refinements have been implemented in a <lb/>number of systems, notably CHAT-80 (Pereira 1983), <lb/>TEAM (Grosz et al. 1986), and CLE (Moran 1988; Alshawi <lb/>et al. 1989). We will continue to use this framework in <lb/>Section 4, where we consider clausal comparatives, and <lb/>now describe it in more detail. <lb/>Most importantly, we have three distinct levels of linguis-<lb/>tic representation, which we refer to as  syntax, quasi-<lb/>logical form, 4  and  logical form;  we stress that these terms <lb/>are merely used for convenience, and are not to be read as <lb/>referring to any specific linguistic theory, Chomskian or <lb/>otherwise. The levels will encode the following information: <lb/>

			<note place="footnote"> Computational Linguistics Volume 16, Number 2, June 1990 <lb/></note>

			<page>87 <lb/></page>

			<note place="headnote">Manny Rayner and Amelie Banks <lb/>An Implementable Semantics for Comparative Constructions <lb/></note>
			
			Syntax.  At this level, the structure of the sentence is <lb/>represented as a phrase structure tree, where each node is <lb/>associated with a set  of features.  We will make two assump-<lb/>tions about the feature structure. First, we distinguish a <lb/>special feature, which encodes the quasi-logical form of a <lb/>constituent; not all nodes need possess this feature. Second, <lb/>there will be some mechanism that permits the definition of <lb/>long-range dependencies, by allowing features in different <lb/>constituents to share information. <lb/>Quasi-logical form (QLF). This level encodes the predi-<lb/>cate-argument structure of the phrase; the only demand we <lb/>will make is that, like any other feature value, its value can <lb/>be derived entirely by phrase structure rules with feature <lb/>unification. (This is in spirit similar to a compositionality <lb/>restriction, but is weaker.) <lb/> Logical form  (LF). At this level, the sentence is associ-<lb/>ated with an expression in a (generally higher-order) predi-<lb/>cate calculus; the logical form of a sentence will be deriv-<lb/>able from its quasi-logical form by application of rewriting <lb/>rules representing scoping and other transformations. Since <lb/>there is little agreement concerning the representation of <lb/>logical forms, we now say a few words about the less usual <lb/>features of our system. <lb/>First, we will find it convenient to treat events as objects, <lb/>since this can often greatly simplify the semantics of adver-<lb/>bial modification. For example, we will represent  Gustav <lb/>III ruled for 21 years  as something like <lb/> 3 e. event_type(e, rule)dlagent(e, cyastav_iii)/i dtu ation(e, 21 ) <lb/>We will also make extcnsive usc of gcneralized quantifiers <lb/>(Barwise and Cooper 1981 ); these will play a kcy role in our <lb/>represcntation of comparatives. We will not, however, usc <lb/>Barwise and Cooper&apos;s notation, which involves combining a <lb/>determiner and a set-descriptor to form a quantifier, but <lb/>rather will take the equivalent approach of treating deter-<lb/>miners as two-place higher-order predicates on sets. We <lb/>will use {N l~b(N)} for the determiner &quot;A number N such <lb/>that qb(N)&quot;: thus we write <lb/> no(rose, hx.send(john, x,mary)) <lb/> for &quot;John sent no roses to Mary,&quot; <lb/>{N I N&lt;SKroso,M~.send(john,x, mary)) <lb/>for &quot;John sent less than 5 roses to Mary,&quot; and <lb/>INI  3 N&apos;.N&lt;N&apos;&amp;{N&apos;] <lb/> (rose, Xx.rose(x)ddn(x,garden))} <lb/>(rose,hx.send(iohn,x, mary)) <lb/> for &quot;John sent fewer roses to Mary than there were roses in <lb/>the garden.&quot; Formulas like the third one above will occur <lb/>frequently in Section 3, and we advise the reader to spend a <lb/>minute at this point making sure that she understands the <lb/>notation. <lb/>1.2.2 SPECIFIC SYNTACTIC AND SEMANTIC <lb/>ASSUMPTIONS <lb/>The basic scheme, or some not too distant relative, is the <lb/>one used in many large-scale implemented systems; as <lb/>examples, we can quote TEAM (Grosz et al. 1987), PUN-<lb/>DIT (Dahl et al. 1987), TACITUS (Hobbs et al. 1988), <lb/>MODL (McCord 1987), CLE (Alshawi et al. 1989), and <lb/>SNACK-85 (Rayner and Banks 1986). It also has close <lb/>links with theoretical work in situation semantics (Pollard <lb/>and Sag 1988; Fenstad et al. 1987). We start by enumerat-<lb/>ing tlhe basic syntactic constituents S, NP, VP, DET, AP, <lb/>ADVF&apos;, PP; as far as our ontological commitments go, we <lb/>need a set of  THINGS,  a set of EVENTS, and a set of DEGREES. <lb/>We will assume that DEGREES are isomorphic to some kind <lb/>of numbers. <lb/>An NP will consist of a DET and a CN (we borrow this <lb/>nonstandard term for N-bar from Montague grammar). A <lb/>DET will semantically correspond to a generalized deter-<lb/>miner, and a CN to a subset of THINGS. An NP will thus <lb/>become a generalized quantifier. <lb/>A VP consists of a VERB, followed by a list of VERB-<lb/>ARGs (or just ARGs), by which we mean its obligatory <lb/>and optional complements. An ARG is represented at QLF <lb/>level as a pair  (arg-type, arg-value).  We will need at least <lb/>the following kinds of complements: NP, PP, S-COMP (a <lb/>suitab]~e S), VP-COMP (a suitable VP), APs. Semanti-<lb/>cally, a verb will be associated with a subset of EVENTS, <lb/>which we can think of as a type of event, state, or situation. <lb/>The VALUE of each ARG will also be semantically repre-<lb/>sented by a suitable object, and the ARG-TYPE will <lb/>translate to a relation between the verb-object and the <lb/>representation of the ARG-VALUE. We will require a <lb/>special kind of QLF node, called an abstraction, to repre-<lb/>sent VPs, APs, and other constituents whose denotation is a <lb/>function from individuals to propositions; one component of <lb/>the abstraction node will be the abstracted variable. <lb/>A scalar adjective A translates to a two-place predicate <lb/>A&apos;(x, d) on OBJECTS × DEGREES, with the interpretation: the <lb/>object x is A&apos; to degree d. Similarly, a scalar adverb A <lb/>translates to a two-place predicate A&apos;(x, d) on EVENTS X <lb/>DEGREES, with the interpretation: the event x is A&apos; to degree <lb/>d. We will assume that degree expressions like &quot;more,&quot; <lb/>&quot;less,&apos;&quot; or &quot;at least twice as much as much as&quot; translate to <lb/>two-place predicates on DEGREES × DEGREES. Since we are <lb/>assuming that DEGREES are numbers, it will also make <lb/>sense to use a generalized quantifier as the second argu-<lb/>men&apos;t to an adjective: for example, A(x, {N  IN &lt;2}) will be <lb/>interpreted as &quot;x is (less than 2) A.&quot; <lb/>We will also need to be able to form &quot;slash categories&quot; or <lb/>something similar. In particular, the following will be <lb/>required (in each example the &quot;gap&quot; is represented as an <lb/>underscore): <lb/>S/DET (e.g. &quot;John bought _ vases&quot;) <lb/>S/NP (e.g. &quot;John gave _ to Mary&quot;) <lb/>S/S-COMP (e.g. &quot;John probably believed _ &quot;) <lb/>S/VP-COMP (e.g. &quot;John presumably meant to _ &quot;) <lb/>A rnore exact formulation of the basic question we are <lb/>attacking is thus: <lb/> In terms of the above framework, state rules by which we <lb/>can systematically calculate the denotation of a complex <lb/>expression involving a comparative construction in terms of <lb/>

			<page>88 <lb/></page>

			<note place="footnote">Computational Linguistics Volume 16, Number 2, June 1990 <lb/></note>

			<note place="headnote">Mammy Rayner and Amelie Banks <lb/>An Implementable Semantics for Comparative Constructions <lb/></note>
			
			the denotation of its scalar adjectives and adverbs, the <lb/>denotations of its degree expressions, and the denotations of <lb/>its other constituents. <lb/>2 PREVIOUS WORK ON COMPARATIVES <lb/> This section will summarize relevant previous work on <lb/>comparatives; we begin by listing sources. So far, there has <lb/>been a surprisingly small amount of work done in computa-<lb/>tional frameworks: the only major attempts known to us <lb/>that integrate syntactic and semantic processing are those <lb/>reported in Ballard (1988) and Friedmann (1989). Limited <lb/>syntactic/semantic coverage has appeared in some other <lb/>systems (e.g. DIALOGIC [Robinson 1982] and CLE <lb/>[Alshawi et al. 1989]), and the Linguistic String Project <lb/>(Sager 1981) has an advanced syntactic coverage. <lb/>On the theoretical front, we have been considerably <lb/>influenced by Bresnan (1973), Hankamer (1973), Pinkham <lb/>(1985), and Klein (1980), especially the last three; we were <lb/>also surprised to discover at a late stage of our research that <lb/>unpublished work by Heim (1985) and Krifka (1987) had <lb/>pursued a course almost parallel to our own. We now go on <lb/>to describe what we regard as relationships between these <lb/>treatments and ours. <lb/>We will start by looking at clausal comparatives, where <lb/>the immediate problem is clearly to account for the appar-<lb/>ent &quot;missing material&quot; in the comparative clause. An early <lb/>and still very influential study of comparative constructions <lb/>is that of Bresnan (1972; 1973; 1977), working within trans-<lb/>formational grammar; the key concept is the introduction <lb/>of the rule of Comparative Subdeletion, which will for <lb/>example derive sentences like la) and 2a) by deleting the <lb/>bracketed material from the base forms 1 b) and 2b). <lb/>1 a) John bought more books than Mary bought. <lb/>1 b) John bought more books than Mary bought [x many <lb/>books]. <lb/>2a) John bought more books than Mary bought records. <lb/>2b) John bought more books than Mary bought [x many] <lb/>records. <lb/>Although Comparative Subdeletion explains many of the <lb/>facts, it makes a number of erroneous predictions. A very <lb/>long and thorough criticism was advanced in Pinkham <lb/>(1985), where reasons are given to believe that it is prefera-<lb/>ble to adopt an analysis that represents the &quot;missing&quot; <lb/>material as (in English) null proforms; these are bound to <lb/>the head of the comparison by a mechanism that Pinkham <lb/>calls Quantifier Binding. Pinkham&apos;s view of the clausal <lb/>comparative has many points in common with that pro-<lb/>posed in Klein (1980), in the context ofa GPSG/Montague <lb/>grammar framework, although Klein only really considers <lb/>sentences of the type in example 2); our own treatment will <lb/>in this respect be similar to Pinkham&apos;s and Klein&apos;s. <lb/>Like Bresnan and Pinkham, but unlike Friedmann <lb/>(1989), we will also regard the comparative clause as in <lb/>general modifying the comparative head in the main clause, <lb/>as opposed to treating the two clauses as parallel; we <lb/>discuss further in Section 4 the reasons behind this deci-<lb/>sion. <lb/>Moving on to phrasal comparatives, there would appear <lb/>to be two basic approaches. The earlier and more common <lb/>one is to treat these as reduced forms of clausal compara-<lb/>tives; for example, Hankamer (1971) introduces a rule of <lb/>&quot;C-ellipsis,&quot; which deletes material from the comparative <lb/>clause under identity with material in the main clause. <lb/>Thus for example, 3a) and 4a) would be regarded as <lb/>reduced forms of 3b) and 4b), where the bracketed mate-<lb/>rial has been deleted: <lb/>3a) John bought more books than Mary. <lb/>3b) John bought more books than Mary [bought x many <lb/>books]. <lb/>4a) John bought more books than Mary thought. <lb/>4b) John bought more books than Mary thought [that he <lb/>bought x many books]. <lb/>In a computational treatment, this means that the deletion <lb/>rule has to be &quot;reversed,&quot; so as to reconstruct the deleted <lb/>material from the phrasal remnant: this is the method used <lb/>in Sager (1981) and Friedmann (1989). <lb/>However, a number of researchers have showed that <lb/>there are drawbacks to the &quot;C-ellipsis&quot; account. Although <lb/>both Hankamer and Pinkham use C-ellipsis in their theo-<lb/>ries, they also provide strong evidence for the existence of at <lb/>least some comparatives that are not elliptic in nature <lb/>(Hankamer 1973; Pinkham 1985). Three examples are <lb/>shown in 5)-7), where Pinkham in each case argues that <lb/>there are severe difficulties involved in deriving a sentence <lb/>of this type from a clausal comparative; the natural choice <lb/>in a transformational framework is to regard the italicized <lb/>portions as base-generated phrasal. <lb/>5) I invited  more men than women. <lb/> 6) John  ran faster than the world record. <lb/> 7) Mary looks  taller than John  when she wears high <lb/>heels. <lb/>Of particular interest here is Pinkham&apos;s treatment of exam-<lb/>ples like 5), which are interpreted using a rule that she calls <lb/>&quot;distributive copying.&quot; 5) receives the logical form 5a), <lb/>which after distributive copying becomes 5b). Although the <lb/>details of the solution are not fully worked out (in particu-<lb/>lar, the notation is never given a formal semantics), the <lb/>intuitive idea is clearly that of duplicating a &quot;shared&quot; or <lb/>&quot;matrix&quot; predicate, substituting in the two compared ele-<lb/>ments in a suitable way. <lb/>5a) I INVITED (MORE [ql (ql men), q2 (q2 women)]) <lb/>5b) MORE [ql (I INVITED ql men), q2 (I INVITED q2 <lb/> women)] <lb/> Similar suggestions have also been made in a rather dif-<lb/>ferent context by Keenan and Stavi (1986; 282-284); con-<lb/>sidering the semantics of comparative adjectival construc-<lb/>tions like that in 8a), they argue convincingly that these are <lb/>to be regarded as directly interpreted, rather than as re-<lb/>duced forms of sentences like 8b) or 8c): <lb/>

			<note place="footnote">Computational Linguistics Volume 16, Number 2, June 1990 <lb/></note>

			<page>89 <lb/></page>

			<note place="headnote">Mammy Ra~er and AmeHe ~nks <lb/>An Implement~ble Semantics for Comparative Cons~ucfiomus <lb/></note> 
			
			8a) More male than female students passed the exam. <lb/>8b) More male students than female students passed the <lb/>exam. <lb/>8c) More male students passed the exam than female <lb/>students passed the exam. <lb/>We should also mention the work of M cCord (1981; 1985; <lb/>1987) on &quot;focalizers&quot;; the key notion we borrow is the use <lb/>of rewriting rules on semantic representations, to produce a <lb/>logical form in which contrasted items appear at the same <lb/>level. Although McCord does not attempt, as we do, to <lb/>justify his operations formally, the intuitions behind them <lb/>clearly overlap to a large extent with ours. <lb/>In our own treatment of phrasal comparatives, we take <lb/>all these ideas to their logical conclusion: we dispense with <lb/>the C-ellipsis rule altogether, and regard all nonclausal <lb/>comparatives as essentially phrasal, interpreting them by a <lb/>method analogous to Pinkham&apos;s distributive copying. The <lb/>abstract scheme is concretely implemented in the form of <lb/>rewriting rules, which are applied to an intermediate quasi-<lb/>logical form. A solution along these lines, which builds on <lb/>previously reported work (Banks 1986; Banks and Rayner <lb/>1987; Rayner and Banks 1988), is described in Section 3. <lb/>As we complete this article, we discover that a similar <lb/>approach for German comparatives has independently been <lb/>suggested by Krifka (1987); Krifka also proceeds by using <lb/>direct interpretation rules involving contrasting of com-<lb/>pared constituents, although the details of his analysis are <lb/>in some respects fairly different. The following is a typical <lb/>example: 9a) is given the semantics represented by 9b), <lb/>where pdO(d) is to be read as &quot;the maximum d, for which <lb/>O(d) holds,&quot; and KOMP(x, y, f) is defined by <lb/> KOMP(x, y,  ~) ,~.  &lt;I,(x) &gt; ~y) <lb/> 9a) Ich babe ihr bessere ZahNrtze <lb/>I <lb/>have him better <lb/> dentist <lb/> empfohlen <lb/>als du. <lb/>recommended than you-NOM. <lb/>(I have recommended him a <lb/>better dentist than you [did]). <lb/>9b) KOMP(ich, du, hxpd[x hat ihr d-gute Zah~irtze <lb/>empfohlen]). <lb/>3 PHRASAL COMPARATIVES <lb/> 3.1 BASIC IDEAS <lb/> As we have already indicated, our strategy for handling <lb/>phrasal comparatives will be to provide direct interpreta-<lb/>tion rules, rather than to assume the existence of deletion <lb/>rules and attempt to reconstruct a clausal comparative. In <lb/>the preceding section, we referred to a number of authors <lb/>who have pointed out weaknesses in the C-ellipsis theory; <lb/>using their arguments and some of our own, we now <lb/>describe our reasons for preferring our method to the <lb/>traditional one. <lb/>Our fundamental argument will be Occam&apos;s razor: espe-<lb/>cially from the implementation viewpoint, assuming that <lb/>phrasals are derived from clausals has little real explana-<lb/>tory power. Since the authors quoted above give good <lb/>theoretical arguments to show that at least some phrasal <lb/>compa:ratives are not the result of C-ellipsis, we are at any <lb/>rate [going to have to provide direct interpretation rules for <lb/>these cases. If it then turns out that these rules can be <lb/>systematically extended so as to cover the other phrasal <lb/>comparatives as well, we can dispense with C-ellipsis alto-<lb/>gether and arrive at a simpler system. We claim that this is <lb/>exactly what we have done. <lb/>It is worth looking a little more closely at the case in <lb/>which the comparative complement is of the form than NP; <lb/> this is certainly the one that occurs most commonly in <lb/>practice. The first point is well known, and was first de-<lb/>scribed in detail in Hankamer (1971): in English (and in <lb/>fact a good many other languages), it is possible to extract <lb/>out of contrastive NP complements, but not from clausal <lb/>comparative complements. For example, compare 10a) <lb/>with 10b): <lb/>10a) ~Vho i does John run faster than tt? <lb/>10b) *:Who i does John run faster than t,. runs? <lb/>The relevance of this observation is obvious: if contrastive <lb/>NP complements really are elliptic forms of clausal comple-<lb/>ments, we would appear to need some mechanism by which <lb/>something originally an extraction island could cease to be <lb/>one when a reduction is performed. This would be a very <lb/>unusual phenomenon, which it would certainly be prefera-<lb/>ble to ~Lvoid introducing into a syntactic theory; rather than <lb/>do this, it seems much simpler to treat the two construc-<lb/>tions a:~ fundamentally different, as we have done. <lb/>Another fairly clear-cut piece of evidence can be found in <lb/>Swedish, where a different possessive pronoun is used de-<lb/>pending on whether the comparative is clausal or phrasal, <lb/>as in 1 la) and 1 lb). Here, the point is that sin refers back <lb/>to the ~ubject of the clause, while hans refers to a nonsub-<lb/>ject NP in the same clause, or an NP in a different clause. <lb/>Once :again, this would be strange if the comparative <lb/>complement in 11 a) were a clausal remnant. <lb/>l la) Sven kSpte tier bScker ~in sin far. <lb/>Sven bought more books than his father. <lb/>1 lb) Sven kSpte tier b~Scker ~in hans far <lb/>gjorde. <lb/>Sven bought more books than his father did. <lb/>However, in practice the biggest problem seems to be that it <lb/>is not easy to provide a satisfactory definition of the C-<lb/>ellipsis deletion operation; to be more exact, we need to <lb/>define the inverse of this operation, so as to reconstruct the <lb/>comparative clause from the reduced form. A relatively <lb/>simp][e example is 12a), which we quoted in Rayner and <lb/>Banks (1988); the sentence is also discussed at length by <lb/>Friedmann. Here, a naive definition of &quot;deletion of identi-<lb/>cal material&quot; will result in reconstructing 12b); what we <lb/>want is. rather 12c), which requires an NP to be regarded as <lb/>&quot;identicar&apos; to a pronoun bound by it. <lb/>

			<page> 90 <lb/></page>

			<note place="footnote">Computational ~ng~sfics Volume 16, Num~r 2, June 1~0 <lb/></note>

			<note place="headnote">Manny Rayner and AmeHe Banks <lb/>An lmplementable Semantics for Comparative Constructions <lb/></note> 
			
			12a) Every tourist spent more in London than in New <lb/>York. <lb/>12b) Every tourist spent more in London than every tourist <lb/>spent in New York. <lb/>12c) Every tourist spent more in London than he spent in <lb/>New York. <lb/>Friedmann&apos;s solution to the problem begins by reconstruct-<lb/>ing a form like 12b), and then makes use of rewriting rules <lb/>that &quot;merge&quot; the two occurrences of  every tourist  into a <lb/>single quantifier that has wide scope over the whole sentence; <lb/>the final result is essentially 12c). This idea is, however, <lb/>open to several criticisms. To begin with, it has little <lb/>linguistic motivation; more important, it is difficult to see <lb/>how to extend it to handle harder cases without adding <lb/>more  ad hoc  rules. For example, getting the normal <lb/>(&quot;sloppy&quot;) reading of 13a) by Friedmann-like analysis <lb/>seems to involve transforming it to something like 13b), <lb/>which rather begs the question of how to account for the <lb/>different possessive pronouns in the two clauses. On a <lb/>direct-interpretation account, however, the intended read-<lb/>ing for sentences like 13a) can be derived in a natural way; <lb/>we describe how this can be done in Section 3.4.6. <lb/>13a) Few men are as loyal to their country as George (is). <lb/>13b) Few are as loyal to their country as George is loyal to <lb/>his country. <lb/>The remainder of Section 3 will give a detailed description <lb/>of our version of the direct-interpretation method. We start <lb/>in Section 3.2 by showing how to construct a Montagovian <lb/>semantics for a fragment containing phrasal constructions; <lb/>the basic trick is to have a phrase structure rule that <lb/>combines a syntactic structure with a pronoun-like &quot;slot,&quot; a <lb/>&quot;filler&quot; for the &quot;slot,&quot; and an element of the same semantic <lb/>type as the &quot;filler,&quot; against which it is contrasted. This rule <lb/>can then be linked in the normal way with a corresponding <lb/>semantic rule, which defines the semantics of the composite <lb/>structure in terms of the semantics of its constituents. <lb/>However, this has the same drawbacks as the original <lb/>Montague treatment of scoping phenomena, namely that <lb/>we are introducing phrase structure rules that lack syntac-<lb/>tic motivation. Consequently, we introduce in Section 3.3 a <lb/>computational version of the theory; here we perform inter-<lb/>pretation in two stages, with the intermediate QLF level of <lb/>structure interposed between phrase structure and logical <lb/>form. At QLF level, comparative phrases are linked to the <lb/>associated graded element, but  not  to the element they are <lb/>compared against. A subsequent transformation of the <lb/>QLF structure introduces links between compared ele-<lb/>ments, resulting in a form that can be converted into an LF. <lb/>At the penultimate stage, we will have a higher-order <lb/>four-place predicate, which takes the following arguments: <lb/>the two contrasted elements, the way in which they are <lb/>compared, and a parameterized &quot;matrix&quot; formula contain-<lb/>ing two &quot;slots,&quot; one for the degree, and one for the con-<lb/>trasted element. <lb/>In Section 3.4 we give examples showing how our frame-<lb/>work can be used to define the semantics of a variety of <lb/>phrasal comparative complements, and also touch briefly <lb/>on the question of ambiguity in phrasal comparative eono <lb/>structions. Finally, in Section 3.5 we say a few words about <lb/>how the theoretical ideas presented above can be realized <lb/>concretely within a unification-based grammar. <lb/> 3.2 MONTAGOVIAN SEMANTICS FOR PHRASAL <lb/> COMPARATIVES <lb/>We now proceed to show how the intuitive picture sketched <lb/>out in Section 3.1 can be expressed formally in terms of <lb/>Montague grammar; the technical idea is essentially in-<lb/>spired by the PTQ treatment of scoping phenomena 5 (Mon-<lb/>tague 1972; Dowty et al. 1982, pp. 203-215). There are <lb/>three slightly different variants of the method, one for <lb/>constituents of type t (clauses), and two for constituents of <lb/>type (e, t ) (VPs, APs). Since we are treating adverbials as <lb/>properties of verb-objects, ADVPs will also fall into this <lb/>second group. <lb/>For each variant, we have a rule-schema, parameterized <lb/>by the syntactic type of the comparative complement; we <lb/>call this constituent COMPLEMENT, and we also assume the <lb/>existence of a &quot;proform&quot; that can stand for constituents of <lb/>type COMPLEMENT. An example of such a proform will be <lb/>written as c-proform i for some suitable i. We will also need <lb/>a set of proforms to stand for determiners; we will write <lb/>these as q-proform i. Finally, we will assume a syntactic <lb/>class COMP-OPERATOR, which will include expressions <lb/>like  more, less, at least twice as much,  and so on. The <lb/>denotation of an expression in COMP-OPERATOR will <lb/>be a constant two-place relation between degrees. <lb/>We then add syntactic rules, to say that a constituent of <lb/>type COMPLEMENT can be realized as c-proformi, and that <lb/>its denotation is a variable e i of the appropriate type; <lb/>similarly, a determiner can be realized as q-proformi, and <lb/>its denotation will be a variable qi of the type associated <lb/>with degree expressions. Since the semantic rules are all <lb/>defined relative to a variable-substitution g, it naturally <lb/>follows that the truth conditions for a phrase containing <lb/>any of these proforms depends on the values assigned by g <lb/>to the associated variables. <lb/>We are now in a position to define the syntactic rule-<lb/>schema for composition of phrasal comparatives. We first <lb/>take the simpler case, where the phrase is of clausal type; <lb/>the input to the rule will be the following: <lb/>1) A phrase • of type S, containing occurrences of <lb/> c-proform i and q-proform i  for some i and j. <lb/>2) Two phrases A ! and A 2 of type COMPLEMENT. <lb/>3) A phrase ~ of type COMP-OPERATOR. <lb/>and produces as output the phrase Comp(~, Al, A2, ,It) <lb/>constructed by doing the following: <lb/>a) Replace c-proform i in • by the phrase A 1. <lb/>b) Replace q-proform| in ~ with the comparative operator <lb/>xI,. <lb/>c) Concatenate  than or as  (depending on &apos;~&apos;) + A 2 to the <lb/>end. <lb/>d) Perform necessary morphological operations (e.g. change <lb/> more big to bigger, less many to fewer,  etc.) <lb/>

			<note place="footnote"> Computational Linguistics Volume 16, Number 2, June 1990 <lb/></note>

			<page>91 <lb/></page>

			<note place="headnote">Manny Rayner and  Amelie Banks <lb/>An  lmplementable Semantics for Comparative Constructions <lb/></note> 
			
			We let ~&apos; be the denotation ofO, ~&apos; the denotation of~, etc. <lb/>Since 4, contains instances of the pronouns e-proform i and <lb/>q-proforml, 4,&apos; will contain corresponding free variables el <lb/>and q|. It will thus make sense to abstract over these: for <lb/>convenience&apos;s sake, we will refer to Xei~,qjO&apos; as ~&quot;. The <lb/>associated semantic rule will then define the denotation of <lb/>Comp(O, A l, A2, q) to be the value of the expression <lb/>O&quot;(AI&apos;, {N I ¢&quot;(A2&apos;, {N&apos; I ~&quot;(N, N&apos;)})}) <lb/> (*) <lb/> This formula is both central to the paper, and sufficiently <lb/>obscure as to require some further explanation. To under-<lb/>stand what it means in intuitive terms, we focus first on 4&gt;&quot;. <lb/>This can be viewed in the usual way as a predicate with two <lb/>argument slots: the first filled by an object denoting a <lb/>phrase of type COMPLEMENT, and the second by an object <lb/>denoting a degree. <lb/>We now work &quot;from the inside out.&quot; We thus begin with <lb/>the subformula {N&apos;[#&apos;(N,N&apos;)}; remember that this is a <lb/>generalized determiner (see Section 1.2). For example, if <lb/>has the value more, it will be the determiner <lb/>{N&apos;I more(N,N&apos;) }, or to express this in more usual terms (less <lb/> than N). Working outward to the next level, the subformula <lb/>O&quot;(A2&apos;, {N&apos;[~&quot;(N,N&apos;)}) is that formed by substituting the <lb/>complement denotation A z&apos; in the first argument place of 4,&quot; <lb/>and the determiner denotation {N&apos;[#&apos;(N,N&apos;)} in the second. <lb/>It is consequently a condition on N, which means that <lb/>{N I ¢&quot;(A~&apos;, {N&apos;[ ~&apos;(N,N&apos;)}) } is also a generalized determiner. <lb/>The final formula is now constructed by once again substi-<lb/>tuting suitable values into the argument slots for $&quot;, these <lb/>now being A l&apos; and {N [ ~&quot;(A2&apos;,{N&apos; [ g/(N,N&apos;) }) }. <lb/>To summarize: what we have described here is a rule-<lb/>schema that allows us to construct what could be called a <lb/> comparative S, which contrasts two constituents of type <lb/> COMPLEMENT. <lb/> A small extension now gives us corresponding schemas <lb/>for comparative constituents of type (e, t) (this includes <lb/>VPs, APs, and relative clauses); it seems that there are <lb/>actually two slightly different versions. The most obvious <lb/>case is the one in which contrasting takes place, as previ-<lb/>ously, between the comparative complement and some <lb/>other constituent of similar type. Here, we can use the <lb/>syntactic conditions for the rule above in unchanged form; <lb/>since the type of ~&apos; is (e, t) rather than t, the semantic part <lb/>of the rule has to be rewritten slightly, as the old definition <lb/>would no longer make the condition on N a truth-value. We <lb/>solve this problem by substituting in a value x in ~&quot; <lb/>(reducing it to a truth-value), and later abstract x away <lb/>again at the outermost level. The denotation of <lb/>Comp(~, Al, Az, ~) will then be <lb/>hx.O&quot;(A{,{N I O&quot;(A2&apos;,IN&apos; I ~&quot;(N, N&apos;)}, x)}, x) <lb/>(**) <lb/>An important special case, which we will make use of in <lb/>Sections 3.4.4 and 3.4.6, occurs when the comparative <lb/>complement is an NP, and the &quot;contrast&quot; is between it and <lb/>the entity referred to by the abstracted variable in 4&gt;. <lb/>Sentences 14)-16) illustrate this. In each, we claim that <lb/>contrasting is occurring within the italicized portion. <lb/>14) A man taller than John was chosen for the team. <lb/>15) Most people don&apos;t expect to live as long as John (did). <lb/> 16) People who travel to London as often as John usually <lb/>have season tickets. <lb/>One way to deal with these constructions would be to make <lb/>them all equivalent with the case represented by 16): for <lb/>relative clauses, it is reasonable to maintain that contrast-<lb/>ing is between the complement, and a &quot;gap&quot; linked to the <lb/>relative pronoun. On this account, 14) and 15) are regarded <lb/>as derived from something like 14a) and 15a). <lb/>14a) A man (who is) taller than John was chosen for the <lb/>&apos;team. <lb/>15a) Most people don&apos;t expect (that they will) live as long <lb/>as John. <lb/> Although this approach is certainly also feasible, it seems <lb/>technically simpler to dispense with the null pronouns and <lb/>instead use the following semantic analogue of the idea, <lb/>essentially a type-raising trick. We let 4&gt; be a constituent of <lb/>type &lt; e, t), containing an occurrence of q-proforml, • a <lb/>COMP-OPERATOR, and A z an NP; we define <lb/> Compl (~, A z, ~) to be the phrase formed by substituting <lb/>for q-proformi, and concatenating than/as A 2 to the end, <lb/>and now want to define its denotation. We let e i be a <lb/>parameter ranging over NP denotations, x be a parameter <lb/>ranging over individuals, and A1&apos; be the function XQ.Q(x); if <lb/>we now define ~&quot; to be the formula hcihqi • e i (~&apos;), the <lb/>denotation of Compl(O, A z, ~) is given by yet another <lb/>variant on our basic formula, namely <lb/>Xx.O&quot;(A{,{N I O&quot;(A2&apos;,IN&apos; I ~I,&apos;(N, N&apos;)})}) <lb/>(***) <lb/>Readers who wish to see examples of derivations using the <lb/>three :interpretation schemas defined above may now want <lb/>to turn to Section 3.4; when they have returned, we will <lb/>proceed to describe how our theoretical picture can be <lb/>converted into one that is more readily implementable. <lb/>3.3 A COMPUTATIONAL VERSION <lb/>The analysis we have just presented gives a simple and <lb/>compact formalization of our theory of phrasal compara-<lb/>tives, but it is still not easily implementable as it stands. <lb/>The reasons for this are exactly the same as those applying <lb/>to the original PTQ treatment of scoping phenomena; <lb/>essentially, the rules have insufficient syntactic motivation. <lb/>However, the solution (as far as scoping goes) is by now <lb/>standard, and has been successfully implemented in a <lb/>number of well-known systems (e.g., Pereira 1983; Lesmo <lb/>1985; Grosz et al. 1986; Alshawi et al. 1989); the methodol-<lb/>ogy can originally be traced back to Woods (1978). 6 The <lb/>trick is to split interpretation into two stages, the first <lb/>linked to the syntax and the second to the semantics; <lb/>mediating between these, we have an intermediate level of <lb/>representation, the quasi-logical form. This is produced <lb/>compositionally from the syntax, and then subjected to <lb/>rewriting rules before being converted into the final logical <lb/>form. Normally, these rewriting rules formalize scoping <lb/>transformations; here, we will also use them to describe the <lb/>interpretation of nonclausal comparison. In Section 1.1, we <lb/>

			<page> 92 <lb/></page>

			<note place="footnote">Computational Linguistics Volume 16, Number 2, June 1990 <lb/></note>

			<note place="headnote"> Mammy Rayner and  Amelie Banks <lb/>An Implementable Semantics for Comparative Constructions <lb/></note> 
			
			summarized briefly the basic properties we demanded of <lb/>the QLF level of formalism. We now describe those fea-<lb/>tures that are specially concerned with comparative con-<lb/>structions. <lb/>We start by defining the various kinds of nodes we will <lb/>need in the QLF. These will be the following. <lb/> Node name <lb/>Represents <lb/> c-complement <lb/> Comparative complement. <lb/> c-operator <lb/> Comparative operator. <lb/> c-degree <lb/> Comparative degree; includes the com-<lb/>parative complement and compara-<lb/>tive operator as subnodes. <lb/> q <lb/> Placeholder; the q-proform of the Mon-<lb/>tagovian analysis. <lb/>c <lb/>Placeholdcr; the c-proform of the Mon-<lb/>tagovian analysis. <lb/> comparison <lb/> Corresponds to Comp(&amp;, A l, A 2, ~I,) and <lb/>Compl(~, A z, ~) of the Montagovian <lb/>analysis. The part of the tree under <lb/>the node corresponds to cI,. The sub-<lb/>nodes are: the &quot;contrasted material&quot; <lb/>(An), the comparative complement <lb/>(A2), the comparative operator (~&apos;), <lb/>and pointers to the relevant q and c <lb/>nodes (qi, ci) <lb/>The fundamental idea should be fairly easy to grasp, if the <lb/>reader has understood the previous section; the QLF is <lb/>successively transformed through a number of stages, until <lb/>it is in a form consonant with the Montagovian analysis of <lb/>Section 3.2. We go through the stages in turn, illustrating <lb/>each of them schematically; in Sections 3.4.1 and 3.4.2, we <lb/>give examples of their application. <lb/>(Stage 0) In the original QLF, the comparative comple-<lb/>ment and comparative operator turn up as  c-complement <lb/> and c-operator nodes, modifying the c-degree node repre-<lb/>senting the comparative degree; the c-complement is not yet <lb/>associated with the constituent it is contrasted against (see <lb/>Figure 1). <lb/>(Stage  1)  Rewriting rules replace the c-degree with a q <lb/>placeholder, and save the  c-complement, c-operator,  and <lb/>associated q in a separate location; we call this the &quot;compar-<lb/>ative store,&quot; by analogy with Cooper&apos;s &quot;quantifier store&quot; <lb/>(Figure 2; Cooper 1983; Engdahl 1985). <lb/>(Stage 2) The contents of the &quot;store&quot; are moved upwards <lb/>in the tree; at each higher node N, attempt to do one of i), <lb/>ii) or iii). (The second and third alternatives are special <lb/>cases) (Figure 3). <lb/>I <lb/>c-degree <lb/>I <lb/>[ c-operator I I c-complement [ <lb/>Figure I Original QLF <lb/> I <lb/> H <lb/>I <lb/>I <lb/> comparative <lb/>store <lb/>c-complement ] <lb/>c-operator  [ <lb/> Figure 2An item is placed in the &quot;store&quot; <lb/>i) Find a suitable constituent below N to contrast the <lb/> c-complement  against. If such a constituent is found, <lb/>replace it by a c placeholder, and insert a  comparison <lb/> node in the tree above N. The  comparison  node is <lb/>constructed from the following components: the c-com-<lb/>plement, the contrasted constituent, the  c-operator, <lb/> and the q and c placeholders. <lb/>ii) (This is to deal with the third schema from Section 3.2) <lb/>If N is an abstraction node (representing a constituent <lb/>of type (e, t)), insert a c node above N, a  comparison <lb/> I -om &apos;emeot I <lb/> H <lb/> comparison <lb/>I <lb/> contra$t <lb/> c-complement <lb/> [ c-operator I <lb/> [ <lb/> Habstracti°n H c°mparis°n ~abstracti°n ~ <lb/> ~1 <lb/>I ~ x ~ <lb/> Figure 3 (a) A node has been located, which can <lb/>serve as a contrast to the comparative <lb/>complement. (b) The contrast node is replaced <lb/>with a c placeholder, and a comparison node is <lb/>inserted. (c) Special case for third schema in 3.2. <lb/>

			<note place="footnote"> Computational Linguistics Volume 16, Number 2, June 1990 <lb/></note>

			<page>93 <lb/></page>

			<note place="headnote">Manny Rayner and Amelie Banks <lb/>An Implementable Semantics for Comparative Constructions <lb/></note> 
			
			node above the c, and a further  abstraction  node above <lb/>that. The comparison node is constructed from the <lb/>c-complement, c-operator, c and q; the &quot;contrast&quot; com-<lb/>ponent is that corresponding to a pronoun with associ-<lb/>ated variable x, where x is the abstracted variable in <lb/>the new abstraction node. <lb/>iii) (See Section 3.4.3) If N is a constituent of type t or <lb/>(e, t), and e-complement is an S-OPERATOR, insert <lb/>an s-operator node above N, and a comparison node <lb/>above that; the body of the s-operator node will be a c <lb/>placeholder. The comparison node has the same struc-<lb/>ture as that in case i), except that the &quot;contrasted <lb/>material&quot; slot contains the special value it-is-true-that. <lb/>(Stage 3) The tree is now in a form where the Montagovian <lb/>analysis can be used directly; one of the formulas (*), (**), <lb/>or (***) is applied to yield the logical form, the choice <lb/>depending on which alternative was chosen in the preced-<lb/>ing step. In the final stage, the portion of the QLF under the <lb/>comparison node is duplicated twice, and the q and c <lb/>placeholders instantiated in each copy in an appropriate <lb/>manner (see Figure 4). <lb/>3.4. APPLICATIONS OF THE THEORY <lb/>3.4.1 NP-AND PP-COMPARATIVES <lb/>Phrasal comparative constructions in which the compara-<lb/>tive clause is an NP or PP appear to have fundamentally <lb/>the same structure, and we shall consequently consider <lb/>them under one heading. We will present a typical exam-<lb/>ple, first using the Montagovian framework, and then <lb/>reworking it in the computational one. <lb/>The following table represents a semantic derivation for <lb/>the sentence each woman received more roses from toronto <lb/> than  from london; we will analyze this as being composed of <lb/>the subject each woman, and the comparative VP received <lb/>more roses  from toronto than from london. We  will use an <lb/>instance of the second schema from 3.2, with COMPLEMENT <lb/>equal to PP, and accordingly write c-proform i as from-<lb/>there I. Received will be treated as a verb taking three argu-<lb/>ments, with received&apos;(x, y, z) interpreted as &quot;x received y <lb/>from z.&quot; For example, {16}(hr.rose&apos;(r)&amp; ted&apos;(r), ~ r.received&apos; <lb/> (amelie&apos;, r, toronto&apos;))  will correspond to amelie received 16 <lb/> red  roses from toronto, and (no&apos;(rose&apos;, ~r.received&apos;(amelie&apos;, <lb/>r, graham&apos;)) will correspond to amelie received no roses from <lb/> graham. 7  (see Table 1). <lb/> H e°mpari&apos;°n H s&apos;°perat°r H <lb/> I <lb/> , ti str&apos; , ethat ? <lb/> I c-complement <lb/>c-operator <lb/> W <lb/> Figure 4 Special case for 3.4.3. <lb/>Table 1. Montagovian Analysis of Contrasted PPs <lb/>1. each woman <lb/>2. from  toronto <lb/> 3. from london <lb/> 4. q-l)roform I  roses <lb/>5. received <lb/>6. from-there~ <lb/> 7. received from-therei <lb/>8. received q-proform I <lb/> roses from-there 1. <lb/>9. more <lb/> 10.  rec.eived more roses <lb/> from toronto than from <lb/> london <lb/> 11. each  woman received <lb/>more roses from  toronto <lb/>than from london <lb/> XP.each&apos;(woman&apos;,P) <lb/>hP.P(toronto&apos;) <lb/>hP.P(london&apos;) <lb/>hP.ql(rose&apos;,P) <lb/>Xx~y~,z.received&apos;(x,y,z) <lb/>11 <lb/>Xx~y.ll (hz.received&apos;(x,y,z)) <lb/>;~x.ql(rose&apos;,hy.1 l(hz.received&apos; <lb/> (x,y,z))) <lb/> ;~x~y.more&apos;(x,y) <lb/>Xx.{N I {N&apos; I more&apos;(N,N&apos;)} <lb/>(rose&apos;Ay.received&apos;(x,y,london&apos;)) } <lb/>(rose&apos;,;~y.received&apos;(x,y,toronto&apos;)) <lb/>each&apos;(woman&apos;Ax.{N I <lb/>{N&apos; I more&apos;(N,N&apos;)}(rose&apos;, <lb/>hy.received&apos;(x,y,london&apos;) ) } <lb/>(rose&apos;,Xy.received&apos;(x,y, <lb/>toronto&apos;))) <lb/>*Remember that since q~ is a variable ranging over determiner <lb/>denotations it takes two arguments, which should both be of the <lb/>type (e,l~). Similarly, 1~ (an NP denotation) takes a single <lb/>argument of the same type. <lb/>Figure 5 presents in outline the analysis of the same <lb/>sentence: in the computational framework of Section 3.3, <lb/>and should be compared with Figs. 1-4. <lb/> 3.4.2 CN  COMPARATIVES <lb/>Comparative constructions of the type illustrated in 17a) <lb/>have been the object of considerable controversy. The <lb/>orthodoJ~ position was that they were &quot;parallel&quot; construc-<lb/>tions: 17a) would thus be a reduced form of 17b). <lb/>17a) More women than men read &quot;Playgirl.&quot; <lb/>17b) More women read &quot;Playgirl&quot; than men read <lb/>&quot;Playgirl.&quot; <lb/>Pinkham, as we have already mentioned, gives good rea-<lb/>sons for supposing that this is not the ease, and that the <lb/>construction is in base generated phrasal (pp. 121-123). <lb/>We now show how her analysis can be recast in our <lb/>framework: once again, we present our derivation first in <lb/>terms of Montague grammar and then in the computa-<lb/>tional version. <lb/>In Montague grammar, we instantiate the first schema <lb/>from Section 3.2, this time with COMPLEMENT equal to CN; <lb/>in the interests of readability we write c-proform t as  of-that-<lb/>kind i.  The derivation appears in Table 2. <lb/>The corresponding treatment in the computational frame-<lb/>work is another direct application of the method from <lb/>Section 13.3, and appears in Figure 6. <lb/>3.4.3 &quot;S-OPERATOR&quot; AND &quot;V-P-OPERATOR&quot; <lb/>COMPARATIVES <lb/>Our next type of construction is illustrated in 18a), 18b) <lb/>and 18c). <lb/>18a) Mary had more friends than  John had expected. <lb/> 
			
			<page>94 <lb/></page>
			
			<note place="footnote">Computational Linguistics Volume 16, Number 2, June 1990 <lb/></note>

			<note place="headnote"> Mmnmy Rayner and Amelie Bank~ <lb/>An Implementable Semantics for Comparative Constructions <lb/></note>

			Tree-rewriting analysla of PP con~asting <lb/>I &quot;each woman&quot; ~from <lb/>Toronto&quot; ~ <lb/> Original QLF <lb/> I <lb/> I <lb/> comp . vo <lb/>I <lb/> store <lb/> L~ <lb/> comparative I&quot;f~L°~, °n&quot; l ~&apos; <lb/>l <lb/> store <lb/> A suitable contrast is found for the comparative complement. <lb/> &quot;from Toronto&quot; <lb/>&quot;from London&quot; <lb/> Figure 5 Tree-rewriting analysis of PP-cxmtrasting <lb/>18b) Most people ate more biscuits than Mary said. <lb/> 18e) John&apos;s yacht was longer than I thought. <lb/> To handle examples like these within our framework, we <lb/>need a syntactic representation that does not involve ellip-<lb/>sis. Our solution is to introduce a syntactic constituent that <lb/>we call an S-OPERATOR: by this, we mean a constituent <lb/>of the form S/S-COMP, that is to say, a clause with a <lb/> Table  2. Montagovian Analysis of CN Comparative <lb/> 1. woman <lb/> 2. mall <lb/> 3. &quot;Playgirl&quot; <lb/>4. read &quot;Playgirl&quot; <lb/>5. q-proform~ of-that-<lb/>kind1 <lb/>6. q-proforml of-that-<lb/>kind ! read &quot;Playgiri&quot; <lb/>7. more women than men <lb/>read &quot;Playgirl&quot; <lb/> woman&apos; <lb/>man&apos; <lb/>~,Q.Q(playgirl&apos;) <lb/>kx.read(x,playgirl&apos;) <lb/>~,Q.q~(I~,Q) <lb/>ql(llAx.read(x,playgirl&apos;)) <lb/>{NI {N&apos; I more&apos;(N,N&apos;)} <lb/>(man&apos;Ax.read(x,playgirl&apos;))} <lb/>(woman&apos;,Xx.read <lb/>(x,playgirl&apos;)) <lb/> [(reads(x,y) is to be understood as &quot;x habitually reads y&quot;)] <lb/> Tree-rewriting analysis of CN contrasting <lb/> Original QLF <lb/> comp tivol 17n <lb/> store <lb/> The comparative complement and operator have been placed in the &quot;store&quot; <lb/> comparat i Vest ore I~ <lb/> &quot;Playgirr&apos; <lb/> A suitable contrast is found for the comparative complement. <lb/> I &quot;women&quot; <lb/>&quot;ll~n&quot; <lb/> Figure  6 Tree re-writing analysis of <lb/>CN-~ntrasting <lb/>missing sentential complement. The italicized portions of <lb/>the sentences above are accordingly deemed to be S-<lb/>OPERATORs, and the contrast is with an implicit trivial <lb/>S-OPERATOR that we can write as (it is true that). Note <lb/>that there is an unbounded dependency here between the S <lb/>and its missing constituent; we say a little more about this <lb/>in Section 3.5. <lb/>An example in the Montagovian framework is shown <lb/>below; we use the second schema from Section 3.2, with <lb/>COMPLEMENT instantiated to S-OPERATOR, and write <lb/> c-proform i  as attitude l. There are in fact two tricky techni-<lb/>cal points here, which we are forced by space limitations to <lb/>gloss over. <lb/>First, we are assuming that it is possible when introduc-<lb/>ing complex categories of the form A/B to derive the <lb/>associated semantic rule from those for the component <lb/>categories A and B. Since it is at any rate fairly obvious in <lb/>the present case that this is feasible (that is, that we can <lb/>justify the semantic value of the phrase mary said), we shall <lb/>

			<note place="headnote">Computational Linguistics Volume 16, Number 2, June 1990 <lb/></note>

			<page>95 <lb/></page>

			<note place="footnote">Manny Rayner and Amelie Banks <lb/>An Implementable Semantics for Comparative Constructions <lb/></note> 
			
			not discuss the matter further. Second, we allow applica-<lb/>tion of the denotation of an S-OPERATOR to the denota-<lb/>tion of a VP, which formally is of the wrong type. Here, our <lb/>reasoning is that since an S-OPERATOR denotes a func-<lb/>tion a from propositions to propositions, it will naturally <lb/>induce a function a&apos;: Xx.P(x)---~ Xx.a(P(x)) from VP-<lb/>denotations to VP-denotations; we will identify a and a&apos; <lb/>(see Table 3). <lb/>It is interesting to see that Krifka independently arrives <lb/>at exactly the same conclusion; he writes our &quot;it is true <lb/>that&quot; as the operator FAKT, and for example analyses <lb/>19a) below as 19b): <lb/>19a) Anna ist reicher als Otto glaubt. <lb/>Anna is richer than Otto thinks. <lb/>19b) KOMP(FAKT,Otto glaubt,Xd.[Anna ist d-reich] <lb/>Analogously with the &quot;S-OPERATOR&quot; introduced above, <lb/>we can also define a &quot;VP-OPERATOR&quot; to be a constituent <lb/>of the syntactic category S/VP, i.e. something that can <lb/>combine with a VP complement to yield an S; note that this <lb/>includes subject NPs. We can then give a similar account <lb/>for sentences like those illustrated in 20a) to c): <lb/>20a) Mary opened more bottles than John told her to. <lb/> 20b) Mary scored more points than I normally can. <lb/> 20c) Mary needs to get a better result than she&apos;s so far <lb/>managed. <lb/> We sketch a Montagovian derivation for the first of these: <lb/>here we use the first schema from 3.2, this time with <lb/>COMPLEMENT instantiated to VP-OPERATOR. Note that <lb/>we give mary wide scope over the whole sentence, so as to <lb/>get the pronoun bindings right (see Table 4). <lb/>Readers who wish to understand the implementation <lb/>details for the computational version are referred to the <lb/>relevant program code in Appendix 2. Parse-tree and logi-<lb/>cal forms are given in example sentence 8 in Appendix 3. <lb/> 3.4.4 CONTRASTING INSIDE ADJECTIVAL AND <lb/>ADVERBIAL PHRASES <lb/> So far, all the examples of contrastive comparatives that we <lb/>have shown have involved using one of our two schema to <lb/> Table  3. Montagovian Analysis of &quot;S-OPERATOR&quot; <lb/>Comparative <lb/> 1. most people <lb/>2. mary said <lb/>3. (it is true that) <lb/>4. ate <lb/>5. ate so-many I biscuits <lb/>6. attitude~ ate so-many~ <lb/>biscuits <lb/>7. (it is true that) ate more <lb/>biscuits than Mary said <lb/>8. most people ate more <lb/>biscuits than Mary said <lb/> XQ.most&apos;(person&apos;,Q) <lb/>XQ.said&apos;(mary&apos;,Q) <lb/>XQ.Q <lb/>XxXy.ate&apos;(x,y) <lb/>hx.(ql (biscuit&apos;,Xy.ate&apos;(x,y))) <lb/>a~ (Xx.(q~ (biscuit&apos;,Xy.ate&apos;(x,y)))) <lb/>Xx.{N I said&apos;(mary&apos;,{N&apos; I more&apos; <lb/>(N,N&apos;)}(biscuit&apos;,Xy.ate&apos;(x,y))} <lb/>(biscuit&apos;,Xy.ate&apos;(x,y))) <lb/>most&apos;(person&apos;,Xx.{said&apos;(mary&apos;, <lb/>{N&apos; I more&apos;(N,N&apos;)} <lb/>(biscuit&apos;,Xy.ate&apos;(x,y)) } <lb/>(biscuit&apos;,Xy.ate&apos;(x,y)))) <lb/> Table  4. Montagovian Analysis of &quot;VP-OPERATOR&quot; <lb/>Comparative <lb/>1. nmry <lb/>XQ.Q(mary&apos;) <lb/>2. h e~ <lb/>XQ.Q(x~) <lb/>3. john told  he I to <lb/> kQ.told&apos;(john&apos;,xl,Q(x0) <lb/> 4. opened so-many I bottles  kx.(q~(bottle&apos;,Xy.opened&apos;(x,y))) <lb/>5. vp-ap I  opened so-many I  cl(Xx.(ql(bottle&apos;,Xy.opened&apos;(x,y)))) <lb/> bottles <lb/>6. he I opened more bottles {N I told&apos;(john&apos;,xl,{N&apos; I more&apos;(N,N&apos;)} <lb/>than john told he~ to <lb/> (bottle&apos;,ky.opened&apos;(Xl,y))))} <lb/>(bottle&apos;,ky.opened&apos;(x~,y)) <lb/> 7. mary opened more hot- {N I told&apos;(john&apos;,mary&apos;,{N&apos; I more&apos; <lb/> ties than john told her to (N,N&apos;)}(bottle&apos;,Xy.opened&apos; <lb/> (mary,y))))} <lb/>(bottle&apos;,Xy.opened&apos; <lb/>(mary,y)) <lb/>construct a phrase that is either an S or a VP. In this <lb/>sectior:, we will consider sentences where the contrasting <lb/>operation is used internally within adverbial and adjectival <lb/>phrases: Pinkham quotes constructions of this kind as some <lb/>of the clearest instances of phrasal comparatives. We start <lb/>in 21)--23) by giving some typical examples; 21) and 22) <lb/>are taken from Pinkham (1985). <lb/>21) A man taller than John was chosen for the team. <lb/>22) He ran faster than the world record. <lb/> 23) John needs a spanner bigger than the No. 4. <lb/> In each of these sentences, contrasting appears to occur <lb/>within the italicized phrase; in 21), John need not have <lb/>been chosen for the team, in 22) the world record certainly <lb/>cannol run, and in 23) John presumably does not need the <lb/>No. ,4. We would, however, derive all these conclusions if <lb/>contrasting were at VP or clausal level, since we would then <lb/>copy t]:e verb. <lb/>In accordance with Pinkham&apos;s suggestions, our approach <lb/>will rather be to use a direct interpretation method based <lb/>on predicate copying; we will in fact use the third schema <lb/>from Section 3.2, defined by formula (***). This applies in <lb/>a straightforward fashion to adjectival constructions like <lb/>those i.n 21) and 23). Pinkham notes that a similar treat-<lb/>ment is also possible for sentences like 22) if we take fast to <lb/>be a predicate applying to the &quot;running&quot; event, although <lb/>we imagine that some people may find this move unattrac-<lb/>tive. <lb/>In &apos;Fable 5, we present a sketch of a Montagovian <lb/>analysis for 21). Note that &quot;Q tall&quot; will be represented as <lb/>Xx.tall(x, Q), where Q is a generalized determiner, and that <lb/>formula (***) is used when deriving 5 from 3 and 4. <lb/> 3.4.5 CONTRASTED PREPOSITIONS <lb/> The types of contrastive comparatives described in Sections <lb/>3.4.1 1:o 3.4.4 appear to account for the vast majority of <lb/>those that occur in practice) There are also a few rare <lb/>cases, one of which we here touch on briefly. As a final <lb/>example, we consider the case of contrasted prepositions, as <lb/>shown in 24) below. 9 <lb/>24) There are more points for the proposal than against. <lb/> 
			
			<page>96 <lb/></page>
			
			<note place="footnote">Computational Linguistics Volume 16, Number 2, June 1990 <lb/></note>

			<note place="headnote"> Manny Rayner and Amelie Banks <lb/>An lmplementable Semantics for Comparative Constructions <lb/></note>

			Table  5. Montagovian Analysis of Contrasting in AP <lb/> 2. player <lb/>3. john <lb/>4. q-proform I tall <lb/>5. taller than john <lb/> 1.  was chosen for the team  was-chosen&apos; <lb/>player&apos; <lb/>XQ.Q(john&apos;) <lb/>hx.tall&apos;(x,ql) <lb/>hx.tall&apos;(x,{D I tall&apos;( john, <lb/>{D&apos; I more&apos;(D,D&apos;)})}) <lb/>6.  player taller than john  hx.player&apos;(x)&amp;tall&apos;(x,{D I tall&apos; <lb/> ( john,{O&apos; l more&apos;(D,D&apos;)})}) <lb/> 7. a  player taller than john  XQ.a&apos;(hx.player&apos;(x)&amp;tall&apos;(x,{D I tall&apos; <lb/>( john,{D&apos; I more&apos;(D,D&apos;)})}),Q) <lb/>8. a  player taller than john  a&apos;(Xx.playcr&apos;(x)&amp;tall&apos;(x,{D  I tall&apos; <lb/> was chosen for the team <lb/> ( john,{D&apos; I more&apos;(D,D&apos;)})}), <lb/>was-chosen&apos;) <lb/>These can be treated in a completely straightforward man-<lb/>ner in the computational version from Section 3.3; the key <lb/>step will be the replacement of the ARG-TYPE field of a <lb/>suitable NP denotation with a C-placeholder. A Montagov-<lb/>ian treatment of the construction is of course somewhat <lb/>problematic with the framework we have so far adopted, <lb/>since there is no sensible way to quantify over ARG-TYPE <lb/>of anything similar; some people may see in this fact an <lb/>argument against Montagovian formalisms. (Parse-tree <lb/>and logical form in example sentence 12 in Appendix 3). <lb/> 3.4.6 AMBIGUITIES IN CONTRASTIVE <lb/>CONSTRUCTIONS <lb/> It is well known that phrasal comparative constructions can <lb/>easily give rise to ambiguities: sentences 25)-27) illustrate <lb/>three typical possibilities. Here, we will discuss how our <lb/>system fares when attempting to explain these. <lb/>25) Nobody talked more to John about Carol than Mary. <lb/>26) Few men give their wives more presents than George <lb/>(does). <lb/>27) John intends to buy more books than Mary. <lb/>We claim that most speakers find all these sentences ambig-<lb/>uous, the first in three ways, and the others in two. The <lb/>simplest case is 25), where we can paraphrase the various <lb/>readings as 25a-c): <lb/>25a) Nobody talked more to John about Carol than Mary <lb/>did. <lb/> (Mary talks a lot to John about Carol.) <lb/> 25b) Nobody talked more to John than to Mary about <lb/>Carol. <lb/> (John is less popular than Mary when people want to <lb/>hold conversations about Carol.) <lb/> 25c) Nobody talked more to John about Carol than they <lb/>did about Mary. <lb/> (Everyone prefers discussing Carol to discussing <lb/>Mary when they talk with John.) <lb/> In terms of the discussion from Section 3.4.1, ambiguity <lb/>arises naturally as a result of the uncertainty concerning <lb/>the identity of the element that &quot;Mary&quot; is intended to be <lb/>compared with. By successively choosing the NPs <lb/>&quot;Nobody,&quot; &quot;John,&quot; or &quot;Carol,&quot; the reader can easily sat-<lb/>isfy herself that each of the readings above can be derived. <lb/>Sentence 26) also appears to be fairly clear: here, the <lb/>distinction is essentially between the &quot;strict&quot; and &quot;sloppy&quot; <lb/>readings, which can be represented as 26a) and 26b). <lb/>26a) Few men give their wives more presents than George <lb/>gives them. <lb/>26b) Few men give their wives more presents than George <lb/>gives his own wife. <lb/>On a Montagovian account, we will get 26a) if the pronoun <lb/> their  is still unbound in the denotation of the VP  give their <lb/>wives q-proform I presents;  if, on the other hand, it is bound <lb/>to the variable representing the subject, we will get 26b). <lb/>The hardest case definitely seems to be sentence 27). <lb/>Here we have at least two readings, which we represent as <lb/>27a) and 27b): <lb/>27a) John intends to buy more books than Mary will buy. <lb/> (John&apos;s plan is that, no matter how many books <lb/>Mary has, he will buy more.) <lb/> 27b) John intends to buy more books than Mary intends to <lb/>buy. <lb/> (John and Mary both plan to buy specific numbers of <lb/>books, that number being in John&apos;s case greater.) <lb/> We can obtain the first of these using formula (***) from <lb/>Section 3.2, as can be seen from the schematic derivation in <lb/>Table 6. <lb/>Unfortunately, there is no very satisfactory way to derive <lb/>the wide scope reading 27b). The problem is that the <lb/>comparative degree will end up in our account with lower <lb/>scope than the modal operatorwants, irrespective of the <lb/>level at which we carry out the contrasting operation; to <lb/>derive 27b), however, it needs to have scope over the whole <lb/>clause. Although one can define an  ad hoc  rule that raises <lb/>the scope of the comparative quantifier, this goes very <lb/>much against the spirit of our treatment; a slightly more <lb/>attractive possibility may be to introduce alternative &quot;wide-<lb/>scope&quot; versions of formulas (*), (**) and (***) from 3.2. <lb/>For example, (*) would become <lb/>3 N,N&apos;.4¢&apos;(A~,{N}) &amp; ~&quot; (A2&apos;,{N&apos;}) &amp; ~&apos;(N,N&apos;) <lb/>The problem is of course to find conditions defining when <lb/>the wide-scope formulas are applicable. One idea might be <lb/> Table  6. &quot;Narrow Scope&quot; Interpretation of Sentence 27 <lb/> 1. buy q-proform I books <lb/>2. buy more books than <lb/>mary <lb/>3. wants to buy more <lb/>books than mary <lb/>4. john wants to buy more <lb/>books than mary <lb/> ~x.ql (book&apos;,~y.buy&apos;(x,y)) <lb/>?,x.{N I {N&apos; I more(N,N&apos;)} <lb/>(book&apos;),y.buy&apos;(mary,y))} <lb/>(book&apos;,Xy.buy&apos;(x,y)) <lb/>~,x.want&apos;(x,{N I {N&apos; I more <lb/>(N,N&apos;)}(book&apos;,Xy.buy&apos;(mary,y))} <lb/>(book&apos;),y.buy&apos;(x,y))) <lb/>want&apos;(john; <lb/>{N [ {N&apos; [ more(N,N&apos;)} <lb/>(book&apos;, Xy.buy&apos;(mary,y))} <lb/>(book&apos;, hy.buy&apos;(x,y))) <lb/>

			<note place="footnote"> Computational Linguistics Volume 16, Number 2, June 1990 <lb/></note>

			<page>97 <lb/></page>

			<note place="headnote">Mammy Rayner and AmeHe Banks <lb/>An Implementable Semantics for Comparative Constructions <lb/></note> 
			
			to allow their use when the comparative occurs in an <lb/>embedded S or VP (as it does here), but the whole topic <lb/>clearly needs more study. <lb/>3.5 IMPLEMENTATION ISSUF~ <lb/>We first discuss the syntactic level; the main implementa-<lb/>tion problems here are caused by various kinds of long-<lb/>range dependencies. Apart from normal &quot;WH-movement&quot; <lb/>dependencies in questions and relative clauses, we have the <lb/>following: <lb/>1. Dependency between comparative head and compara-<lb/>tive complement. Normally, the head is separated from <lb/>its associated complement in surface syntax, even though <lb/>it conceptually forms a constituent with it. <lb/>2. Dependencies associated with missing complements in <lb/>S-and VP-operators, which can be arbitrarily deeply <lb/>nested. These appear to be very similar to WH-<lb/>movement dependencies. <lb/>3. &quot;Verb anaphora&quot; dependencies: as is well known, cer-<lb/>tain verbs (in English  do, be, can,  etc.) can act anaphor-<lb/>ically for verb phrases. We treat a comparative comple-<lb/>ment consisting of an NP together with one of these <lb/>verbs as essentially equivalent with the NP on its own, <lb/>except that it is forced to contrast against an NP which <lb/>is a subject in a clause whose main verb is a suitable <lb/>antecedent. The verbal antecedent relationship also ap-<lb/>pears to lead to an unbounded dependency. <lb/>4. &quot;Quantifier binding&quot; in clausal comparatives; we dis-<lb/>cuss this in Section 4.1. <lb/>All these forms of long-range dependency are handled by <lb/>application of&quot;threading&quot; (Pereira 1983; Kartunnen 1986). <lb/>Properly speaking, each distinct type of dependency ought <lb/>to be associated with a distinct feature, which will be <lb/>present in relevant constituents; by unifying features in <lb/>different constituents against each other, information is <lb/>propagated through the tree. In the XG-grammar in Appen-<lb/>dix 2, we have cheated a little, by using the &quot;extraposition <lb/>list&quot; feature to handle all of 1, 2, and 4 above. Although this <lb/>can potentially lead to problems when dependencies &quot;cross,&quot; <lb/>we felt that the gain in simplicity made this compromise <lb/>worthwhile. It is a simple matter to reorganize the gram-<lb/>mar using different features. <lb/>The semantic part of the grammar follows very closely <lb/>the discussion in Section 3.3. The syntax-tree is first trans-<lb/>formed into QLF form by the predicate syn to qlt/2; the <lb/>QLF is then searched to find potential comparisons. That <lb/>is, it first tries to extract a c-complement and store it, then <lb/>tries to find a suitable contrast and finally constructs the <lb/>comparison node and inserts it. <lb/>4. CLAUSAL COMPARATIVES <lb/>We borrow most of the basic principles in our treatment of <lb/>clausal comparatives from Pinkham. Firstly, just as with <lb/>phrasals, we assume that the comparative clause is nor-<lb/>mally a modifier to a degree expression in the main clause; <lb/>this assumption is also shared by Bresnan, though not by <lb/>Friedrnann, who places the two clauses at the same level. <lb/>Secondly, we assume that the &quot;missing material&quot; in the <lb/>comparative clause is a null degree expression; this may <lb/>possibly occur together with a null copy of the material <lb/>modified by the head degree, which can be an adjective <lb/>(example 29), an adverb (30), or a CN (31, 32). If the head <lb/>degree is modifying an adjective in nonpredicate position, <lb/>then it is obligatory to copy the CN (32). This idea is more <lb/>or less borrowed from the discussion in Pinkham (pp. <lb/>33-40). Adapting Pinkham&apos;s notation slightly, we write a <lb/>null degree as Q, a null adjective or adverb as PRO^, and a <lb/>null CN as PROcN. <lb/>Our third principle is that the denotation of the COMP-<lb/>OPERATOR is realized as a relation between the head <lb/>degree and the Q, and appears conjoined with the compara-<lb/>tive clause; this means that the Q originally will have wide <lb/>scope over the clause it occurs in. Examples 28)-32) illus-<lb/>trate our analysis: in each, the first item is the sentence, the <lb/>second a schematic representation of the QLF, and the <lb/>third a schematic representation of the logical form. In the <lb/>QLF,. we enclose the comparative degree expression in <lb/>parentheses. <lb/>28) -lIohn bought more books than Mary bought records. <lb/>28a) John bought (more than Mary bought Q records) <lb/> books. <lb/> 28b) John bought {NIMary bought {N&apos;} records &amp; more <lb/>(N,N&apos;)} books. <lb/>29) .Irohn was happier in London than he was in New York. <lb/>29a) John was (more than he was Q PRO A in New York) <lb/>happy in London. <lb/>29b) John was {Dlhe was {D&apos;} happy in New York &amp; <lb/>more(D,D&apos;)} happy in London. <lb/>30) John runs faster than Mary swims. <lb/>30a) John runs (more than Mary swims Q PROA) fast. <lb/> 30b) John runs  IDI  Mary swims {D&apos;} fast &amp; more (D,D&apos;)} <lb/>fast. <lb/>31) John bought more books than Mary could carry. <lb/>31a) John bought (more than Mary could carry Q PROcN ) <lb/>books. <lb/>31b) John bought {NlMary bought {N&apos;} books &amp; <lb/>more(N,N&apos;)} books. <lb/>32) John bought a more expensive vase than Mary bought. <lb/>32a) John bought a (more expensive than Mary bought Q <lb/>PRO A PROcN) vase. <lb/>32b) John bought a {D I Mary bought a {D&apos;} expensive vase <lb/>&amp; more(D,D&apos;)} expensive vase. <lb/>It is fairly straightforward to implement a scheme of this <lb/>kind in a framework that can handle long-range dependen-<lb/>cies; in Section 4.1, we describe in more detail how this can <lb/>be done. Before doing so, however, we take a brief look at <lb/>the theoretical issues raised by our first and third assump-<lb/>tions. <lb/>With regard to the first assumption, suppose that we <lb/>chose Friedmann&apos;s alternative and allowed the main and <lb/> 
			
			<page>98 <lb/></page>
			
			<note place="footnote">C~,mputational Linguistics Volume 16, Number 2, June 1990 <lb/></note>

			<note place="headnote"> Manny Rayner and AmeHe Banks <lb/>An Implementable Semantics for Comparative Constructions <lb/></note>

			comparative clauses to be parallel. For instance, this Would <lb/>give example 28) above a logical form something like 28c): <lb/>28c) 3 N,N&apos;. John bought N books &amp; Mary bought N&apos; <lb/>records &amp; more(N,N&apos;). <lb/>At first glance, this looks simpler. The problems arise when <lb/>we introduce quantified NPs: thus if we replace  John  with <lb/>something like  no one,  we are obliged to have  more(N,N&apos;) <lb/> within the scope of the quantifier representing the new NP. <lb/>Of course, it is possible to require that such NPs always be <lb/>given wider scope than the whole sentence (which is what <lb/>Friedmann does), but to do so ignores the fact that an NP <lb/>that has higher scope than the NP in which the compara-<lb/>tive degree occurs normally has higher scope than the <lb/>comparative degree as well. Making the comparative clause <lb/>a modifier to the degree is from this point of view a more <lb/>principled solution. <lb/>We now consider our third assumption: what scope should <lb/>the &quot;inner&quot; degree receive, and where should the condition <lb/>linking the two degrees appear? Here, there are at least two <lb/>reasonable choices. Alternative A, which is the one we have <lb/>chosen, is to give the inner degree wide scope over the whole <lb/>comparative clause, and conjoin the condition; alternative <lb/>B is to give the inner degree its &quot;natural&quot; scope in the <lb/>comparative clause, and make the relation between the two <lb/>degrees a condition on it. This would give 28) the logical <lb/>form shown in 28d) below. We marginally prefer A, but the <lb/>issues involved are sufficiently unclear to merit further <lb/>discussion. <lb/>28d) &quot;John bought {NIMary bought {N&apos;lmore(N,N&apos;)} <lb/>records} books. <lb/>The drawback to A is, once again, that quantified NPs can <lb/>cause problems: thus in a sentence like 33) we do not want <lb/>the interpretation 33a) where most Swedes have traveled <lb/>abroad the same number of times. <lb/>33) Sven has visited Japan more times than most Swedes <lb/>have traveled abroad. <lb/>33a) Sven has visited Japan {N[(most Swedes have trav-<lb/>eled abroad N&apos; times) &amp; more(N,N&apos;)} times. <lb/>To get around this, we have to postulate a rule that gives <lb/> most Swedes  wide scope over N&apos;; this is not necessary if we <lb/>choose B, where the natural scoping is 33b): <lb/>33b) Sven has visited Japan {NI (most Swedes have trav-<lb/>eled abroad {N&apos; [ more(N,N&apos;)} times)} times. <lb/>If we are only dealing with extensional sentences, examples <lb/>like 33) would thus make it seem that B was preferable. <lb/>However, serious problems arise with the well-known exam-<lb/>ple 34), due to Russell: <lb/>34) I thought your yacht was longer than it is. <lb/>Here we are more or less forced to choose an interpretation <lb/>that gives the &quot;inner&quot; degree wide scope, i.e. 34a) <lb/>34a) Your yacht is D&apos; long &amp; I thought that your yacht <lb/>was {D [more(D,D&apos;)} long <lb/>If we use alternative A, it is possible to define scoping  rules <lb/> that produce this interpretation. However, this appears to <lb/>be out of the question with alternative B; if the comparative <lb/>clause is given wide scope, the degree comparison <lb/> more(D,D&apos;)  will be outside the scope of D. Although this <lb/>conclusion seems inescapable, we are still somewhat reluc-<lb/>tant to recommend a solution that is motivated entirely by a <lb/>type of example that essentially never occurs in normal <lb/>applications; readers interested in concrete implementation <lb/>may well consider that the practical problems involved in <lb/>formulating suitable scoping rules for alternative A out-<lb/>weigh the theoretical loss of generality. It would appear <lb/>that there is room for further research here: the reader is <lb/>warned that the issues at stake are far from simple,  as <lb/> witness for example, Larson (1988). <lb/>4.1 IMPLEMENTATION ISSUES <lb/>Our proposed treatment of clausal comparatives can be <lb/>implemented fairly simply in a framework that contains a <lb/>mechanism for handling long-range dependencies; the ba-<lb/>sic idea was first described in Klein (1980) in the context of <lb/>an early version of GPSG, although we have modified it <lb/>considerably. As already mentioned in Section 3.5, we will <lb/>assume some kind of gap-threading idea. Pinkham observes <lb/>(p. 81) that Quantifier Binding respects island constraints; <lb/>the most obvious way to ensure this is to propagate it using <lb/>the same mechanism as is used to handle WH-movement. <lb/>A type of dependency we have already seen is that <lb/>between the head of the comparative and the associated <lb/>comparative clause; in this case, the problem is to pass <lb/>rightward the information that a comparative clause is <lb/>being looked for, which will end up as a modifier of a <lb/>comparative degree expression somewhere to its left. Since <lb/>the possible nature of the bound null proforms in the <lb/>comparative clause depends on the structure of the associ-<lb/>ated head, the two types of dependency are interrelated; <lb/>just how, we explain below. We will call the feature associ-<lb/>ated with the first kind of dependency the Q feature, and <lb/>that associated with the second the C_complement fea-<lb/>ture. The values of both of these will as usual be pairs of the <lb/>form (Gaps. in, Gaps_out&gt;. <lb/>Let us now examine in detail how the scheme works. A <lb/>comparative degree expression on a determiner, adjective, <lb/>or adverb causes a non-null value of the C_complement <lb/>feature to move rightwards; that is, a non-null  Gaps_out <lb/> on the degree expression successively gives rise to non-null <lb/>Gaps_in values on other constituents to its right. This <lb/>continues until the C_complement feature is &quot;absorbed&quot; <lb/>by a non-null comparative complement. This will be a <lb/>comparative complementizer, followed by a clause with <lb/>suitable C_gaps features. <lb/>The difficult part of the business is getting the right <lb/>Gaps__in value for the Q feature on the comparative clause; <lb/>in other words, making sure that the type of null proform <lb/>that occurs in the comparative clause is one that matches <lb/>the head of the comparison. To begin with, this means that <lb/>the C_complement feature must contain information about <lb/>the permissible values for the associated Q; the rules for <lb/>

			<note place="headnote"> Computational Linguistics Volume 16, Number 2, June 1990 <lb/></note>

			<page>99 <lb/></page>

			<note place="footnote">Mammy Rayner and Amelie Banks <lb/>An Implementable Semantics for Comparative Constructions <lb/></note> 
			
			comparative degree constituents then need to specify this <lb/>information in a suitable way. The following rules are those <lb/>we have implemented: we write H for the head of the <lb/>comparison and B for the bound null proforms, and enumer-<lb/>ate four separate cases. <lb/>1. If H is a determiner, then B is either <lb/>a) aQ <lb/>b) an NP whose determiner is a Q, and whose CN is a copy <lb/>of the CN in the NP where H occurs. <lb/>2. If H is modifying an adjective A in predicate position, <lb/>then B is a Q modifying a copy of A. <lb/>3. If H is modifying a verbal adverb A, then B is a Q <lb/>modifying a copy of A. <lb/>4. If H is modifying an adjective occurring in prenominal <lb/>position in an NP N, then B is a copy of N, where H has <lb/>been replaced by a Q. <lb/>The rules above are a considerable simplification of <lb/>Pinkham&apos;s, and there are in particular two major omis-<lb/>sions. First, we copy constituents, instead of introducing <lb/>bound proforms of type PRO A and PROcN. This usually <lb/>makes no difference, but becomes significant in sentences <lb/>like 35): if we copy, getting 35a), we do not guarantee that <lb/>the two occurrences of  them  refer to the same set. <lb/>35) John gave me more of them than I managed to eat. <lb/>35a) John gave me more of them than I managed to eat (Q <lb/>many of them). <lb/>Secondly, and more critically for practical purposes, we <lb/>have ignored the important distinction Pinkham draws <lb/>between &quot;narrow-scope&quot; and &quot;wide-scope&quot; clausals (p. <lb/>86-91). This was not done for any principled reason, but <lb/>simply for lack of time; implementing it in a satisfactory <lb/>way is an important part of the planned continuation of our <lb/>research. <lb/> 5 <lb/>OTHER ISSUES <lb/> This concludes our analysis, with the exception of some <lb/>minor points that we have postponed until now in the <lb/>interests of expositional clarity. The first concerns noncoref-<lb/>erence of compared objects, the second the question of <lb/>whether &quot;before&quot; and &quot;after&quot; can be regarded as compara-<lb/>tives. <lb/> 5.1 NONCOREFERENCE OF COMPARED OBJECTS <lb/> Although speaker judgments tend not to be completely <lb/>unanimous, there is a strong tendency to assume that <lb/>comparison is always between different objects. This point <lb/>becomes important when answering questions like 36). <lb/>36) Has any king ruled as long as Gustav V? <lb/>Most people find &quot;Yes&quot; meaning &quot;Yes, Gustav V did&quot; very <lb/>misleading. To correct this, we make a slight adjustment in <lb/>the analysis we have so far been using, so that an appropri-<lb/>ate inequality is added when the logical form is produced <lb/>from the reshaped quant tree. With this alteration 37) may <lb/>be judged true even if John is present, and 38) may <lb/>correctly be said of one of Mary&apos;s articles. <lb/>37) Nobody here has read as many books as John. <lb/>38) Mary has never written an article that is as bad as this <lb/> one. <lb/> 5.2 &quot;BEFORE&quot; AND &quot;AFTER&quot; <lb/> In English, the words  before  and  after  can display several <lb/>of the features associated with comparatives. For example, <lb/>sentences like 39) and 40) would appear to have interpreta-<lb/>tions which could be represented as 39a) and 40a): <lb/>39) John arrived before me. <lb/>39a) .John arrived at a time T, T such that I arrived at a <lb/>time T&apos;, T before T&apos;. <lb/>40) Henry VIII married Anne Boleyn after Catherine of <lb/>Aragon. <lb/>40a) Henry VIII married Anne Boleyn at a time T, T such <lb/>that he married Catherine of Aragon at a time T&apos;, T <lb/>after T&apos;. <lb/>Given examples like these, it is tempting to conclude that <lb/> before  and  after  are the &quot;comparative forms&quot; of adverbials <lb/>that could be represented as &quot;at-early-time&quot; and &quot;at-late-<lb/>time.&quot; (Indeed, we made exactly this proposal in an earlier <lb/>paper). However, it must be noted that, even if this analysis <lb/>is correct, these adverbials would appear to be subject to <lb/>certain :restrictions with regard to the comparative comple-<lb/>ments they can take. For example, examples 41 a)-42a) are <lb/>at best dubious, and should be contrasted with the correct <lb/>41b)-42b): <lb/>41a) *John arrived before I expected. <lb/>41 b) John arrived earlier than I expected. <lb/>42a) ?lVlary left before she needed to. <lb/>42b) Mary left earlier than she needed to. <lb/>It thus seems uncertain whether these words should be <lb/>regarded as a special sort of comparative, or as belonging to <lb/>a separate class of their own. The best way to resolve this <lb/>question might perhaps be to consider cross-linguistic data; <lb/>if it turns out that there are other languages that allow a <lb/>full range of comparative complements to the analoguous <lb/>words, it would presumably make sense to hypothesize that <lb/>this was originally the ease for English, and that the <lb/>missing constructions have simply fallen into disuse. Lack-<lb/>ing at: &apos;the moment any such evidence, we refrain from <lb/>furthe, r speculation on this subject. <lb/>6 DATA FROM CORPUS ANALYSES <lb/>To give our claims concerning relative frequencies of the <lb/>various constructions some substance, we here give the <lb/>results of a small corpus analysis. We took the texts of one <lb/>English and one Swedish novel (Agatha Christie&apos;s...  And <lb/>Then There Were None;  Selma LagerlSf&apos;s  Kejsaren av <lb/>

			<page> 100 <lb/></page>

			<note place="footnote">Computational Linguistics Volume 16, Number 2, June 1990 <lb/></note>

			<note place="headnote">Manny Rayner and AmeUe Banks <lb/>An lmplementable Semantics for Comparative Constructions <lb/></note>
			
			Table  7. Data from Corpus Analysis <lb/>Type of <lb/>No. of <lb/>construction <lb/>examples <lb/>Frequency <lb/> 1. Discourse comparative: <lb/>37 <lb/> 33.9 % <lb/> 2. Clausal: <lb/>7 <lb/> 6.4 % <lb/> 3. Contrastive: <lb/>45 <lb/> 41.3 % <lb/> NP: <lb/> 12 <lb/>11.1% <lb/>NP + &quot; anaphoric verb&quot;: <lb/>4 <lb/>3.7 % <lb/>PP/Adverbial: <lb/>I 0 <lb/>9.1% <lb/>S-operator: <lb/>5 <lb/>&apos;4.6 % <lb/>VP-operator.&quot; <lb/>2 <lb/>1.8 % <lb/>Internal contrasting in AP: <lb/>11 <lb/>10.1% <lb/>Other: <lb/>1 <lb/>0.9 % <lb/> 4. Determiner/Phrasal*: <lb/>6 <lb/> 5.5 % <lb/> 5. Verb of change + comparative*: <lb/>6 <lb/> 5.5% <lb/> 6. lnte  comparative  in att...*: <lb/>4 <lb/> 3.7% <lb/> 7. Other: <lb/>4 <lb/>3.7 % <lb/>Total: <lb/>109 <lb/> *Constructions like &quot;more than two&quot; or &quot;less than half.&quot; <lb/>*Constructions involving verbs like &quot;grow&quot; or &quot;become&quot;  together <lb/> with a comparative, as in &quot;The room grew more cheerful&quot; or &quot;The <lb/>road became harder.&quot; The problems involved in giving a correct <lb/>semantics to such sentences derive in our opinion primarily from <lb/> the  verbs, and not from the comparatives. <lb/>*A construction peculiar to Swedish, as in  Det var inte tyngre i~n <lb/>at__tt han kunde lyfta det.  (Lit: &quot;It was not heavier than that he <lb/>could carry&quot; it&quot;). <lb/> Portugalien),  and manually extracted all sentences contain-<lb/>ing comparatives. The results are summarized in Table 7. <lb/>One striking fact is immediately apparent; the second <lb/>commonest type of construction (No. 1, &quot;discourse <lb/>comparative&quot;) is actually one that we fail to cover! In our <lb/>defense, however, we can at any rate claim that none of the <lb/>other authors we have quoted appear to do so either. By <lb/> discourse comparatives,  we mean here comparatives where <lb/>the associated comparative complement (in English nor-<lb/>mally introduced by &quot;than&quot; or &quot;as&quot;) is completely absent, <lb/>and must be inferred from the context. Typical examples <lb/>(taken from the Agatha Christie novel) follow below in <lb/>sentences 43)-45). <lb/>43) The abandoned creature.., committed a still graver <lb/>sin. <lb/>44) At eight o&apos;clock the wind was blowing more strongly. <lb/>45) I should be colder if I were dead. <lb/>If the discourse comparatives are excluded, however, we <lb/>are clearly capable of dealing with the vast majority of <lb/>those left. Thus we feel fairly well justified in claiming that <lb/>our treatment covers most of the common cases of compar-<lb/>ison that occur in practice. <lb/>  7 SUMMARY AND FURTHER DIRECTIONS <lb/> We have presented a treatment of comparative construc-<lb/>tions that can claim to cover most of the commonly occur-<lb/>ring cases, and is also capable of being implemented in a <lb/> reasonably standard framework. Several of the key ideas <lb/>are adapted from the theoretical work of Pinkham. In <lb/>particular, we divide comparatives into two separate classes, <lb/>clausals and phrasals. Clausals are interpreted by a version <lb/>of Pinkham&apos;s &quot;quantifier binding,&quot; which treats the miss-<lb/>ing material in the comparative clause as null proforms <lb/>bound by the comparative head (Section 4); phrasals are <lb/>interpreted directly, using an adaption of Pinkham&apos;s &quot;dis-<lb/>tributive copying.&quot; The semantics of phrasals are summa-<lb/>rized in the key formulas (*), (**), and (***) from Section <lb/>3.2. <lb/>At the beginning of Section 1, we presented a selection of <lb/>comparative constructions, classified according to a more <lb/>or less traditional approach. Table 8 shows the same exam-<lb/>pies, this time with our classification. <lb/>Particularly in our analysis of contrastive phrasals, we <lb/>have gone to some lengths to describe how the ideas can be <lb/>implemented in a reasonably efficient way. Here, the key <lb/>idea has been to use a level of representation intermediate <lb/>between syntax and logical form, which we call quasi-<lb/>logical form, or QLF. At QLF level, phrasal comparatives <lb/>are linked to their heads, but not to the constituent they are <lb/>contrasted against. Rewriting rules then reshape the QLF <lb/>until it is in a form where the comparative complements are <lb/>at the same level as their &quot;correlates.&quot; We also make use of <lb/>features for defining long-range dependencies. These occur <lb/>in several varieties: the bound null proforms in clausal <lb/>comparatives, the missing sentential and VP complements <lb/>in S-and VP-operators, and finally the comparative comple-<lb/>ments, which in general are separated from their heads in <lb/>surface syntax. <lb/>Weighing up the strengths and weaknesses of our ap-<lb/>proach, it is most natural to compare it with Friedmann&apos;s. <lb/>Since Friedmann gives the comparative degree wide scope <lb/>by default, her system needs extra rewriting rules for <lb/>dealing with quantified NPs, both in the main clause and <lb/>the comparative complement; we have argued that a &quot;nar-<lb/>row scope&quot; default is in general preferable. We have also <lb/>claimed that it is difficult in Friedmann&apos;s syntactically <lb/>oriented approach to give a formulation of the comparative <lb/>deletion rule that will extend to the harder cases. <lb/>However, we have also seen, in Section 3.4.6, that our <lb/>semantics runs into problems when attempting to derive the <lb/>&quot;wide-scope&quot; reading for sentences like 27), where the <lb/>comparative head occurs within the scope of a modal <lb/>operator. Rather than postulate more  ad hoc  rewriting <lb/>rules, we tentatively suggested that there may be alternate <lb/>wide-scope versions of the key formulas from Section 3.2; <lb/>this fits in well with Pinkham&apos;s remarks on wide-and <lb/>narrow-scope clausals, which we refer to at the end of <lb/>Section 4. Further investigation of these issues seems like <lb/>one of the most important items on our agenda for future <lb/>research. <lb/>Another topic that urgently needs study is the interaction <lb/>between comparatives and coordination; in certain cases, <lb/>illustrated in sentences 46)-49), our first impression is that <lb/>problems will occur. Since these obviously depend on the <lb/>

			<note place="footnote">Computational Linguistics Volume 16, Number 2, June 1990 <lb/></note>

			<page>101 <lb/></page>

			<note place="headnote">Mammy Rayner and Amelie Banks <lb/>An Implementable Semantics for Comparative Constructions <lb/></note>
			
			Table 8.  Typical Examples of Comparatives: Our Classification <lb/> Clausal comparatives <lb/> 1) Mary was happier in New York than John was in London. <lb/>2) John has more books than Mary has newspapers. <lb/>3) The table is longer than it is wide. <lb/> Contrastive phrasal comparatives <lb/> 4) John is taller than Mary. <lb/>5) Few people run as fast as John. <lb/>6) John bought more books than Mary. <lb/>7) John was happier in New York than in <lb/>London. <lb/>8) Mary had more friends than John thought. <lb/>9) John hit Mary harder than he meant to. <lb/>10) More men than women bought the book. <lb/>11) More people vote~l for the proposal than <lb/>against. <lb/>12) Mary needs a larger car than this Fiat. <lb/>13) John ran faster than the world record. <lb/> NP contrasting, adjective <lb/>NP contrasting, adverbial <lb/>NP contrasting, determiner <lb/>PP contrasting <lb/>S-operator contrasting <lb/>VP-operator contrasting <lb/>CN contrasting <lb/>Preposition contrasting <lb/>Internal contrasting in AP <lb/>Internal contrasting in adverbial <lb/>Determiner/phrasal <lb/> 14) More than 50 people signed the petition. <lb/> Unclear cases: possibly contrastive phrasals <lb/> 15) John was born in the same city as Mary. <lb/>16) John arrived before Mary. <lb/>17) John likes Mary&apos;s house better than Mary John&apos;s. <lb/>way in which we intend to handle coordination, we post-<lb/>pone discussion to a later paper. <lb/>46) No one could have a safer and more promising future <lb/>than John. <lb/>47) Mary is more attractive than Jane and Sarah. <lb/>48) John visits the U.S. more often than Mary, but less <lb/>frequently than Carol. <lb/>49) The results were better than John claimed, but worse <lb/>than we had hoped. <lb/>Several other open questions also deserve mention. We <lb/>have not been very specific in giving rules about where <lb/>comparative complements may occur, and our treatment of <lb/>phrasal contrastives also appear to allow more readings <lb/>than really exist. It would certainly be desirable to find <lb/>rules to eliminate these, or at least heuristics to say which <lb/>readings can be regarded as unlikely. Another interesting <lb/>question is whether it is possible to make the theory more <lb/>compact, by collapsing the three formulas (*), (**), and <lb/>(***) into one; they are so similar that this seems intu-<lb/>itively quite feasible. We speculate that one may be able to <lb/>do this in a framework like that described in Pereira and <lb/>Pollack (1988), which allows conditional interpretation. <lb/>Finally, we say a few more words about the &quot;discourse <lb/>comparatives&quot; mentioned in Section 6. A cursory examina-<lb/>tion of the example sentences would suggest that most of <lb/>the missing comparative complements are of one of the <lb/>following: &quot;than previously,&quot; &quot;than the one just mentioned,&quot; <lb/>or &quot;than is the case.&quot; For example, taking another look at <lb/>sentences 43)-45), we can postulate that the complement is <lb/>as given below in italics. <lb/>43) The abandoned creature ... committed a still graver <lb/>sin  (than the one just mentioned). <lb/> 44) At eight o&apos;clock the wind was blowing more strongly <lb/> (than previously). <lb/> 45) I should be colder  (than is the case)  if I were dead. <lb/>To fill in these missing complements, it as usual seems clear <lb/>that pragmatic information is needed; researchers working <lb/>in discourse theory may find these problems worth investi-<lb/>gating:. <lb/>
		
		</body>
			
		<back>	
			
			<div type="acknowledgement">ACICNOWLEDGMENTS <lb/>We would like to thank the following people: several anonymous referees, <lb/>for insighl:ful criticism of earlier versions of this paper; James Allen, Jerry <lb/>Hobbs, Fernando Pereira and Remko Scha for useful comments and <lb/>general encouragement; and, last but not least, Rune Gustavsson and <lb/>Siwert Sundstrtim for helpfulness and flexibility with regard to financing <lb/>our research. <lb/></div>

			<listBibl>REFERENCES <lb/>Alshawi, H.; Carter, D. M.; van Eijck, J.; Moore, R. C.; Moran, D. B.; <lb/>Pereira, F. N. C.; Puiman, S. G.; and Smith, A. G. 1989.  Research <lb/>Program in Natural Language Processing: Final Report,  SRI Techni-<lb/>cal Report. <lb/>Ballard,, B. 1989. A General Computational Treatment of Comparatives <lb/>for Natural Language Question Answering.  Prec. 26th ACL,  41-48. <lb/>Banks, A 1986. Modifiers in Natural Language. B.A. Thesis, Uppsala <lb/>Univer,,~ity. <lb/>Banks, A. and Rayner, M. 1987. Comparatives in Logic Grammars--Two <lb/>Viewpoints.  Proceedings of the 2nd International Workshop on Natu-<lb/>ral l~nguage Understanding and Logic Programming. <lb/> 
			
			<page>102 <lb/></page>
			
			<note place="footnote">Computational Linguistics Volume 16, Number 2, June 1990 <lb/></note> 
			
			<note place="headnote">Manny Rayner and AmeHe Banks <lb/>An Implementable Semantics for Comparative Constructions <lb/></note> 
			
			Barwise, J. and Cooper, R. 1981. Generalized Quantifiers and Natural <lb/>Language.  Linguistics and Philosophy.  4:159-219. <lb/>Bowen, J. and Carvaiho, A. 1988. A Logic Grammar Formalism for <lb/>Pronoun Endophora. Unpublished manuscript. <lb/>Bresnan, J. 1973. Syntax of the Comparative Clause Construction in <lb/>English.  Linguistic Inquiry  4:275-343. <lb/>Cooper, R. 1983.  Quantification and Syntactic Theory.  D. Reidel, <lb/>Dordrecht, Holland. <lb/>Dahl, D.; Dowding, J.; Hirschman, L.; Lang, F.; Linebarger, M.; Palmer, <lb/>M.; Passonneau, R.; and Riley, L. 1989.  Integrating Syntax, Seman-<lb/>tics, and Discourse: DARPA Natural Language Understanding Pro-<lb/>gram.  R&amp;D Status Report, Paoli Research Center, Unisys Defense <lb/>Systems. <lb/>Dowty, D.; Wall, R. E.; and Peters, S. 1982.  Introduction to Montague <lb/>Semantics.  D. Reidel, Dordrecht, Holland. <lb/>Engdahl, E. 1985.  Constituent Questions.  D. Reidel. <lb/>Fenstad, J. E.; Halvorsen, P. K.; Langholm, T.; and van Bentham, J. 1987. <lb/> Situations, Language and  Logic. D. Reidel, Dordrecht, Holland. <lb/>Friedmann, C. 1989. A General Computational Treatment of the Compar-<lb/>ative. In  Proc. 27th ACL.  161-168. <lb/>Grosz, B.; Appelt, D. E.; Martin, P. A.; and Pereira, F. C N. 1987. <lb/>TEAM: An Experiment in the Design of Transportable Natural-<lb/>Language Inferfaces.  Artificial Intelligence  32(2):173-244. <lb/>Hankamer, J. 1971. Why There Are Two &quot;than&quot; &apos;s in English. CLS <lb/>9:179-192. <lb/>Heim, I. 1985.  Notes on Comparatives and Related Matters.  Unpub-<lb/>lished manuscript. <lb/>Hobbs, J.; Stickel, M.; Martin, P.; and Edwards, D. 1988. Interpretation <lb/>as Abduction.  Proc. 26th ACL,  95-103. <lb/>Kartunnen, L. 1986. D-PATR: A Development Environment for Unifica-<lb/>tion-Based Grammars.  Proc. 11 th COL1NG,  74-80. <lb/>Keenan, E. L. and Stavi J. 1986. Natural Language Determiners.  Linguis-<lb/>tics and Philosophy  9:253-325. <lb/>Klein, E. 1980. A Semantics for Positive and Comparative Adjectives. <lb/> Linguistics and Philosophy  4:1-45. <lb/>Klein, E. 1981. The Interpretation of Adjectival, Nominal, and Adverbial <lb/>Comparatives. In: Groenendijk, J.; Janssen, T.; and Stokhof, M. (eds.) <lb/> Formal Methods in the Study of Language.  Mathematical Center <lb/>Tracts, Amsterdam. <lb/>Klein, E. 1982. The Interpretation of Adjective Comparatives.  Journal of <lb/>Linguistics  18:113-136. <lb/>Krifka, M. 1987.  Bemerkung zu Vergleichskonstruktioner.  Unpublished <lb/>manuscript. University of Tgbingen. <lb/>Larson, R. 1988. Scope and Comparatives.  Linguistics and Philosophy <lb/> 11:1-27. <lb/>Lesmo, L. and Torasso, P. 1985. Analysis of Conjunction in a Rule-Based <lb/>Parser.  Proc. 23rd ACL,  180-187. <lb/>McCord, M. C. 1986. Focalizers, the Scoping Problem, and Semantic <lb/>Interpretation Rules in Logic Grammars. In: van Carneghem, M. and <lb/>Warren, D. H. D. (eds.)  Logic Programming and its Applications. <lb/> Ablex, Norwood, N.J. <lb/>McCord, M. C. 1987. Natural Language Processing in Prolog. In: Walker, <lb/>A. (ed.)  Knowledge Systems and Prolog.  Addison-Wesley, Reading, <lb/>MA. <lb/>Montague, R. 1974. The Proper Treatment of Quantification in English. <lb/>In: Thomason, R. (ed.)  Formal Philosophy: Selected Papers of Rich-<lb/>ard Montague.  Yale University Press, New Haven, CT. <lb/>Moran D. B. 1988. Quantifier Scoping in the SRI Core Language Engine. <lb/> Proc. 26th ACI,  33-40. <lb/>Pereira, F. N. C. 1983.  Logic for Natural Language Analysis.  SRI <lb/>Technical Note No 275. <lb/>Pereira, F. N. C. and Pollack, M. E. 1988. An Integrated Framework for <lb/>Semantic and Pragmatic Interpretation.  Proc. 26th ACL,  75-86. <lb/>Pereira, F. N. C. and Shieber, S. 1985.  Prolog and Natural Language <lb/>Understanding.  CSLI lecture notes. <lb/>Pinkham, J. 1985.  The Formation of Comparative Clauses in French and <lb/>English.  Garland Publishing Inc., New York, NY. <lb/> C.  Pollard and I. Sag. 1988.  Information-Based Syntax and Semantics <lb/>CSLI,  University of Chicago Press, Chicago, IL. <lb/>Rayner, M. and Banks, A. 1986. Temporal Relations and Logic Gram-<lb/>mars.  Proc. ECAI-86,  2:9-14. <lb/>Rayner, M. and Banks, A. 1988. Parsing and Interpreting Comparatives. <lb/> Proc. 26th ACL,  49-60. <lb/>Rayner, M. and Banks, A. 1989. An Overview of the SNACK-85 Natural <lb/>Language System. In Plander, V. (ed.)  Proc. 5th Intl. Conference on AI <lb/>and Information-Control Systems of Robots,  North-Holland. <lb/>Woods, W. 1978. Semantics and Quantification in Natural-language <lb/>Question-Answering. In: Yovits, M. (ed.)  Advances in Computers, <lb/> 17:2-64. Academic Press. New York, NY. <lb/></listBibl> 
			
			<div type="annex">NOTES <lb/> 1. Earlier versions of several of the results herein have already been <lb/>published in Banks (1986), Rayner and Banks (1986), Banks and <lb/>Rayner (1987), and Rayner and Banks (1988a; 1988b). Since a <lb/>number of important changes have been made, this report is to be <lb/>taken as superseding all five. <lb/>2. Current address: ZYX Sweden AB, Styrmansg. 6, 114 54 Stockholm. <lb/>3. It appears, for example, that Japanese allows essentially the same <lb/>range of comparative complements, and assigns a parallel semantics <lb/>to them. <lb/>4. We borrow this useful term from the Core Language Engine project <lb/>(Alshawi  et al.  1988; 1989). <lb/>5. Those familiar with Montague semantics will realize that the version <lb/>we are using here is in several respects fairly different from that in <lb/>PTQ. Most important, we more or less completely dispense with the <lb/>mechanisms for dealing with intentionality; since this isn&apos;t our con-<lb/>cern here, we feel that it would only confuse the issue. Readers who <lb/>disapprove of these ideas should have no great difficulty in converting <lb/>out derivations into more conventional ones. <lb/>6. There is some disagreement between applied and theoretical linguists <lb/>concerning the correct division of credit here. Although Woods and <lb/>his colleagues were the first people to realize the idea in practice, they <lb/>made no attempt to justify their work in formal terms; this was later <lb/>achieved independently by Cooper (1983), working within the Mon-<lb/>tague grammar school. Our work has to some extent been influenced <lb/>by both of these sources. <lb/>7. Mean bastard. <lb/>8. Excluding &quot;discourse comparatives&quot;: see Sections 6 and 7. <lb/>9. We would like to thank Carol Friedmann for bringing this example to <lb/>our attention. <lb/></div> 
			
			<note place="footnote">Computational Linguistics Volume 16, Number 2, June 1990 <lb/></note>

			<page> lO3 <lb/></page>

			<note place="headnote">Manny Rayner and Amelie Banks <lb/>An Implementable Semantics for Comparative Constructions <lb/></note> 
			
			<div type="annex">APPENDIX  1  TERMINOLOGY <lb/> Comparative Complement:  the constituent introduced by the comparison marker <lb/> Comparative Operator:  expressions like more,  less, twice as much. <lb/>Comparison Marker:  words like  than, as. <lb/>Contrasted Material:  constituent in the main clause against which a phrasal <lb/>comparative complement is compared <lb/> Head of the Comparison:  refers to the comparative degree or determiner in the <lb/> main dause <lb/> Phrasal Comparative:  a comparative complement which is not a comparative <lb/>clause. <lb/> Q:  a null quantifier which is extraposed in the interpretation of clausal <lb/>comparatives. <lb/> APPENDIX 2 PROGRAM CODE <lb/> % The syntactic part of the system, written as an XG-grammar [Pereira 83] <lb/>% Internal XG stuff, used for extraposing constituents. <lb/>open_x_bracket ... close_x_bracket--&gt; <lb/>[]. <lb/>extrapose (s comp (S)) ... s_comp(S) --&gt; [ ] . <lb/>extrapose (vp_comp (Vp)) . . . vp comp (Vp) --&gt; (] . <lb/>extrapose (np (A, B) ) . . . np (np (A,B)) --&gt; [ ) . <lb/>extrapose (det (A)) . . . det (det (A)) --&gt; [] . <lb/>extrapose (adv(A,B)) ... adv(adv(A,B) ) --&gt; [] . <lb/>% Clauses <lb/>question (y_n_q (S) ) --&gt; <lb/>ext raposed_verb, <lb/>s (S). <lb/>question(wh q(s (subject (Subject) ,Vp) ) ) --&gt; <lb/>que stion_np (Subject), <lb/>vp 0rp). <lb/>% Swedish is a verb-second language, so a fronted WHQ forces the <lb/>% next thlng to be a verb. <lb/>question (wh_q (S) ) --&gt; <lb/>ext raposed que st lon_element, <lb/>ext raposed_verb, <lb/>s (S). <lb/>mains(S) --&gt; s(S). <lb/>mains (S) --&gt; <lb/>ext raposed_adv, <lb/>extraposed verb, <lb/>s(S). <lb/>S (S (subject (Subject) ,Vp) ) --&gt; <lb/>np (Subject), <lb/>vp (Vp). <lb/>extraposed_verb ... verb(Verb,Mood, voice, Frame_pattern) --&gt; <lb/>verb (Verb, Mood, Voice, Frame pattern) . <lb/>extraposed_questlon_element <lb/>... np(Question_element) --&gt; <lb/>question_np (Question_element) . <lb/>extraposed_question_element <lb/>... prepositlon(Prep),np(Questlon element) --&gt; <lb/>preposition (Prep), <lb/>question_np (Question_element) . <lb/>extraposed_adv ... adv (Adv) --&gt; <lb/>adv (Adv) . <lb/>% The XG-pre-processor has been modified slightly so as to give a simple <lb/>% transparent treatment Of bound anaphora. (This idea was borrowed from <lb/>% [Bowen &amp; Carvalho 88] ). The foz~m with extra anaphor (Anaphor, Constltuents) <lb/>% means that Constituents are to be parsed with Anaphor available as <lb/>% an anaphorlc referent. This is used to treat verbs in comparative <lb/>% complements llke &quot;do&quot; and &quot;is&quot;, which (we claim, at any rate), refer back <lb/>% to some verbal antecedent, e.g. <lb/>% &quot;Which kings reigned longer than Charles I d/d?&quot; <lb/>vp (vp (re rh. Mood, trace np (Controller), A/gs ) ) --&gt; <lb/>verb (Verb, Mood, Voice, Subcat_pattern), <lb/>with_e Kt=ca_anaphor (verb (Verb,Voice), <lb/>(verb_at ge (Subcat pattern, Axgs, Mods, t race_rip (Controller) ,Voice), <lb/>verb roods (Mods, [ ] ) ) ) . <lb/>% NPs. AS explained in the paper, NP&apos;s consist of a determiner + a CN. <lb/>questioq_a:~tlcle (Article) :-<lb/>member (krtlcle, [which, whlch pl, what,who, how_many (_) ] ) . <lb/>question_rq) (Np) --&gt; <lb/>np (Np), <lb/>{Np = sp (det ( [Article,_, ] ), cn (_, Mods) ), <lb/>(quest iol~_ar ticle (Article) ; <lb/>member (::ole (_, np (det ([Article_l,_,_) ), Cn) ), Mods ), <lb/>quest io]%_article (Article_l)) }. <lb/>np (rip (det ( [Art, Det, Num] ), <lb/>cn (Noun,M~de)) ) --&gt; <lb/>det (det ( [Art, Det, Num] ) ), <lb/>cn (cn (Noun, Mods ), Det, Nmn), <lb/>{ np_const taints (Art, Det, Num) }, <lb/>optio~illy signal_comparative (np (det ( [Art, Det, N~n] ), <lb/>cn (Noun, Mods ) ) ), <lb/>optional._comparand. <lb/>np (name (Ne/~e)) --&gt; name (Name) . <lb/>det (det ( [~.~, Det, Nt~n] ) ) --&gt; <lb/>article (Art, Det, N~) . <lb/>det(det([[],_,_])) --&gt; [). <lb/>cn (cn (Noun, Mods), Det, Num) --&gt; <lb/>optional .adJ (Mods), <lb/>opt ional__noun (MOdS, Noun, Det, N~) . <lb/>% NO undetermined NP&apos;S without articles <lb/>np. const l:aint s (Art, Det, Nt~n ) :-<lb/>dlf (Art, I ] ) • <lb/>np_constraint s ( [ ], det, _) . <lb/>% If there&apos;s an adjective, then we don&apos;t necessarily need a noun. <lb/>optional._noun (Mode, Noun, Det, Ntu,) --&gt; <lb/>noun (Noun, Det, Num). <lb/>optional__noun([AdJ],omitted_noun,_,_) <lb/>--&gt; []. <lb/>% optlonaLlysignal_comparatlve <lb/>propagates <lb/>rightward <lb/>a request <lb/>for a <lb/>comparative complement. <lb/>optionallyslgnal_comparative (X) . . . <lb/>cor~,rl son_signalled (Comp_operator, X, Complement ) --&gt; <lb/>( contain,c:_degree (X, deg (comp ( Ccxnp_operator, complement ) ) ) } . <lb/>optionally signal_comparative (x) --&gt; <lb/>{ \+conta~ ns_degree (X, deg (cc~p (_,) ) ) }. <lb/>containsdegree (det ( [art (_, Degree), _,_] ), Degree) . <lb/>contalns__degree (adJ (_, deg (Degree)), deg (Degree)) . <lb/>contains.degree (adv (_, deg (Degree)), deq (Degree)) . <lb/>contains_.degree (ap_cc~p (Ap), Degree ) :-<lb/>contains_degree (Ap, Degree) . <lb/>contains__de gree (cn (_, Mods), Degree ) :-<lb/>member (Mc d, Mode ), <lb/>containsdegree (Mod, Degree) . <lb/>contains_degree (np (Det, Cn), Degree) : -<lb/>contains_degree (Det, Degree) ; <lb/>contalns degree (Cn, Degree) . <lb/>% This is dlscussed at the end of section 4. <lb/>% If we ~ulve article cc~parlson (&quot;more&quot;, &quot;fewer&quot;), then we can either <lb/>% extrapose an article (&quot;I have more cars than he has motorcycles.&quot;) <lb/>% or a whole hip (&quot;I have more friends in London than he has in New York.&quot;) <lb/>bound_null_pro forms (np (det ( [art (Art, deg (cc~p (_, _) ) ), <lb/>Det, Nu~] ) ,_), <lb/>det ( [q (Q), Det, Num] ), <lb/>q (Q)). <lb/>bound null_~roforms (np (det ( [art (Art, deg (comp (_,_)) ), <lb/>Det, Nun] ), <lb/>cn (Noun,Mods)) , <lb/>np (det ( [q (Q), Det, Nmn] ), <lb/>cn (Noun, Mods ) ) , <lb/>q(Q) ) . <lb/>% If we have prenc~inal adjective comparison, then we have to extrapose <lb/>% a whole b~P. We forl, it by replacing the comparative adjective by a positive <lb/>one. <lb/></div>

			<page> 104 <lb/></page>

			<note place="footnote">Computational Linguistics Volume 16, Number 2, June 1990 <lb/></note>

			<note place="headnote">Mammy Rayner and Amelie Banks <lb/>An Implementable Semantics for Comparative Constructions <lb/></note> 
			
			<div type="annex">bou~d__null pro forms (np (Det, <lb/>cn (Noun, [adJ (AdJ, deg (comp (_,_)) ) ] ) ), <lb/>np (Det, <lb/>cn (Noun, [adJ (AdJ, deg (q (Q)) ) ] ) ), <lb/>q (Q)). <lb/>% If we have predicate adjective comparison, we extrapose a similar adjective. <lb/>bound nul l_pro forms (ap_ccmp (adJ (AdJ, deg (ccmp (_,_)) ) ), <lb/>ap_cc~p (adJ (AdJ, deg (q (Q)) ) ), <lb/>q(Q) ) . <lb/>% With an adverb, a similar adverb is extraposed <lb/>bound__nul i pro forms (adv (Adv, deg (cc~p ( , ) ) ), <lb/>adv (Adv, deg (q (Q)) ) , <lb/>q(Q) ). <lb/>optional_adJ ( [AdJ] ) --&gt; adJ (AdJ) . <lb/>optlonal_adJ ([]) --&gt; [] . <lb/>adJ (adJ (AdJ, [] ) ) --&gt; <lb/>adjective (AdJ) . <lb/>adJ (adJ (AdJ, deg (ccmp (Ccmp_eperator, Complement ) ) ) ) --&gt; <lb/>comparative_adjectlve (AdJ, Comp_operator) . <lb/>%Verb args <lb/>% Each member in the list of arguments to the verb is a term of the form <lb/>% role(Arg_type, Arg_value). See sectionl.2.2 <lb/>%Base case. If we&apos;ve parsed all the frame, we&apos;re finished <lb/>verb_args ( [ ], Mods, Mods, ,_) --&gt; [ ] . <lb/>verb_args ( [Subcat J Rest ], [Argl Next_args], Out_args, Controller, Voice) --&gt; <lb/>verb_arg (Subcat, Arg, Controller,voice), <lb/>verb_args (Re st, Next_args, Out_args, Cont roller, Voice ) . <lb/>verb args ( [agent I Rest_subcat], Next_args,Out args, Controller, passive) --&gt; <lb/>verb_args (Rest subcat ,Next_args, Out__args, Controller,Volce) . <lb/>verb_arg(agent, role(agent,Controller),Controller, active) --&gt; []. <lb/>%With an active verb, we parse an object by parsing an NP <lb/>verb arg (object, role (object, Np) ,_, active) --&gt; <lb/>np (Np). <lb/>%But with a passive verb, the surface subject is the object <lb/>verb arg(obJect, role(obJect,Controller),Controller,passive) --&gt; []. <lb/>verb arg (prep__object (Prep), role (prep_obJect,Np) .... ) --&gt; <lb/>preposition (Prep), <lb/>np (Np) . <lb/>verb arg (relatlonal_object, role (Head, np (Det, cn (person, Mods) ) ), _, active ) --&gt; <lb/>np (np (Det, cn (Head, Mods) ) ) . <lb/>verb_arg (s comp, role (s_cc~p, S) ,, active) --&gt; <lb/>s comp(S). <lb/>verb arg(ap_ccmp, role (ap__co~mp,Ap) ,_,active) --&gt; <lb/>ap comp (Ap) . <lb/>verb arg (inf_comp, role (inf_comp,Vp) ,_,_) --&gt; <lb/>vp_comp (vp). <lb/>s_comp (S) --&gt; <lb/>[att], s (S) . <lb/>vp_ccmp (Vp) --&gt; <lb/>vp (Vp). <lb/>ap_comp (ap_comp (AdJ) ) --&gt; <lb/>adJ (AdJ), <lb/>optlonally_signal_comparative ( ap_comp (AdJ)), <lb/>opt ional comparand. <lb/>% A complement to a comparative. This can only be parsed if we have <lb/>% earlier detected a comparative marker, which has made its presence <lb/>% known by putting a comparativesignalled element on the extraposition <lb/>% llst. <lb/>optional_cc~parand --&gt; <lb/>ccmparlson signal led ( Comp_oper ator, Associated_const it uent, Complement ), <lb/>{ complementizer _for__comp__operator (Cc~p_eperator, Complementizer ) }, <lb/>complementizer (Cc~pl~mentizer), <lb/>compazaund c(xnplelnent (Complementizer,Associated constituent, Complement ) . <lb/>% First case: an NP or PP cc~parand, the simplest (and cormnonest) <lb/>% kind of contrastive comparative: Section 3.4.1. We may have an <lb/>% &quot;anaphoric verb&quot; with an ~, which is going to be available <lb/>% frcm the &quot;verb anaphor stack&quot; (see cc~ments above). <lb/>cc~parand_comple/Bent (Complementizer, _, subject (Np)) --&gt; <lb/>opt ional vad ( Complementl zer ), <lb/>np (Np), <lb/>anaphoric__verb. <lb/>comparand_complement (_, ,Np) --&gt; <lb/>np (Np) . <lb/>comparand complement (_,_,Role) --&gt; <lb/>pp (Role). <lb/>% Second case: CN-ccmparison (section 3.4.2) <lb/>comparand__cc~plement ( .... Cn) --&gt; <lb/>cn (Cn, Det, NUmB ) . <lb/>% Third case: an &quot;S-operator&quot; or &quot;VP-operator&quot; comparand, (section 3.4.3) <lb/>comparand_complement (Complementizer,_, S_operator) --&gt; <lb/>optional_vad (Complementl zer ), <lb/>s_operator (S_operator) . <lb/>comparand complement (Complementizer,_,vp_operator) --&gt; <lb/>optional_vad ( Complementi zer ), <lb/>vp_operator (Vp_operator) . <lb/>s_operator (s_operator (trace_s (Inner_s), S) ) --&gt; <lb/>open x__bracket, <lb/>extrapose (s_cc~p (trace_s (Inner_s)) ), <lb/>S(S), <lb/>close__x_bracket. <lb/>vp_operator (vp_operator (trace_vp (Inner_vp), S) ) --&gt; <lb/>open_x bracket, <lb/>extrapose (vp ccmp (trace_vp (Inner_vp)) ), <lb/>s (S), <lb/>close_x_br acket. <lb/>% Fourth case: contrasted prepositions (section 3.4.5) <lb/>ccmparand_compl~ent (_,_, rolemarker (Prep)) --&gt; <lb/>preposition (Prep) . <lb/>% Fifth case: clausal comparison (section 4) <lb/>comparand_complement (Complementizer,Associated_constituent, Clausal) --&gt; <lb/>opt ional_vad ( CO~plementl zer ), <lb/>clausal comparative (Clausal,Associated constituent) . <lb/>clausal_comparative (clausal (Q, S) ,Associated_constituent) --&gt; <lb/>(bound_null proforms (Assoclated_constltuent, Null_pro forms, Q) ), <lb/>open_x bracket, <lb/>extrapose (Null~roforms), <lb/>s (S), <lb/>close x bracket. <lb/>% Of course, the optional comparand will usually not be present! <lb/>% However, if a comparison has been signalled we have to pick it up somewhere, <lb/>% otherwise it will still be hanging around on the extrapositlon list <lb/>% when we reach the end of the sentence. <lb/>optional_c~nparand--&gt; []. <lb/>% In Swedish, some comparative complements, may be preceded by an optional <lb/>% &quot;vad&quot; (&quot;what&quot;). <lb/>optlonal_vad(than) --&gt; [vad]. <lb/>optlonal_vad(than) --&gt; []. <lb/>optional_vad (Other) --&gt; <lb/>{ dif (Other, than) }. <lb/>% Getting an &quot;anaphorlc verb&quot; -see eon~nents above. <lb/>anaphoric verb --&gt; <lb/>verb (Verb,_, ,_), <lb/>anaphor stack (Potentlal_referents), <lb/>( verb_anaphora antecedent (Verb, Potentialreferents) }. <lb/>verb anaphora_antecedent (Verb, Potential referents ) :-<lb/>member (Ref, Potentialreferents), <lb/>verb_anaphora_mateh (Verb, Re f) . <lb/>verb_anaphora mat ch (Verb, verb (Re f_verb, active ) ) :-<lb/>verb anaphora match 1 (Verb, Ref verb, active ) . <lb/>verb anaphora match (Verb, verb (Ref_verb, passive ) ) :-<lb/>verb anaphora match__l (Verb, Ref_verb,passive) . <lb/>% Rules for verb anaphora (grossly oversimplified -this is not <lb/>% the main subject of the paper!) <lb/>verb anaphora_mat ch_l (. do &apos;, _, active ) . <lb/>verb_anaphora_match__l (have,have,active) . <lb/>verb anaphora match I (. bepassive &apos;, _, pas sire ) . <lb/>verb anaphora match 1 ( &apos;be &apos;, &apos;be &apos;, active) . <lb/></div>

			<note place="footnote"> Computational Linguistics Volume 16, Number 2, June 1990 <lb/></note>

			<page>105 <lb/></page>

			<note place="headnote"> Mammy Rayner and Amelie Banks <lb/></note>

			<div type="annex">An Implementable Semantics for Comparative Constructions <lb/> % Verb mods <lb/>verb mods(Mods,Mods) --&gt; []. <lb/>verb_mods([ModlMods),Mods) --&gt; <lb/>verb mod(Mod), <lb/>optionally signal_comparatlve(Mod), <lb/>optional_comparand. <lb/>verb mod(Pp) --&gt; pp(Pp). <lb/>verb_mod(Adv) --&gt; adv(Adv). <lb/>pp(role(Prep, Np)) --&gt; <lb/>prepositlon(Prep), <lb/>np(Np). <lb/>adv(adv(Adv, [])) --&gt; <lb/>adverb(Adv). <lb/>adv(adv(Adv,deg(cc~np(Compoperator,Complement)))) <lb/>--&gt; <lb/>comparative_adverb(Adv, Comp_operator). <lb/>adJective(Adj) --&gt; <lb/>[Word],(word(Word,AdJ,adJective)}. <lb/>adJective_modlfler(Mod) --&gt; <lb/>[Word), {word(Word, Mod, adjective modifier)}. <lb/>adverb(Adverb) --&gt; <lb/>[Word],{word(Word, Adverb, adverb)). <lb/>article (Art, Det, Num) --&gt; <lb/>[Word], {word(Word,Art, article (Det, Num) ) }. <lb/>article (art (Art, deg (comp (Comp_operator, Complement ) ) ), <lb/>Det, Num) --&gt; <lb/>comparatlve_article (Art, Comp_operator, Det, N~m) . <lb/>comparativeadverb (Adverb, Comp_operator ) --&gt; <lb/>[Word], ( word (Word, Adverb, comparative_adverb (Comp_operator) ) ). <lb/>comparative_adverb (Adv,Mod) --&gt; <lb/>adJective modifier(Mod), <lb/>[Word], (word(Word, Adv, adverb)}. <lb/>comparative_adJective(AdJ,more) <lb/>--&gt; <lb/>[Word],(word(Word, AdJ,cc~parative_adJective)). <lb/>comparative_adjective(AdJ,Mod) <lb/>--&gt; <lb/>adjective_modifier(Mod), <lb/>[Word],{word(Word, AdJ,adJective)}. <lb/>comparatlve_article(Art,C~poperator,Det,Num) <lb/>--&gt; <lb/>[Word],{word(Word, Art,artlcle(comparative,Comp_operator,Det,Num))}. <lb/>complementlzer(null) --&gt; []. <lb/>comple/nentizer (C(xnp) --&gt; <lb/>[Word], [word(Word, Comp, complementizer)). <lb/> name(Name)  --&gt; <lb/> [Word],[word(Word, Name, name)}. <lb/>noun(Noun, Det,N~) --&gt; <lb/>[Word),{word(Word, Noun, noun(Det,N~))). <lb/>preposition(Prep) --&gt; <lb/>[Word),{word(Word, Prep,preposition)}. <lb/>pronoun(Pronoun) --&gt; <lb/>[Word],(word(Word, Fronoun,pronoun)}. <lb/>verb(Verb,Mood,Voice,Frame_pattern) <lb/>--&gt; <lb/>[Word],{word(Word, Verb, verb(Volce,Mood, Frame_pattern))}. <lb/>% A note on representation: <lb/>% evnt(lambda(x,P(X)) is to be read as: &quot;An event E Occurred, such that P(E) <lb/>% held. <lb/>% quant(Q, lambda(X,R(X)),lambda(Y,S(Y))), <lb/>where Q is a generalized quantifier, <lb/>% is to be taken as equivalent with <lb/>% Q (lambda (x, R (X)), lan~bde (Y, S (Y)) ) . <lb/>% When reading formulas, it will often be helpful to think of X and Y as in <lb/>% some sense being &quot;the same variable&quot; <lb/>% q(N,P) is to be read as denoting the generalizedquantifier <lb/>{NIP}. <lb/>% q(N,[]) represents the quantifier {N}, i.e. &quot;exactly N&quot; <lb/>top_sem(y_n_q(S),y n_q(Sem)) :-!, <lb/>s_form (S, Sere) . <lb/>top_sem(wh_q(S),wh_q(Sem) ) :-!, <lb/>s_form ( S, Sere) . <lb/>top_sere (S, sere) :-<lb/>s_form (S, sem). <lb/>s_form ( S, ]..&quot;orm) :-<lb/>syn_to_ql f (S, Qlf), <lb/>reduce (QI f, Form). <lb/>% syn to qlf converts the syntactic form to the quasi-logical form <lb/>syn_to qlf ( [ ], [ ] ) . <lb/>syn_to ql ~ ( [ First ] Rest ], [First_ql f I Rest_ql f ] ) :-<lb/>syn_to_ql f (Fizst, First_qlf), <lb/>syn_to_.ql f (Rest, Rest_qlf) . <lb/>syn_to ql f [s (Subject ,Vp), Qlf ) :-<lb/>ayn_to_ql f (Subject, Sub J_qlf), <lb/>syn to_qlf (Vp,Vp_qlf), <lb/>rewrite..qlf0 (apply (SubJ_qlf, Vp_qlf ), Qlf) . <lb/>syn to qlf (vp(Head, ,trace np(X) ,Frame) ,vp(Head, X, Qlf) ) :-<lb/>syn to qlf (Frame, Qlf ) . <lb/>syn_to_ql f (role (Role,~rg), role (rolemarker (Role), Axg_qlf) ) : -<lb/>syn_to_ql f (Arg,Arg_qlf) . <lb/>syn to_~If (subject (Np), subject (Np_qlf)) : -<lb/>syn_to_qlf (Np, Np_ql f). <lb/>syn to qlf (np (Det, Cn), quant (Det_ql f, Cn qlf) ) : -<lb/>syn_to ql f (Det, Det_qlf), <lb/>syn to_qlf (Cn, Cn qlf) . <lb/>syn_to._q]f(ap_cc~p(AdJ) ,Qlf) :-<lb/>syn to_ql f (AdJ, Q1 f ) . <lb/>syn_t o__ql f (trace_np (Vat), trace_np (Var)) . <lb/>syn_to q2 f (det ( [art (_, deg (Degree) ), _, _] ), Degree_qlf) : -<lb/>syn to_.qlf (Degree, Degree_qlf) . <lb/>syn_to q) f (det ( [q (Q), _, _I ), q (Q, [ ] ) ) • <lb/>syn_to_.qlf (det ([Det,D,N]) , [Det,D,N] ) :-<lb/>\+functor (Det, art,_), <lb/>\+functor (Det, q,_) . <lb/>syn_t o_.ql f (on ( Head, Mods ), cn ( Head, Mods_ql f ) ) :-<lb/>syn_to qlf (Mods,~ds_qlf) . <lb/>syn_to_.qlf (Dame (Name), name (Name)) . <lb/>syn_to qlf (adJ (AdJ, deg (Degree)), <lb/>abstraction (X, relation ( [AdJ, X, Degree_qlf ] ) ) ) :-<lb/>syn to ~If (Degree, Degree_ql f ) . <lb/>syn to_ql f (adv (Adv, deg (Degree)), <lb/>abstraction (X, relation ( [Adv,X, Degree_qlf] ) ) ) : -<lb/>syn toqlf (Degree, Degreeqlf ) . <lb/>syn_t o__ql f (comp (Comp_operat or, clausal (q(Ql), S) ), <lb/>q (Q, conJ (relation ( [Comp operator, Q, Q1 ] ), <lb/>S_qlf) ) ) :-<lb/>syn_to qlf (S, S qlf) . <lb/>syn_t o__ql f (comp ( Comp_operator, Phrasal ), <lb/>c degree [Comp operator, Phrasal_ql f ) ) :-<lb/>\+funct or (Phrasal, clausal,_), <lb/>syn to ql f (Phrasal, Phrasal_ql f ) . <lb/>syn to ql f (q (Q), q (Q, [ ] ) ) . <lb/>% This is. for &quot;S_operators&quot; <lb/>syn_to _ql f (traces (x), trace_s (X)) . <lb/>% And this is for VP-operators. <lb/>syn_to _q2 f (trace_vp (x), trace_vp (X)) . <lb/>syn_to__ql f (rolemarker (Prep), role m~ker (Prep)) . <lb/>syn_to ql f [s_operator (trace_s (x), S), s_operator (X, S_operator_ql f ) ) :-<lb/>syn_to .ql f ( S, S_operat or_ql f ) . <lb/>syn_to_.ql f (vp_operator (trace vp (X), S), vp_operator (X, S_ql f ) ) :-<lb/>syn to_.qlf (S, S_qlf). <lb/>rewrite_ql f0 (Qlf0, Q1 f ) :-<lb/>contaiF~s_functor (Qlf0, c degree/2 ), !, <lb/>rewrite_qlf (Qlf0, Qlf) . <lb/>rewrite_(|lf0 (QI f, Qlf ) . <lb/>% comp~rrison nodes can be inserted in the following places: <lb/>% <lb/>% i. (&gt;let a &quot;role&quot; node in a vp <lb/>% 2. (&gt;ler a &quot;vp&quot; node <lb/></div>

			<page> 106 <lb/></page>

			<note place="footnote">Computational Linguistics Volume 16, Number 2, June 1990 <lb/></note>

			<note place="headnote">Mammy Rayner and AmeHe Banks <lb/>An Implementable Semantics for Comparative Constructions <lb/></note> 
			
			<div type="annex">% 3. Over an &quot;abstraction&quot; node (really, this should be unified with 2. ) <lb/>% 4. Over an &quot;apply&quot; node <lb/>% <lb/>% rewrite qlf recursively goes down the qlf: when it finds a place where <lb/>% a comparison could potentially occur, it checks to see if it can make one. <lb/>% That is, it <lb/>% <lb/>% a. tries to extract a c complement and store it. <lb/>% b. tries to find a suitable contrast. <lb/>% c. constructs the comparison node and inserts it. <lb/>rewrite_ql f (QI f0, Q1 f ) :-<lb/>rewrite qlf on subtrees (Qlf0, Qlf ). <lb/>rewrlte_ql f (QI f0, QI f ) :-<lb/>comparison_inset tion_sit e (Qlf0), <lb/>raise comparative (QI f0, Qlfl, Store), <lb/>contrastand_insertcomparison (Qlfl, Store, Qlf) . <lb/>comparison_insertion_site ( [role (_,) I_] ) • <lb/>comparison insertion_site (vp (_,_,) ) . <lb/>comparison_insertion_site (abstraction (,_) ) . <lb/>comparison_insertion_site (apply (_, _) ) . <lb/>contrast and insert_comparison(Qlf0,Store,Qlf) :-<lb/>Store = c_stored item(C_complement,_,Q), <lb/>find contrast0 (C_complement, Qlf0, Qlfl, Contrast, C, Q), <lb/>insert_normal_comparison (Qlfl, Store, Contrast, C, Qlf) . <lb/>contrast and insert_comparison(Qlfl,Store,Qlf) :-<lb/>insert_s operator_comparison (Qlfl, Store, Qlf) . <lb/>contrast and insert ccmparison(Qlfl,Store,Qlf) :-<lb/>insertabstracted_variable_comparison (Qlfl, Store, Qlf) . <lb/>insert_normalcomparison ( <lb/>Qlf, <lb/>c_stored_item (C_compl~ment, C_operator, Q), <lb/>Contrast, <lb/>C, <lb/>comparison (Contrast, <lb/>C complement, <lb/>C operator, <lb/>C, <lb/>Q, <lb/>Qlf) ). <lb/>% This is the first special case from section 3.3. The qlf <lb/>% under the comparison must be an abstraction, and the C_complement <lb/>% must be an NP denotation. <lb/>insert_abstracted_variable_comparison ( <lb/>Qlf, <lb/>cstoreditem (C_complement, C operator, Q), <lb/>abstraction (x1, <lb/>comparison (trace_np (Xl), <lb/>C_complement, <lb/>C operator, <lb/>C, <lb/>Q, <lb/>apply(C,Qlf) ) ) ) :-<lb/>np_denot ation (C_complement), <lb/>Qlf = abstraction(,). <lb/>% This is the second special case from section 3.3. The C_complement <lb/>% must be an s operator, and the qlf under the comparison something <lb/>% that an s_operator can be applied to -an S or VP denotation. <lb/>% The second clause is to take care of a subtle problem that arises <lb/> %  if the s_operator&apos;s argtunent is a VP-denotation: see the remarks <lb/>% before Table 4 in section 3.4.3. <lb/>insert_s_operator_comparison ( <lb/>Qlf, <lb/>c_stored_item (C_complement, C_operator, Q), <lb/>comparison (s_operator (S, S) , <lb/>C_cc~plement, <lb/>C_operator, <lb/>C, <lb/>Q, <lb/>apply(C,Qlf) ) ) :-<lb/>C_complement = s_operator (_,_), <lb/>Qlf = apply (,_) . <lb/>insert_s operator comparison ( <lb/>Qlf, <lb/>c_storeditem (Ccomplement, C operator, Q), <lb/>abstraction ( <lb/>x, <lb/>comparison (s_operator (S, S), <lb/>C_complement, <lb/>C_operator, <lb/>C, <lb/>Q, <lb/>apply (C, (apply (trace_np (X), <lb/>Qlf)))))) :-<lb/>C complement ~ s operator (_,_), <lb/>Qlf -vp(_,_,_). <lb/>% Raise_comparative lifts a c_degree out of a constituent, leaving a <lb/>% Q behind. <lb/>raise ccmparatlve (X, ,_) :-vat (X), !, fail. <lb/>raise ccmparative (c_degree (C_operator, C ccmpl~nent), <lb/>Q, <lb/>c_stored_item (C complement, C_operator, Q) ) . <lb/>raise_cc~paratlve (relation (List0), <lb/>relatlon (List1), <lb/>Store) :-<lb/>~aise comparative (List0,Listl, Store) . <lb/>raise_comparative ( (F0 ] R), IF1 i R), Store) : -<lb/>raise comparative (F0, F1, Store ) . <lb/>raise_comparative ( [ F i R0 ), [ F I Rl ), Store ) : -<lb/>raise comparative (R0, RI, Store ) . <lb/>ralsecomparative (apply (QIf0,X), <lb/>apply (Qlfl, X), <lb/> Store)  :-<lb/>raise_ccmparat ire (Qlf0, Qlfl, Store). <lb/>raise cc~paratlve (apply (x, Qlf0 ), <lb/>apply (X,Qlfl), <lb/>Store) .-<lb/>ralse comparatlve (QI f0, Q1 fl, Store ). <lb/>r aise comparative (abstraction (X, Qlf0 ), <lb/>abstraction (X, Qlfl ), <lb/>Store) &quot;-<lb/>raise_comparative (Qlf0, Q1 fl, Store ) . <lb/>raise_comparative (quant (Det0, Cn item), <lb/>quant (Detl, Cn_it era), <lb/>Store) --<lb/>ralse_ccmparative (Det 0, Detl, Store) . <lb/>raise cc~paratlve (quant (Det, cn (Head, [Mod0] ) ), <lb/>quant (Det, cn (Head, [Modl] ) ), <lb/>Store) &quot;-<lb/>raise_comparative (Mod0,Modl, Store). <lb/>raise_cc~paratlve (role (Role, Quant0 ), <lb/>role (Role, Quantl ), <lb/> Store)  &apos;-<lb/>raise_cc~parative (Quant0, Quantl, Store) . <lb/>raise_ccmparative (subject (Quant0), <lb/>subject (Quant i }, <lb/>Store) • -<lb/>raise_comparative (Quant 0, Quant I, Store). <lb/>raise comparative (vp (Head, X, Qlf0 ), <lb/>vp (Head, X, Qlfl ), <lb/>Store) • -<lb/>raise_comparative (Qlf0, Qlfl, Store) . <lb/>rewrlte ql f_on sabtrees (apply (Np, Vp0), apply (Np, Vp) ) :-<lb/>rewrite_q1 f (Vp0, Vp) . <lb/>rewrite_q1 f_on_sabtrees (apply (Np0, Vp), apply (Np, V~) ) :-<lb/>rewrite_qlf (Np0, Np) . <lb/>rewrite ql f_on subtrees (vp (Head, X, Qlf0 ), vp (Head, X, Q1 f ) ) :-<lb/>rewrite qlf (Qlf0, Qlf). <lb/>rewrite qlf_on subtrees ( IF0 i R), (F J R] ) : -<lb/>rewrite qlf (F0, F) . <lb/>rewrite_ql f_on_subtrees ( [F I R0], [F I R) ) : -<lb/>rewrite_qlf (R0, R) . <lb/>rewrit e_ql f_on_subtrees ( role (Role, Quant 0 ), role (Role, Quant ) ) :-<lb/>rewrite qlf (Quant O, Quant ). <lb/>rewrite_ql f_on_sabtrees (sub Ject (Quant0), sub Ject (Quant) ) :-<lb/>rewrite_q1 f (Quant 0, Quant ) . <lb/>rewrite_qlf on_sabtrees (quant (Det, Cn0 ), quant (Det, Cn) ) :-<lb/>rewrite_qlf (Cn0, Cn) . <lb/>rewrite ql f_on_subtrees (cn (Head, Mods0 ), cn (Head, Mods ) ) :-<lb/>rewrite_qlf (Mods0,Mods) . <lb/>% find_contrast checks a Ccomplement against something that might <lb/>% be a contrastable item (or contain one). The last three arguments are: what <lb/>% the thing is replaced by (either the C, or some thlng containing the C), <lb/>% the extracted contrasted item, and a pointer to the C. Note that the <lb/>% contrast cannot contain the Q -hence the following clause. <lb/></div>

			<note place="footnote"> Computational Linguistics Volume 16, Number 2, June 1990 <lb/></note>

			<page>107 <lb/></page>

			<note place="headnote">Manny Rayner and Amelie Banks <lb/>An Implementable Semantics for Comparative Constructions <lb/></note> 
			
			<div type="annex">findcont rast 0 [C_cccnple~nent, Q1 f 0, Q1 f, Contrast, C, Q) :-<lb/>find_contrast (C_complement, Qlf0, Qlf, Contrast, C), <lb/>\+contains_id(Contrast,Q). <lb/>% There are a large n~m~ber of cases. It would clearly be possible to collapse <lb/>% at least some of these. <lb/>% The first five are essentially slmilar: <lb/> % i:  we&apos;re looking at a role, and the C complement is also a role. <lb/>% (John has more books in the bec~rocm than in the kitchen) <lb/>flnd_contrast (role (Role,_), <lb/>role (Role, Quant ), <lb/>C, role (Role, Quant ), C) . <lb/>% 2: we&apos;re looking at a role, and the C_complement is an NP. <lb/>% (John has more books in the bedroc~ than the kitchen). <lb/>find_contrast(C_ccmplement, <lb/>role(~le,C~/ant), <lb/>role(R~le, C),Quant,C) :-<lb/>np_denotation(Ccc~nplement). <lb/> % 3:  we&apos;re looking at an NP, and the C_con~pleJnent is an NP. <lb/>find_contrast (C cc~pl~ent, <lb/>Contrast, <lb/>C, Contrast,C) :-<lb/>np_denot ation (Ccc~lement), <lb/>np_denotation(Contrast). <lb/>% 4: we&apos;re looking at a subject, and the C_cc~aplement is something <lb/>% that can constrast against the subject&apos;s NP. <lb/>% (John has more books in the kitchen than Mary). <lb/>flnd_contrast (C complement, <lb/>subject (Quant), <lb/>subJect(Q~antl) ,Contrast,C) :-<lb/>find_contrast (C_c~mplement, Quant, Quant I, Contrast, C) . <lb/>% 5: we&apos;re looking at a subject, and the C_ccraplement is a subject. <lb/>% (John has more books in the kitchen than Mary does). <lb/>find_contrast(subject(_), <lb/>subJect(Quant), <lb/>subJect(C),Quant,C)° <lb/>% 6: CN contrasting; we&apos;re looking at an NP, and the C_cc~nplement is a cn. <lb/>% (More men have b(&gt;Dks in the kitchen than wc~en). <lb/>find contrast(cn(_,_), <lb/>quant(Det,Cn), <lb/>quant(Det,C),Cn, C). <lb/> % 7:  VP operator contrasting; we&apos;re looking at a subject, and the <lb/>% C_cc~lement is a vp_operator. <lb/>% (John has more h~oks in the kitchen than Mary is able to). <lb/>find contrast(vp_operator(,), <lb/>subJect(Quant), <lb/>subJect(C),Quant,c). <lb/>% 8: Preposition contrasting; we&apos;re looking at a role, and the <lb/> %  C_complement is a role marker with a &quot;contrastable&quot; role. <lb/>% (&quot;more women voted for the pro~sal than against&quot;.) <lb/>find contrast(role_marker(Cc~p_role), <lb/>role (role marker (Role),Quant), <lb/>role(C, Quant),rolemarker(RDle),C) :-<lb/>contrastable_roles(Comp_role,Role). <lb/>contrastable_roles(X,Y) :-<lb/>(contrastable_roles_l(X,Y); <lb/>contrastable roles_l(Y,X)). <lb/>% One example of a clause defining a contrastable role pair: <lb/>contrastable_rolesl(for,agalnst). <lb/>% 9: Recurslve cases: <lb/>find contrast(C complement, <lb/>vp(Head, X,Qlf), <lb/>vp(Head, X,Qlfl), <lb/>Contrasted, C) :-<lb/>flnd_contrast(C_ccmplement,Qlf, Qlfl,Contrasted, C). <lb/>find_contrast(C_ccmplement, <lb/>apply(Qlf,X), <lb/>apply(Qlfl,X), <lb/>Contrasted, C) :-<lb/>find_co~:rast(qcomplement,Qlf,Qlfl,Contrasted, C). <lb/>find comlrast (C_complement, <lb/>apply (X, Qlf ), <lb/>apply (X, Q1 fl ), <lb/>Contrasted, C) :-<lb/>find_contrast (c complement, Qlf, Qlfl, Contrasted, C) . <lb/>find_contrast (C_complement, IF I R], [F_I n R), Contrast, C) : -<lb/>find_contrast (Ccomplement, F, F_I, Contrast, C) . <lb/>findcontrast (C cc~lement, [F I R), [F I R_I ], Contrast, C) : -<lb/>find_contrast (C_cc(nplement, R, R1, Contrast, C) . <lb/>% Reduce tllrns the QLF into a logical fo~ by recursively going through it. <lb/>reduce(X,X) :-vat(x),!. <lb/>reduce(appLy(Fqlf,~g_qlf),LF) :-<lb/>reduce(Fqlf, F), <lb/>reduce(~:g_qlf,Arg), <lb/>apply(F,1~rg,LF). <lb/>reduce(~gstraction(X,Qlf),k(X, LF)) :-<lb/>reduce (Qlf, LF). <lb/>% We have to reduce possible degree arguments to a relation. <lb/>reduce (rel~.tion (A/g_list 0 ), LF ) :-<lb/>reduce .az g_llst (Arg_list0, A/g_llst ), <lb/>LF =.. Azg_list. <lb/>reduce (conJ(Qlfl,Qlf2),LF) :-<lb/>reduce(Q~fl,LFl), <lb/>reduce(Qlf2,LF2), <lb/>conJoir~([LFl, LF2},LF). <lb/>reduce(s~Ject(Qlf),LF) :-reduce(Qlf, LF). <lb/>reduce (~lar,t (Det, Cn), <lb/>l(V~_sem, quant (Det sem, Cn sem, vp_sem) ) ) :-<lb/>reduce det (Det, Det_sem), <lb/>reduce &apos;~Cr~, Cn_sem) . <lb/>% &quot;substitute (x)&quot; denotes the higher-order function IP.P (X). <lb/>% Our sin~le-mlnded implementation of &quot;apply&quot; can&apos;t deal with anything more <lb/>% complicated than simple substitutions, so this has to be treated as a <lb/>% special case. <lb/>reduce (trace_np (X), substitute (x)) . <lb/>reduce(name(N),substitute(N)). <lb/>reduce (vp_operator (x, Vp_op), k (X, Vp op_sem) ) :-<lb/>reduce ( Vp _op, Vp_op_s em ) . <lb/>reduce(cn(Head,[)),k(X, Head rel)) :-<lb/>Head_tel :=.. [Head, X). <lb/>reduce(cn(Head,[AdJ_qlf]),LF) :-<lb/>Head rel =.. [Head, X), <lb/>reduce(KdJ_glf,AdJLF), <lb/>conJoin([:%(X,Headrel),Adj_LF],LF). <lb/>reduce (vp (Head, X, Qlf ), k(X, LF) ) :-<lb/>reduce vp (QI f, LF, Head, Props-Props) . <lb/>reduce (trace ~p (X) ,X) . <lb/>reduce (traces (x), X) . <lb/>reduce(role_marker(Role),Bole). <lb/>reduce(s operator (X, Qlf),k[X, LF) ) :-<lb/>reduce (~if, LF) . <lb/>% This is the expression (*) in section 3.2 <lb/>reduce (camparlson (Contrast, C_complement, C_operator, c, Q, Psil ), LF) :-<lb/>Nl_condition = relation([C_operator,N, Nl]), <lb/>PSI11 = k(Q,~(C, Psil) ) , <lb/>apply (Pslll, q(N1, Nl_condition ), N_condit lon0 ), <lb/>apply (N condition0, C_complement, N_condition), <lb/>apply (Psill, q (N, N_cond/tion), Qlf0 ), <lb/>apply (Qlf0, Contrast, Qlf) , <lb/>reduce (QI:~ =, LF ) . <lb/></div>

			<page> 108 <lb/></page>

			<note place="footnote">Computational Linguistics Volume 16, Number 2, June 1990 <lb/></note>

			<note place="headnote">Manny Rayner and Amefie Banks <lb/>An Implementable Semantics for Comparative Constructions <lb/></note> 
			
			<div type="annex">reduce([],[]). <lb/> % reduce_vp is a special form of reduce for reducing the llst of verb_args. <lb/>% The arglu,ents are: <lb/>% i: Qlf -a llst of verb_arg nodes <lb/>% 2: Piece of LF produced by reducing it <lb/>% 3: The head verb <lb/>% 4: a d-llst of lambda abstractions, which will end up as properties of the <lb/>% <lb/>event associated with the head verb. <lb/>reduce_vp([],evnt(Property),Head, Event_properties-[]) :-<lb/>Head tel =.. [Head, X], <lb/>conJoin([k(X, Head rel)lEventproperties],Property). <lb/>reduce_vp([role(role_marker(Role),NP_qlf)IRest_args], <lb/>LF, Head, Event_propertles-[k(E,Role_relation)~Rest_propertles]) <lb/>:-<lb/>np_denotatlon(NP_qlf), <lb/>Role_relation =.. [Role,E,X], <lb/>reduce(NPqlf,NPLF), <lb/>reduce_vp(Rest_args,RestLF, Head, Eventproperties-Rest_properties), <lb/>apply ( NP_LF, k (X, Rest_LF ) , LF) . <lb/>reduce vp ( [role (role_marker (Role), Qlf) I Rest_args ], <lb/>LF, Head, Eventproperties-[k (E, Role_relation) }Rest properties] ) :-<lb/>\+np_denotation(Qlf), <lb/>Role_relation •.. [BoIe,E,Role_LF], <lb/>reduce(Qlf,Role_LF), <lb/>reduce_vp(Restargs, LF, Head, Eventproperties-Rest_.properties). <lb/>reduce_vp([ubstraction(X, Qlf) lRest], <lb/>LF, Head, Event_properties-[k(X, Sem) IRest~roperties]) :-<lb/>reduce (Qlf, Sem), <lb/>reduce_vp(Rest,LF, Head, Event properties-Rest~roperties). <lb/>reduce arglist([],[]). <lb/>reduce arg_list ([FOIR0], [FIR]) :-<lb/>reduce_arg(F0,F), <lb/>reduce_arglist(R0,R). <lb/>reduce_arg(x,x) :-var(x),!. <lb/>reduce arg(q(N, Qlf), q(N, LF)) :-!, <lb/>reduce(Qlf,LF). <lb/>reduce_arg(x,x). <lb/>reduce det ([a,undet, sing],ex) :-!. <lb/>reduce_det ([&apos;scme&apos;,undet, sing],ex) :-!. <lb/>reduce__det([many,undet,plur],many) <lb/>:-!. <lb/>reduce det ([[],undet, sing],ex) :-E. <lb/>reduce_det([[],det, sing],the) :-!. <lb/>reduce_clef ( [which,_,_] ,wh) :-! . <lb/>reduoe_det ( [which~l, , ] ,whpl) :-! . <lb/>reduce det(q(N, Qlf),q(N, LF)) :-!, <lb/>reduce (QIf,LF). <lb/>np_denotatlon(quant(_,_)). <lb/>np_denotation(name(_)). <lb/>np__denotation(trace_np(_)). <lb/> APPENDIX 3 EXAMPLES <lb/> i: [vilka, kungar, regerade, l{ngre, {n, Gustav III] <lb/>which kings reigned longer than Gustav III? <lb/>....... Syntactic form ......... <lb/>wh_q(s(subJect(np(det([which_pl <lb/>undet <lb/>plur]) <lb/>on(king <lb/>[]))) <lb/>vp(reign <lb/>finite <lb/>trace_np(A) <lb/>[role(agent <lb/>trace_np(A)) <lb/>adv(long <lb/>deg(comp(more <lb/>nsune(Gustav Ill))))]))) <lb/>....... Logical form <lb/>......... <lb/>wh_q(quant(wh_pl <lb/>k(A, king(A)) <lb/>k(B, evnt(k(C,[and <lb/>reign(c) <lb/>agent(C,B) <lb/>long (C <lb/>q(D <lb/>k (B, evnt (k (E, [and <lb/>reign(E) <lb/>agent(E, Gustav III) <lb/>long(E <lb/>q(F <lb/>more(D,F)))])))))]))))) <lb/>2: [hade,n}gon, kung, fler, slner, In, Gustav Wasa] <lb/>had any king more sons than Gustav Wasa? <lb/>....... Syntactic form <lb/>......... <lb/>y nq(s(subJect]np(det([scme <lb/>under <lb/>sing]) <lb/>on(king <lb/> [)))) <lb/> vp(have <lb/>finite <lb/>trace__np(A) <lb/>[role(agent <lb/>trace_np(A)) <lb/>role(son <lb/>np(det([art(many <lb/>deg(comp(more <lb/>name(Gustav Wasa)))) <lb/>under <lb/>pl~r]) <lb/>on(person <lb/> [])))]))) <lb/> ....... Logical fom <lb/>......... &apos; <lb/>y n_q(quant (ex <lb/>k(A, king (A)) <lb/>(B, quant (q (C <lb/>k(B, quant(q(D <lb/>more(C,D)) <lb/>k(E,person(E)) <lb/>k(F, evnt(k(G,[and <lb/>have (G) <lb/>agent(G,Gustav Wasa) <lb/>son(G,F)])))))) <lb/>k(H,person(H)) <lb/>k(I,evnt(k(J,[and <lb/>have(J) <lb/>agent(J,B) <lb/>son(J,I)]))))))) <lb/>3: [dog, Gustav Wasa, f[re,Gustav II Adolf] <lb/>died Gustav Wasa before Gustav II Adolf? <lb/>....... Syntactic form <lb/>......... <lb/>y_n_q(s (subject (name (Gustav Wasa)  ) <lb/> vp (die <lb/>finite <lb/>trace_np ]A) <lb/>[role (agent <lb/>trace np (A)) <lb/>adv (at_time <lb/>deg (ocmp (before <lb/>name (Gustav II Adolf) ) ) ) ] ) ) ) <lb/>....... Logical form <lb/>......... <lb/>y n_q(evnt (k(A, [and <lb/>die (A) <lb/>agent (A, Gustav Wasa) <lb/>at_t ~/~e (A <lb/>q(B <lb/>k (C, evnt (k(D, [and <lb/>die(D) <lb/>agent (D,Gustav II Adolf) <lb/>at_time (D <lb/>q(E <lb/>before (B,E))) ) ) ) ) ) ) ]) ) ) <lb/>4: [vilka, kungar,var,mer,berlmda,{n,Karl xII] <lb/>which kings were more famous than Karl XII? <lb/></div> 
			
			<note place="footnote">Computational Linguistics Volume 16, Number 2, June 1990 <lb/></note>

			<page>109 <lb/></page>

			<note place="headnote">Manny Rayner and AmeHe Banks <lb/>An Implementable Semantics for Comparative Constructions <lb/></note> 
			
			<div type="annex">....... Syntactic form <lb/>......... <lb/>whq(s(subject(np(det([whlch_pl <lb/>undet <lb/>plur]) <lb/>cn(king <lb/>[]))5 <lb/>vp(be <lb/>finite <lb/>trace_np(A) <lb/>[role(agent <lb/>trace_np (A)) <lb/>role(ap_comp <lb/>ap comp(adJ(famous <lb/>deg(comp(more <lb/>name(Karl XII;)))))]))) <lb/>....... Logical form <lb/>......... <lb/>whq(quant(whpl <lb/>k(A, king(A)) <lb/>k(B, evnt(k(C,[and <lb/>be(C) <lb/>agent(C, B5 <lb/>ap_comp(C <lb/>I(D, famous(D <lb/>q(E <lb/>famous(Karl XlI <lb/>q(F,more(E,F))))5))])55)) <lb/>5: [Kalle, kJpte, fler,blcker,{n,vad, Marie,kunde,b[ra] <lb/>Charlie bought more books than (what) Mary could carry• <lb/>....... Syntactic form <lb/>......... <lb/>s(subJect(name(CharlieS) <lb/>vp(buy <lb/>finite <lb/>trace_np(A) <lb/>[role(agent <lb/>trace_np(A)) <lb/>role(object <lb/>np(det([art(many <lb/>deg(cc~p(more <lb/>clausal(q(B) <lb/>s(subJect(name(Mary)) <lb/>vp(be able to <lb/>finite <lb/>trace np(C) <lb/>[role(agent <lb/>trace_np(C)5 <lb/>role(inf_comp <lb/>vp(carry <lb/>infinite <lb/>trace np(D) <lb/>[role(agent <lb/>trace np(D)) <lb/>role(object <lb/>np(det([q(B) <lb/>undet <lb/>plur]5 <lb/>cn[book <lb/>[5)555))]))))5) <lb/>undet <lb/>plur]5 <lb/>cn(book <lb/> []5])]5) <lb/> ....... Logical form <lb/>......... <lb/>quant(q(A <lb/>[and <lb/>more(A,B) <lb/>evnt(k(C,[and <lb/>be able to(C) <lb/>agent(C,Mary) <lb/>infcomp(C <lb/>X(D, quant(q(B,[]) <lb/>k(E,bOOk(E)) <lb/>k(F, evnt(k(G,[and <lb/>carry(G) <lb/>agent (G,D) <lb/>obJect(G, FS]))))))]))[) <lb/>k(H,book(H) 5 <lb/>k(I,evnt(k(J,[and <lb/>buy(J) <lb/>agent (J, Charlle) <lb/>obJect(J,I)]5))) <lb/>6: [~rie,klpte, en, dyrare,vas,[n, vad, Kalle, klpte] <lb/>~mry bought a dearer vase than (what) Charlie bought, <lb/>....... Syntactic form <lb/>......... <lb/>s(sul)Ject(name(Mary)) <lb/>vp~b~ <lb/>f~nite <lb/>tzace_np(A) <lb/>[~ole(agent <lb/>trace_np(A)) <lb/>role(object <lb/>np(det([a <lb/>undet <lb/>sing) 5 <lb/>cn(vase <lb/>[adJ(expensive <lb/>deg(comp(more <lb/>clausal(q(B5 <lb/>]5))]5)*)5)]55)])5 <lb/>s(subJect(name(Charlie)5 <lb/>vp(buy <lb/>finite <lb/>trace_np(C5 <lb/>[role(agent <lb/>trace_np(C) 5 <lb/>role(object <lb/>np(det([a <lb/>undet <lb/>sing]) <lb/>cn(vase <lb/>[adJ(expenslve <lb/>deg(q(B))) <lb/>....... Logical form <lb/>......... <lb/>quant(ex <lb/>k(A,[and <lb/>vase(A5 <lb/>expenslve(A <lb/>q(B <lb/>[and <lb/>more(B,C) <lb/>quant(ex <lb/>k(D,[and <lb/>vase(D) <lb/>expensive(D,q(C,[]))]) <lb/>k(E, evnt(k(F,[and <lb/>buy(F) <lb/>agent(F,Charlie) <lb/>obJect(F,E)]))))])))) <lb/>k (G, evnt (k(H, [and <lb/>buy (H5 <lb/>agent (H,Mary) <lb/>object(H,G)])))) <lb/>7: [m)nga, turister, spenderade,fler, kronor, i,London,(n,i,New York] <lb/>m~ny tourists spent more kronor in London than in New York <lb/>....... Syntactic form <lb/>......... <lb/>S (subject (np (det ( [many <lb/>under <lb/>plur] ) <lb/>cn (tourist <lb/>C]55) <lb/>vp (~pend <lb/>finite <lb/>• srace np (A) <lb/>[role (agent <lb/>trace np (A)) <lb/>role (object <lb/>np (det ( [art (many <lb/>deg (comp (more <lb/>role(in <lb/>nam~ (New York) ) ) ) ) <lb/>undet <lb/>plur] ) <lb/>cn (krona <lb/>[]))5 <lb/>role (in <lb/>name(London) ) ] ) ) <lb/></div>

			<page> 110 <lb/></page>

			<note place="footnote">Computational Linguistics Volume 16, Number 2, June 1990 <lb/></note>

			<note place="headnote">Maany Rayner and AmeUe Banks <lb/>An lmplementable Semantics for Conlantive Comtn~tiom <lb/></note> 
			
			<div type="annex">....... Logical form <lb/>......... <lb/>quant(many <lb/>k(A, tourist (A)) <lb/>k(B,quant(q(C <lb/>k(B,quant(q(D,more(C,D)) <lb/>k(E, krona(E)) <lb/>k(F,evnt(k(G,[and <lb/>spend(G) <lb/>agent(G,B) <lb/>obJect(G,F) <lb/>in(G,New York)])))))) <lb/>k(H, krona(H)) <lb/>A(l,evnt(k(J,[and <lb/>spend(J) <lb/>agent(J,B) <lb/>obJect(J,I) <lb/>in (J, London) ] ) ) ) ) ) ) <lb/>8: [Gustav Wasa, hade, fler,(iskarinnor,{n,Kalle,p)stod] <lb/>Gustav Wasa had more mistresses than Charlie claimed. <lb/>....... Syntactic form <lb/>......... <lb/>s(subJect(name(Gustav Wasa)) <lb/>vp(have <lb/>finite <lb/>trace_np(A) <lb/>[role(agent <lb/>trace_rip(A)) <lb/>role(mistress <lb/>np(det([art(many <lb/>deg(ccwp(more <lb/>s_operator(trace_s(B) <lb/>s(subJect(name(Charlie)) <lb/>vp(clalm <lb/>finite <lb/>trace np(C) <lb/>[role(agent <lb/>trace_np(C)) <lb/>role(scomp <lb/>trace_s(B))])))))) <lb/>under <lb/>plur]) <lb/>cn(person <lb/>[])))])) <lb/>....... Logical form <lb/>......... <lb/>quant(q(A <lb/>evnt(k(B,[and <lb/>clalm(B) <lb/>agent(B, Charlle) <lb/>s_comp(B <lb/>quant(q(C,more(A,C)) <lb/>k(D,person(D)) <lb/>k(E,evnt(k(F,[and <lb/>have(F) <lb/>agent(F, Gustav Wasa) <lb/>mlstress(F,E)])))))]))) <lb/>k(G, person(G)) <lb/>k(H, evnt(l(I,[and <lb/>have(I) <lb/>agent(I,Gustav Wasa) <lb/>mistress(I,H)))))) <lb/>9: [fler, kvinnor,(n,m{n,l{ser, H{nt i Veckan] <lb/>more wc~en than men read &apos;News of the World&apos; <lb/>....... Syntactic form <lb/>......... <lb/>s (subject (np (det ( [art (many <lb/>deg(cc~sp(more <lb/>cn(man <lb/>[])))) <lb/>undet <lb/>plur]) <lb/>cn(wcman <lb/>[]))) <lb/>vp(read <lb/>finite <lb/>trace_np(A) <lb/>[role(agent <lb/>trace_np(A)) <lb/>role(object <lb/>n~me(News of the World))])) <lb/>.......  Logical  form <lb/>......... <lb/>quant[q(A <lb/>quant(q(B <lb/>more(A <lb/> B)) <lb/> ~(C,man(C)) <lb/>k(D,evnt(k(E,[and <lb/>read(E) <lb/>agent(E,D) <lb/>obJeet(E, News of the World)]))))) <lb/>k(F, wcman(F)) <lb/>k(D,evnt(k(G,[and <lb/>read(G) <lb/>agent(G,D) <lb/>obJect(G, News of the World)])))) <lb/>i0: [Marie,verkar, l{ngre,{n, Kalle] <lb/>Mary looks taller than Charlie. <lb/>....... Syntactic fore <lb/>......... <lb/> s(subJect(na~e(~L--y)) <lb/> vp(appear <lb/>finite <lb/>trace_np(A) <lb/>[role(agent <lb/>trace_np(A)) <lb/>role(ap_comp <lb/>ap_comp(adJ(tall <lb/>deg(cGmp(more <lb/>name(Charlle))))))])) <lb/>.......  Logical form  ........ <lb/>evnt (k(A, [and <lb/>appear (A) <lb/>agent (A, Mary) <lb/>ap_comp (A <lb/>(B, tall (B <lb/>q(C <lb/>tall (Charlie <lb/>q (D,more (C, D) ) ) ) ) ) ) ] ) ) <lb/>ii: [Kalle, sprlnger, fortare, { n, vad, Marie, kan] <lb/>Charlle runs Easter than Mary can. <lb/>....... Syntactic form <lb/>......... <lb/>s (subject (came (Cha~lim)) <lb/>vp (run <lb/>finite <lb/>trace_np (A) <lb/>[role (agent <lb/>trace_rip (A)) <lb/>adv ( fast <lb/>deg (comp (more <lb/>vp_operat or (t race_vp (B) <lb/>s (subject [name (Mary)) <lb/>vp (be able to <lb/>finite <lb/>t race_np (C) <lb/>[role (agent <lb/>trace np (C)) <lb/>role (inf_ec~ <lb/>trace_vp (B)) ] ) ) ) ) ) ) ) ) ) <lb/>....... Logical form <lb/>......... <lb/>evnt (~.(A, [and <lb/>run (A) <lb/>agent (A, Charlle) <lb/>fast (A <lb/>q(B <lb/>evnt (A (C, [and <lb/>be able to(C) <lb/>agent (C, Mary) <lb/>inf_comp (C <lb/>k(D, svnt (k(E, [and <lb/>run(E) <lb/>agent (E, D) <lb/>fast (E, q(F,more (B, F) <lb/>))]))))]))))])) <lb/></div>

			<note place="footnote"> Computational Linguistics Volume 16, Number 2, June 1990 <lb/></note>

			<page>111 <lb/></page>

			<note place="headnote">Manny Rayner and AmeHe Banks <lb/>An Implementable Semantics for Comparative Constructions <lb/> </note>
			
			<div type="annex">12: [fler, kvinnor,r~stade, fIr, f~rslaget, {n, emot] <lb/>more women voted for the-suggestion than against. <lb/>....... Syntactic form <lb/>......... <lb/>s (subject (np (det ( [art (many <lb/>deg (ccmp (more <lb/>role_~rker (against)) ) ) <lb/>undet <lb/>plur] ) <lb/>cn (woman <lb/>C]))) <lb/>vp (vote <lb/>finite <lb/>trace np (A) <lb/>[role (agent <lb/>trace_np (A)) <lb/>role (for <lb/>np(det ([ [] <lb/>det <lb/>sing] ) <lb/>cn (suggestion <lb/>C])))])) <lb/>....... Logical form <lb/>......... <lb/>quant(q(A <lb/> q1~nt(q(B,more(A,B)) <lb/> k(C, wc~an(C)) <lb/>k(D, quant(the <lb/>l(E, suggestion(E)) <lb/>A(F, evnt(k(G,[and <lb/>vote(G) <lb/>agent(G,D) <lb/>agalnst(G,F)]))))))) <lb/> ~(lt, w~man(S)) <lb/> k(1),(~/ant(the <lb/>k(I, suggestion(1)) <lb/>X(J, evnt(l(K,[and <lb/>vote(K) <lb/>agent (K,D) <lb/>for(K,J)])))))) <lb/> </div>

			<page>112 <lb/></page>

			• r,  .~,..~ ~ .... ~ <lb/>

			<note place="footnote"> Conputatioual Linguistics Volume 16, Number 2, June 1990</note>

		</back>
	</text>
</tei>
