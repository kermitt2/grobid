<?xml version="1.0" ?>
<tei xml:space="preserve">
	<teiHeader>
		<fileDesc xml:id="0"/>
	</teiHeader>
	<text xml:lang="en">
			<front>server date 20190708; downloaded by EPO on 20190710 <lb/>Network Working Group <lb/>B. Liu <lb/>Internet-Draft <lb/>Huawei Technologies <lb/>Intended status: Standards Track <lb/>July 8, 2019 <lb/>Expires: January 9, 2020 <lb/>Instant Congestion Assessment Network (iCAN) for Data Plane Traffic <lb/>Engineering <lb/>draft-liu-ican-00 <lb/>Abstract <lb/> iCAN (instant Congestion Assessment Network) is a set of mechanisms <lb/>running directly on network nodes: <lb/>o To adjust the flows paths based on real-time measurement of the <lb/>candidate paths. <lb/>o The measurement is to reflect the congestion situation of each <lb/>path, so that the ingress nodes could decide which flows need to <lb/>be switched from a path to another. <lb/>This is something that current SDN and TE technologies can hardly <lb/>achieve: <lb/>o SDN Controller is slow and far from the data plane, it is neither <lb/>able to assess the real-time congestion situation of each path, <lb/>nor able to assure the data plane always go as expected <lb/>(especially in SRv6 scenarios). However, iCAN can work with SDN <lb/>perfectly: controller planning multi-path transmission, and iCAN <lb/>does the flow optimization automatically. <lb/>o Traditional TE is not able to adjust the flow paths in real-time. <lb/>Status of This Memo <lb/>This Internet-Draft is submitted in full conformance with the <lb/>provisions of BCP 78 and BCP 79. <lb/>Internet-Drafts are working documents of the Internet Engineering <lb/>Task Force (IETF). Note that other groups may also distribute <lb/>working documents as Internet-Drafts. The list of current Internet-<lb/>Drafts is at https://datatracker.ietf.org/drafts/current/. <lb/>Internet-Drafts are draft documents valid for a maximum of six months <lb/>and may be updated, replaced, or obsoleted by other documents at any <lb/>time. It is inappropriate to use Internet-Drafts as reference <lb/>material or to cite them other than as &quot;work in progress.&quot; <lb/> Liu <lb/>Expires January 9, 2020 <lb/> [Page 1] <lb/> Internet-Draft <lb/>iCAN <lb/>July 2019 <lb/> This Internet-Draft will expire on January 9, 2020. <lb/>Copyright Notice <lb/>Copyright (c) 2019 IETF Trust and the persons identified as the <lb/>document authors. All rights reserved. <lb/>This document is subject to BCP 78 and the IETF Trust&apos;s Legal <lb/>Provisions Relating to IETF Documents <lb/>(https://trustee.ietf.org/license-info) in effect on the date of <lb/>publication of this document. Please review these documents <lb/>carefully, as they describe your rights and restrictions with respect <lb/>to this document. Code Components extracted from this document must <lb/>include Simplified BSD License text as described in Section 4.e of <lb/>the Trust Legal Provisions and are provided without warranty as <lb/>described in the Simplified BSD License. <lb/></front>

			<div type="toc">Table of Contents <lb/>1. Introduction . . . . . . . . . . . . . . . . . . . . . . . . <lb/>2 <lb/>2. iCAN Architecture and Key Technical Requirements . . . . . . <lb/>3 <lb/>2.1. Architecture . . . . . . . . . . . . . . . . . . . . . . <lb/>3 <lb/>2.2. Key technical requirements . . . . . . . . . . . . . . . <lb/>5 <lb/>2.2.1. Path quality assessment . . . . . . . . . . . . . . . <lb/>5 <lb/>2.2.2. Recognition and statistic of flows in devices . . . . <lb/>5 <lb/>2.2.3. Flow switching between paths . . . . . . . . . . . . <lb/>5 <lb/>3. Use Cases of iCAN . . . . . . . . . . . . . . . . . . . . . . <lb/>6 <lb/>3.1. Network load balancing . . . . . . . . . . . . . . . . . <lb/>6 <lb/>3.2. SLA assurance . . . . . . . . . . . . . . . . . . . . . . <lb/>6 <lb/>3.3. Fine-Granularity reliability . . . . . . . . . . . . . . <lb/>6 <lb/>4. Implementation Scenarios . . . . . . . . . . . . . . . . . . <lb/>6 <lb/>4.1. iCAN with SRv6 . . . . . . . . . . . . . . . . . . . . . <lb/>6 <lb/>4.2. iCAN with VxLAN . . . . . . . . . . . . . . . . . . . . . <lb/>7 <lb/>4.3. iCAN with MPLS/MPLS-TE . . . . . . . . . . . . . . . . . <lb/>7 <lb/>5. Standardization Requirements . . . . . . . . . . . . . . . . <lb/>7 <lb/>6. Security Considerations . . . . . . . . . . . . . . . . . . . <lb/>7 <lb/>7. IANA Considerations . . . . . . . . . . . . . . . . . . . . . <lb/>7 <lb/>8. Acknowledgements . . . . . . . . . . . . . . . . . . . . . . <lb/>7 <lb/>9. References . . . . . . . . . . . . . . . . . . . . . . . . . <lb/>8 <lb/>9.1. Normative References . . . . . . . . . . . . . . . . . . <lb/>8 <lb/>9.2. Informative References . . . . . . . . . . . . . . . . . <lb/>8 <lb/>Author&apos;s Address . . . . . . . . . . . . . . . . . . . . . . . . <lb/>8 <lb/></div>

			<body>1. Introduction <lb/>Traditional IP routing is shortest path based on static metrics, <lb/>which can fulfil basic requirement of connectivity. MPLS-TE brings <lb/>the capability of utilizing non-shortest paths, thus traffic dispatch <lb/></body>

			<note place="footnote">Liu <lb/>Expires January 9, 2020 <lb/></note>

			<page>[Page 2] <lb/></page>

			<note place="headnote">Internet-Draft <lb/>iCAN <lb/>July 2019 <lb/></note>

			<body>is doable; however, MPLS-TE in only a complementary mechanism because <lb/>of the scalability issue. Segment routing provides even more <lb/>flexibility that paths could be easily programmed; and along with the <lb/>controller, it could be scaled. <lb/>However, the above mentioned mechanism all run in the control plane, <lb/>which implies that they are not able to sense the data plane <lb/>situation in real-time, thus they are mostly for relative static <lb/>planning/controlling (minuets, hours or even day-level) of network <lb/>traffic and not able to adapt to the microscopic traffic change in <lb/>real-time (e.g. mili-second level). So, in real bearer networks <lb/>(metro, backbones etc.), it is always underload so that the redundant <lb/>resources could tolerant the traffic burst, results in a significant <lb/>waste of network resources. <lb/>This draft proposes the iCAN (Instant Congestion Assessment Network) <lb/>architecture to achieve autonomous adapt to traffic changes in real-<lb/>time in terms of switching flows between multiple forwarding paths. <lb/>iCAN includes following things: <lb/>o A mechanism between ingress and egress nodes to assess the path <lb/>congestion situation in RTT level speed, to recognize which paths <lb/>are underload and which are heavy loaded. <lb/>o Recognizing big flows and small flows in the device, in real time <lb/>o Ingress node dispatches flows to multiple paths, to make load <lb/>balance, or to guarantee SLA for specific flows <lb/>This draft also discusses use cases and implementation scenarios of <lb/>iCAN. <lb/>2. iCAN Architecture and Key Technical Requirements <lb/>2.1. Architecture <lb/></body>

			<note place="footnote">Liu <lb/>Expires January 9, 2020 <lb/></note>

			<page>[Page 3] <lb/></page>

			<note place="headnote">Internet-Draft <lb/>iCAN <lb/>July 2019 <lb/></note>

			<body>+-----------+ <lb/>| <lb/>| <lb/>| Controller| <lb/>| <lb/>| <lb/>+-----------+ <lb/>| <lb/>0.Multi-path | <lb/>Planning | <lb/>| <lb/>| <lb/>v <lb/>+-----------+ --------Path 1------------+----------+ <lb/>Imcoming Flows | Ingress |3.Flow swithing between paths | Egress <lb/>| <lb/>--------------&gt; | Router <lb/>| --------Path N------------| Router <lb/>| <lb/>| <lb/>| <lb/>| <lb/>| <lb/>+-/------\--+ &lt;--------------------------&gt; +----------+ <lb/>/ <lb/>\ <lb/>1.Path Quality Assessment <lb/>/ 2. Flow \ (simultaneusly on multiple paths) <lb/>/ recognition <lb/>/ <lb/>\ <lb/>As above figure shows, there are 3 entities: <lb/>1. Controller <lb/>-Responsible for planning multiple paths for a set of flows <lb/>that could be aggregated to a pair of Ingress/Egress routers. <lb/>-After delivering the planned paths to the ingress router, the <lb/>controller would need nothing to do. <lb/>2. Ingress router: <lb/>-Serves as a local &quot;controller&quot; for the iCAN system. <lb/>-Responsible for triggering the path congestion assessment, <lb/>which is coordinated with the egress router through a <lb/>measurement protocol. <lb/>-After getting the assessment results, the ingress router would <lb/>calculate which flows need to be switched to a different path, <lb/>in order to make the paths load balanced or to assure the <lb/>transport quality of a certain of important flows. <lb/>-In order to do the path switching calculation, the ingress <lb/>router needs to recognize the TopN flow passing by it, since <lb/>switching the big flows would make the most effort. <lb/></body>

			<note place="footnote">Liu <lb/>Expires January 9, 2020 <lb/></note>

			<page>[Page 4] <lb/></page>

			<note place="headnote">Internet-Draft <lb/>iCAN <lb/>July 2019 <lb/></note>

			<body>3. Egress router: <lb/>-Only needs to coordinate with the ingress router to do the <lb/>path assessment. <lb/>2.2. Key technical requirements <lb/>2.2.1. Path quality assessment <lb/>o Req-1: the assessment MUST reflex the congestion status of the <lb/>paths. (Note: a candidate congestion metric is proposed as: <lb/>[I-D.dang-ippm-congestion].) <lb/>o Req-2: the assessment SHOULD be done within a RTT timeslot. Since <lb/>iCAN is to adapt the traffic change in real-time, the assessment <lb/>needs to be done very fast. <lb/>o Req-3: the assessment MUST be done for multiple paths between the <lb/>same ingress/egress routes simultaneously. (Note: a candidate <lb/>congestion metric is proposed as: <lb/>[I-D.dang-ippm-multiple-path-measurement].) <lb/>2.2.2. Recognition and statistic of flows in devices <lb/>o Req-1: the device SHOULD be able to recognize TopN big flows <lb/>within a timeslot. <lb/>o Req-2: the device MAY need to statistic all flows&apos; amount within a <lb/>timeslot. <lb/>2.2.3. Flow switching between paths <lb/>o Req-1: the device SHOULD be able to recognize flow let. The flow <lb/>switching is done from the next flow let. <lb/>o Req-2: the device MAY need to actively generate gap to <lb/>artificially create flow let. If the flow needs to be switched <lb/>immediately, then the device would need to make the gap, to avoid <lb/>out-of-order packets arriving to the destination through multiple <lb/>paths. <lb/>o Req-3: the device SHOULD avoid oscillation of frequently switching <lb/>flows from one to another. <lb/>o Req-4: multiple ingress devices SHOULD be able to coordinate so <lb/>that they won&apos;t switch flows to the shared path at the same time, <lb/>to avoid potential congestion in the shared path. <lb/></body>

			<note place="footnote">Liu <lb/>Expires January 9, 2020 <lb/></note>

			<page>[Page 5] <lb/></page>

			<note place="headnote">Internet-Draft <lb/>iCAN <lb/>July 2019 <lb/></note>

			<body>3. Use Cases of iCAN <lb/>3.1. Network load balancing <lb/>Background problem: traffic is not balanced in current metro network. <lb/>While some links are heavily loaded, others might be still lightly <lb/>loaded: unbalance could lows down the service quality (e.g. SLA <lb/>could not be guaranteed in the heavily loaded links/paths); unbalance <lb/>could lows down the network utilization ratio (normally with 30%, <lb/>e.g. a 100G physical capacity network can only bear at most 30G <lb/>traffic, a huge waste of network infrastructure). <lb/>iCAN could be used for load balance among the multiple paths between <lb/>a pair of ingress/egress nodes. Once the network is balanced, the <lb/>real throughput of the network could be elevated significantly. <lb/>3.2. SLA assurance <lb/>Since iCAN could switch flow in real-time, it can guarantee a set of <lb/>important flows. Once the path which carries the important flows is <lb/>to be congested, the other flows could be switched to alternative <lb/>paths, and the important flows would stablely running in the original <lb/>path. <lb/>(More content TBD) <lb/>3.3. Fine-Granularity reliability <lb/>Traditional reliability protocols such as BFD, can only assess the <lb/>link on or off. With the path congestion assessment ability, iCAN <lb/>could also asses the quality degradation. <lb/>(More content TBD) <lb/>4. Implementation Scenarios <lb/>4.1. iCAN with SRv6 <lb/>-SR Multiple Explicit Paths <lb/>For example, there are 3 paths between the ingress and egress <lb/>nodes, and the multi-path is defined as a SR-List containing <lb/>LSP1/2/3. <lb/>The probe message detects the congestion status of the three SR-<lb/>list paths. The edge device adjusts the load balancing between <lb/>the three paths according to the congestion status of the three <lb/></body>

			<note place="footnote">Liu <lb/>Expires January 9, 2020 <lb/></note>

			<page>[Page 6] <lb/></page>

			<note place="headnote">Internet-Draft <lb/>iCAN <lb/>July 2019 <lb/></note>

			<body>SR-lists, and switch the flows from the path with a high <lb/>congestion to the path with a low congestion. <lb/>-SR Multiple Explicit+Loose Paths <lb/>In loose path scenario, there needs to be an additional approach <lb/>to probe the specific paths of a SR tunnel. After that, <lb/>operations on the probed paths are the same as explicit path <lb/>scenario. <lb/>4.2. iCAN with VxLAN <lb/>TBD. <lb/>4.3. iCAN with MPLS/MPLS-TE <lb/>TBD. <lb/>5. Standardization Requirements <lb/>1. Multi-path Planning (North Interface between Controller and <lb/>devices) <lb/>2. Path Congestion Assesment (Horizontal Interface between devices), <lb/>mostly regarding to Req-1&amp;2&amp;3 described in Section 2.2.1 . <lb/>3. Flow Switching Negotiation (Horizontal Interface between <lb/>devices), mostly regarding to Req-3&amp;4 described in Section 2.2.3 <lb/>. <lb/>(More content TBD.) <lb/>6. Security Considerations <lb/>TBD. <lb/>7. IANA Considerations <lb/>TBD. <lb/></body>

			<div type="acknowledgement">8. Acknowledgements <lb/>Very valuable comments were from Shunsuke Homma, Mikael Abrahamsson <lb/>and Bruno Decraene. <lb/>A commercial router hardware based prototype had been implemented to <lb/>prove the machinisms discussed in the document are workable. <lb/></div>

			<note place="footnote">Liu <lb/>Expires January 9, 2020 <lb/></note>

			<page>[Page 7] <lb/></page>

			<note place="headnote">Internet-Draft <lb/>iCAN <lb/>July 2019 <lb/></note>

			<listBibl>9. References <lb/>9.1. Normative References <lb/>[RFC2119] Bradner, S., &quot;Key words for use in RFCs to Indicate <lb/>Requirement Levels&quot;, BCP 14, RFC 2119, <lb/>DOI 10.17487/RFC2119, March 1997, <lb/>&lt;https://www.rfc-editor.org/info/rfc2119&gt;. <lb/>[RFC2629] Rose, M., &quot;Writing I-Ds and RFCs using XML&quot;, RFC 2629, <lb/>DOI 10.17487/RFC2629, June 1999, <lb/>&lt;https://www.rfc-editor.org/info/rfc2629&gt;. <lb/>9.2. Informative References <lb/>[I-D.dang-ippm-congestion] <lb/>Dang, J. and J. Wang, &quot;A One-Path Congestion Metric for <lb/>IPPM&quot;, draft-dang-ippm-congestion-01 (work in progress), <lb/>March 2019. <lb/>[I-D.dang-ippm-multiple-path-measurement] <lb/>Dang, J. and J. Wang, &quot;A Multi-Path Concurrent Measurement <lb/>Protocol for IPPM&quot;, draft-dang-ippm-multiple-path-<lb/>measurement-01 (work in progress), March 2019. <lb/></listBibl>

			Author&apos;s Address <lb/>			

			<front>Bing Liu <lb/>Huawei Technologies <lb/>Q14, Huawei Campus <lb/>No.156 Beiqing Road <lb/>Hai-Dian District, Beijing 100095 <lb/>P.R. China <lb/>Email: leo.liubing@huawei.com <lb/></front>

			<note place="footnote">Liu <lb/>Expires January 9, 2020 <lb/></note>

			<page>[Page 8] </page>


	</text>
</tei>
