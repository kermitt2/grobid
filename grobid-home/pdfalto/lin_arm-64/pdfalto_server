#!/bin/bash

# Timeout in seconds
timeout=20
# Interval between checks if the process is still alive
interval=1
# Delay between posting the SIGTERM signal and destroying the process by SIGKILL
delay=0
# Default limit for the memory usage by this bash script
memory_limit=6242304

# Extract the base command name by removing "_server" suffix
command=${0%_server}
args=("$@")
pdfalto_params=()

# Process command line arguments
for ((n=0; n<"$#"; n++)); do
   case "${args[n]}" in
         --timeout) 
	      timeout=${args[n+1]}
              ((n++))
              ;;
         --ulimit) 
          memory_limit=${args[n+1]}
              ((n++))
              ;;
         *)
            # Properly handle arguments with spaces
            if [[ -n "${args[n]}" ]]; then
                pdfalto_params+=("${args[n]}")
            fi
              ;;
    esac
done

# Check if command exists and is executable
if [[ ! -x "$command" ]]; then
    echo "Error: Command '$command' not found or not executable" >&2
    exit 1
fi

#echo memory_limit $memory_limit
# Limit the memory usage by this bash script
ulimit -Sv $memory_limit

# Start background process to monitor and enforce timeout
# kill -0 pid   Exit code indicates if a signal may be sent to $pid process.
(
    ((t = timeout))

    while ((t > 0)); do
        sleep $interval
        kill -0 $$ || exit 0
        ((t -= interval))
    done

    # Be nice, post SIGTERM first
    # The 'exit 0' below will be executed if any preceding command fails.
    kill -s SIGTERM $$ && kill -0 $$ || exit 0
    sleep $delay
    kill -s SIGKILL $$
) 2>/dev/null &

# Execute the actual command with parameters
exec "$command" "${pdfalto_params[@]}"